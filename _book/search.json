[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Análisis Criminológico de Datos",
    "section": "",
    "text": "Introducción\nEste libro tiene como objetivo apoyar la capacitación a los integrantes de la Subsecretaría de Prevención del Delito en el curso de Análisis criminológico de datos. A través de una guía práctica, se proporcionará a los lectores las habilidades necesarias para limpiar, estructurar y analizar datos de una manera rigurosa y efectiva. El libro está diseñado para proporcionar una comprensión sólida de las técnicas de análisis exploratorio y descriptivo de datos, así como de las técnicas de limpieza y transformación de datos."
  },
  {
    "objectID": "marco.html#corrientes-pincipales-de-la-criminología",
    "href": "marco.html#corrientes-pincipales-de-la-criminología",
    "title": "1  Marco de Referencia",
    "section": "1.1 Corrientes Pincipales de la Criminología",
    "text": "1.1 Corrientes Pincipales de la Criminología\n\nEl comportamiento criminal a nivel individual como una desviación de la normalidad Análisis de las características - sexo, educación, nivel socioeconómico, entre otros -, influencia familiar y experiencias de vida de los sujetos que desarrollan carreras criminales (Harris, 1977; Pratt y Cullen, 2005; Travers y Howard-Wagner, 2013).\nRacionalidad económica del crimen. Decisiones de costo -función del riesgo e intensidad de castigo) y beneficio (ingreso) de cometer un crimen; y también las condiciones de fomento y control del comportamiento criminal que en forma agregada pueden conducir a equilibrios criminales de menor o mayor intensidad (Fender, 1999; Bergman, 2019).\nInfluencia de características del territorio sobre la concentración geográfica de actividades criminales.\n\nReproducción de comportamientos criminales en barrios socialmente desorganizados (Kubrin y Mioduszewski, 2019; Sampson y Grooves, 1989),\nCondiciones contextuales que generan oportunidades para la realización de crímenes (Kennedy y Forde, 1990; Olaghere y Lum, 2018)."
  },
  {
    "objectID": "marco.html#integración-de-teorías-criminológica",
    "href": "marco.html#integración-de-teorías-criminológica",
    "title": "1  Marco de Referencia",
    "section": "1.2 Integración de Teorías Criminológica",
    "text": "1.2 Integración de Teorías Criminológica\n\n\n\nFigure 1.1: Integración de Teorías Criminológica"
  },
  {
    "objectID": "marco.html#ley-de-la-concetración-espacial-del-crimen",
    "href": "marco.html#ley-de-la-concetración-espacial-del-crimen",
    "title": "1  Marco de Referencia",
    "section": "1.3 Ley de la Concetración Espacial del Crimen",
    "text": "1.3 Ley de la Concetración Espacial del Crimen\nEmpíricamente se ha observado que un alto porcentaje de los crímenes (50%) se concentra en una pequeña fracción (3% - 8%) de las calles de una ciudad (Sherman, 1989)\n\n\n\nFigure 1.2: Lee, Eck, Soo & Martinez, 2017\n\n\nEsto se ha confirmado tanto en países occidentales industrializados (Weisbrud, 2015) como en América Latina (Chainey et al., 2019; Jaitman y Azenjam, 2016; Ortega et al, 2015)."
  },
  {
    "objectID": "marco.html#teorías-de-oportunidad-del-crimen",
    "href": "marco.html#teorías-de-oportunidad-del-crimen",
    "title": "1  Marco de Referencia",
    "section": "1.4 Teorías de Oportunidad del Crimen",
    "text": "1.4 Teorías de Oportunidad del Crimen\nTeoría de actividades rutinarias (Cohen y Felson, 1979) probabilidad de encuentro entre agresor y víctima en situación de vulnerabilidad.\n\n\n\nFigure 1.3: Teoría de actividades rutinarias (Cohen y Felson, 1979)\n\n\nRelaciones espaciales complejas entre:\n\nResidencia de víctima\nGuardianes en el hogar\nResidencia del agresor\nLugares propicios al crimen\nPatrones de movilidad\nSistemas de transporte\n\nDiversidad geográfica de fenómenos criminales (Frank et al., 2011)"
  },
  {
    "objectID": "marco.html#teoría-de-desorganización-social",
    "href": "marco.html#teoría-de-desorganización-social",
    "title": "1  Marco de Referencia",
    "section": "1.5 Teoría de Desorganización Social",
    "text": "1.5 Teoría de Desorganización Social\nHipótesis: vivir en barrios desfavorecidos tiene un efecto negativo en las oportunidades de vida de los residentes, a iguales características individuales\n\n\n\nFigure 1.4: Teoría de Desorganización Social, Sampson, 2012\n\n\nEl capital material, social y cultural está desigualmente distribuido entre barrios segregados de alto y bajo nivel socioeconómico\nDiversos problemas de criminalidad y salud tienden a agruparse en barrios vulnerables\nCírculo vicioso de acumulación local de desventajas, de consolidación de subculturas criminales y de disputa del monopolio de la violencia"
  },
  {
    "objectID": "marco.html#equilibrio-criminal-inestable-en-américa-latina",
    "href": "marco.html#equilibrio-criminal-inestable-en-américa-latina",
    "title": "1  Marco de Referencia",
    "section": "1.6 Equilibrio Criminal Inestable en América Latina",
    "text": "1.6 Equilibrio Criminal Inestable en América Latina\n\n\n\nFigure 1.5: Bergman, 2018, “More Money More Crime”"
  },
  {
    "objectID": "marco.html#evolución-de-las-manifestaciones-territoriales-de-criminalidad-en-chile",
    "href": "marco.html#evolución-de-las-manifestaciones-territoriales-de-criminalidad-en-chile",
    "title": "1  Marco de Referencia",
    "section": "1.7 Evolución de las manifestaciones territoriales de criminalidad en Chile:",
    "text": "1.7 Evolución de las manifestaciones territoriales de criminalidad en Chile:\nEfectos del estallido social y de la pandemia de Covid-19.\nLa delincuencia y la sensación de victimización son problemas persistentes en Chile y América Latina (ENUSC, 2016). Este continente es el más violento del mundo, con altos niveles de violencia armada, un poder creciente de las organizaciones ilegales y capacidades limitadas de control y disuasión de los Estados. En Chile, se estima que el costo de la delincuencia asciende a 410.000 pesos por habitante, equivalente al 2,8% del PIB, siendo el cuarto mayor en el continente (Jaitman et al, 2017). Más allá de cualquier estimación económica, este fenómeno tiene un costo incalculable para las personas, en particular cuando son afectadas por la pérdida de seres queridos o en su integridad física y/o moral. Además, los trastornos políticos y sociales generados por el crecimiento y diversificación de actividades criminales puede generar riesgos estructurales para la seguridad pública y la estabilidad democrática (Bergman, 2019). Diversas disciplinas y teorías han desarrollado perspectivas complementarias para analizar fenómenos criminales. Primero, la investigación del comportamiento criminal a nivel de individuos como una desviación de la normalidad se ha enfocado tradicionalmente en el análisis de las características (sexo, educación, nivel socioeconómico, entre otros), influencia familiar y experiencias de vida de los sujetos que desarrollan carreras criminales (Harris, 1977; Pratt y Cullen, 2005). Segundo, estudios que se enfocan en la influencia de características del territorio sobre el comportamiento de grupos sociales, y sea en términos de la reproducción de comportamientos criminales en barrios socialmente desorganizados (ref), o identificando condiciones contextuales que generan oportunidades para la realización de crímenes (ref). Tercero, modelando la racionalidad microeconómica del crimen en términos de decisiones de costo (en función del riesgo e intensidad de castigo) y beneficio (ingreso) de cometer un crimen (refs); y también las condiciones de fomento y control del comportamiento criminal que en forma agregada pueden conducir a equilibrios criminales de menor o mayor intensidad (Fender, 1999).\nEsta documento plantea desde el segundo tipo de estudios, correspondiente a la criminología geográfica y ecológica, y además incluye elementos de los otros dos, para complementar el marco de análisis de procesos de cambio de equilibrio criminal y aportar observaciones etnográficas para contextualizar este análisis en barrios vulnerables de Chile. En este ámbito, la teoría de los Efectos de Barrio (Neighborhood Effects; Sampson et al, 2002; Galster, 2012) ofrece un marco teórico amplio que permite integrar múltiples perspectivas y niveles de análisis para el estudio de la influencia del entorno geográfico en las oportunidades de vida de las personas, incluyendo su eventual compromiso en actividades criminales. Los Efectos de Barrio podrían influir en la salud, desempeño educativo y laboral, relaciones interpersonales y otros, pero los efectos de contagio de comportamientos criminales y consumo de drogas, entre pares del vecindario - como agravante de la reproducción familiar - son particularmente significativos y recurrentes en distintos casos de estudio (Case & Katz, 1991; Graif et al, 2014; entre otros). En este sentido, la teoría de los Efectos de Barrio es ampliamente coincidente con la teoría de la Desorganización Social, respecto a la existencia de condiciones ecológicas de vulnerabilidad socioeconómica que podrían incrementar la exposición al crimen (ref).\nLa teoría de la Desorganización Social (Shaw y McKay, 1942) fue uno de los primeros intentos contemporáneos para explicar por qué determinadas condiciones de vida a nivel de comunidades podían incentivar comportamientos criminales en sus miembros. Diversos estudios en esta línea, desarrollados principalmente en EE.UU. han vinculado la desorganización social con altas densidades de población, movilidad residencial, diversidad étnica, carencia material, inestabilidad familiar, carencia de capital social y debilidad de redes interpersonales. Estas condiciones reducirían la efectividad de los mecanismos de control social e incentivarían la adopción de comportamientos criminales (Engelen et al., 2016; Collazos et al., 2019; Sampson y Groves, 1989; Sampson, Raudenbush y Earls, 1997). En contraparte, cabe advertir que el origen de estos problemas radica en injusticias estructurales que reproducen la pobreza y la delincuencia a través de desigualdades de oportunidad, inseguridad social y sesgos del sistema penal (Wacquant, 2008).\nEstudios más recientes en el marco de los Efectos de Barrio han expandido el espectro de análisis geográfico, considerando redes de barrios en las que circulan individuos desarrollando sus actividades cotidianas (Graif et al, 2014). De este modo se observa una gran heterogeneidad de exposición al crimen en contextos no-residenciales, diferenciando las experiencias de individuos que residen en un mismo barrio. Desde este ángulo, los Efectos de Barrio convergen conceptualmente con la teoría de las Actividades Rutinarias, otra línea principal de la criminología ecológica, que analiza la distribución espacio-temporal de las oportunidades para delinquir.\nLa teoría de las Actividades Rutinarias (Cohen y Felson, 1979) se enfoca en el análisis de la localización de las oportunidades para delinquir. Esta teoría explica la actividad criminal contra personas o lugares a partir de la interacción de tipos de actores: delincuentes motivados, objetivos vulnerables y (ausencia de) guardianes capaces, sean estos agentes de la ley, vecinos o propietarios (Bottoms & Wiles, 1997). Por ejemplo, los robos a residencias ocurren con mayor frecuencia en períodos de ausencia de sus ocupantes (Cohen y Cantor, 1981). Asimismo, la concentración de equipamientos criminógenos, como bares, supermercados y estaciones de servicio, se asocia a tasas locales de criminalidad más altas que en áreas residenciales de la ciudad (Bernasco y Block, 2011; Jones y Pridemore, 2019) Las calles con altos flujos de personas y muchos objetivos potenciales suelen tener mayores riesgos de delincuencia, debido a la elevada probabilidad de interacción entre delincuentes y víctimas potenciales (Bernasco y Luykx, 2003; Beavon et al, 1994).\nLas distintas teorías criminológicas mencionadas aportan perspectivas complementarias – individuales o territoriales, sicosociales o económicas - que pueden ser integradas para analizar fenómenos criminales multidimensionales y complejos. Diversos estudios han mostrado que variables territoriales correspondientes a la teoría de las actividades rutinarias tienen efectos más fuertes y consistentes en los patrones de concentración de la delincuencia, pero al mismo tiempo demuestran efectos relevantes de variables que representan condiciones de desorganización social (Garreton, Dammert, Berroeta y Sanchez, en revisión; Jones y Pridemore, 2019; Weisbrud, 2012). Empíricamente se ha constatado que un alto porcentaje de los crímenes se concentra en una pequeña fracción de las calles de una ciudad (Sherman, 1989), lo que puede explicarse por la concentración de oportunidades para delinquir en barrios con alta afluencia de público y por condiciones de desorganización social en barrios socialmente vulnerables . Existe amplia evidencia internacional que confirma esta afirmación, tanto en países occidentales industrializados (Weisbrud, 2015) como en América Latina (Chainey et al., 2019; Jaitman y Azenjam, 2016; Ortega et al, 2015).\nEn Chile, diversas investigaciones han generado evidencia relevante acerca de procesos criminales, con enfoques disciplinarios específicos. De la Fuente et al (2011) demostró que la frecuencia de delitos contra la propiedad varía en función de factores ecológicos como la pobreza, desempleo, densidad de población, eficacia policial y otros, mediante un análisis econométrico de un panel de 13 Regiones de Chile en el período 1990-2008. Un análisis más reciente (FK Economics, 2019), con datos de corte transversal para el año 2019 y agregados a nivel comunal, también reporta correlaciones significativas de éstos y otros factores con un espectro más amplio de delitos, aunque presenta discrepancias importantes con el anterior en cuanto a metodología y resultados. Baloian et al (2017) desarrollaron un modelo predictivo de diversos delitos contra la propiedad, basado en un análisis microgeográfico de variables de contexto. Ortega (2014), aporta una aguda observación etnográfica de procesos de reproducción local de una subcultura de violencia, criminalidad, alcoholismo y drogadicción en una comuna del Gran Santiago. Este estudio en profundidad describe lúcidamente las narrativas de adolescentes que aspiran a desarrollar carreras delictuales, junto a sus pares del barrio. Evitando estigmatizarlos, estos casos sustentan una crítica estructural a una sociedad que ofrece escasas posibilidades de movilidad social a través de la educación y el empleo formal (Espinoza et al, 2017), que tolera altos niveles de segregación en sus ciudades (Garreton et al, 2020) y que criminaliza la pobreza a través de los sistemas policial y penal (ref).\nAnalizando esta evidencia, consideramos pertinente desarrollar un análisis amplio y contingente de la criminalidad territorial en Chile. Existen indicios preocupantes de diversificación y sofisticación que sugieren un fortalecimiento de actividades criminales (PDI, 2018). De aquí en adelante, utilizaremos el concepto de “actividad criminal” para referirnos a un conjunto de acciones ilegales, cuyo objetivo es generar ingreso, que son realizadas por actores heterogéneos, descentralizados y coordinados a través de mercados ilegales. En otro nivel, reservaremos el término “organización criminal” para estructuras criminales de mayor escala, que realizan actividades criminales y en ocasiones actividades legales, por ejemplo los carteles latinoamericanos de narcotráfico o las mafias de EE.UU., Italia y otros países (Paoli, 2014). La investigación de esto último escapa a los objetivos y metodologías de este proyecto.\nPara analizar la evolución de las actividades criminales, es necesario complementar el marco teórico hasta aquí presentado con teorías que abordan este fenómeno desde un punto de vista de procesos históricos en países latinoamericanos. Una paradoja notable en América Latina ha sido el aumento paralelo del crecimiento económico y de los niveles de inseguridad y actividad criminal, al contrario de lo observado en países industrializados (Bergman, 2019). Aunque existen situaciones diversas en distintos países, durante las últimas tres décadas se ha constatado una considerable expansión económica en este continente, junto a una importante reducción de la pobreza y en menor medida de la desigualdad (Amarante et al, 2016). Sin embargo, no se ha observado un fortalecimiento concomitante de las capacidades estatales de seguridad civil y social. Así, esta paradoja del desarrollo latinoamericano se explicaría por equilibrios de alta criminalidad, generados por oportunidades económicas crecientes en mercados ilícitos e ilegales, ante el desarrollo mucho más lento de capacidades investigativas y disuasivas en los sistemas policiales y judiciales (Bergman, 2019). Los diferentes niveles de actividad criminal observados en distintos países latinoamericanos pueden entenderse como equilibrios múltiples, que resultan del comportamiento agregado de individuos que toman decisiones racionales de beneficios y costos de cometer crímenes, sopesando el ingreso esperado con la probabilidad y consecuencias de ser castigados (Fender, 1999).\nLos procesos de transición de equilibrios de baja a alta actividad criminal observados en países de América Latina desde la mitad del siglo XX permiten delinear un sendero que consta de seis pasos (Bergman, 2019). Primero, la heterogeneidad geográfica de oportunidades económicas y capacidades disuasivas, que permite la intensificación de actividades criminales en territorios particulares. Segundo, un equilibrio inestable en niveles intermedios de actividad criminal, en el que el Estado lucha por contener el crecimiento de mercados criminales. Tercero, un estresor mayor que desestabiliza este equilibrio precario, por ejemplo, el impacto que tuvo el tráfico de drogas ilegales en México. Cuarto, un deterioro acelerado de la seguridad pública, cuando las capacidades de organización criminal empiezan a superar y/o a corromper las capacidades de disuasión estatal. Quinto, la diversificación de actividades criminales en una amplia gama de mercados ilícitos e ilegales, incluyendo extorsiones y secuestros, y la eventual estructuración de organizaciones criminales de gran escala. Sexto, un equilibrio de alta actividad criminal, en el que el Estado es incapaz de recuperar el monopolio de la violencia (Op. Cit.). Desde una perspectiva de política pública territorial, es clave evitar la transición de situaciones en que la disputa violenta por mercados ilícitos emergentes, generalmente de drogas, escala a la diversificación de fuentes de ingreso criminal con actividades extremadamente violentas como la extorsión y el secuestro (Bergman, 2018).\nAunque el narcotráfico es un elemento clave en la transición hacia equilibrios de alta criminalidad, las actividades criminales pueden abarcar un amplio espectro de mercados ilícitos (ej.: contrabando de bienes legales) e ilegales (ej.: tráfico de personas). En América Latina, los mercados ilegales incluyen drogas, prostitución, juegos de azar y apuestas, reducción de especies, tráfico de personas, secuestro y extorsión, entre otros (Bergman, 2018). La consolidación comercial en mercados ilegales requiere un alto grado de compromiso criminal y un cierto nivel de tolerancia y/o corrupción de las autoridades ((Holanda, 2016, Dammert y Sarmiento, 2019). La violencia es un resultado potencial de estas actividades criminales, pero éstas no son necesariamente violentas. La violencia tiene costos materiales e inmateriales, y la decisión de usarla se basa en un análisis de costo-beneficio. Cuando las leyes se aplican de manera efectiva y las sanciones son severas, aumenta la probabilidad de detección y castigo del comercio ilícito, y disminuye el alcance de la violencia (Bergman, 2018).\nEn comparación con el resto de América Latina, Chile goza de niveles relativamente bajos de actividad criminal y violencia (Solar, 2018). En particular, este país tiene tasas comparativamente bajas de homicidios, corrupción y temor a organizaciones criminales, en comparación con el resto de la región (Jaitman et al, 2017). Además, Chile ha tenido una trayectoria diferenciada en términos de probidad de las autoridades y control de la corrupción, con baja tolerancia social a actividades tales como el soborno o la colusión entre grupos criminales y agentes de la ley y de seguridad (Bonner, 2013; Silva 2016). Sin embargo, desde el retorno a la democracia en 1990, surgieron diversas oportunidades criminales en relación a la apertura del comercio internacional y el crecimiento económico. Además, la fuerte desigualdad económica y la segregación de las ciudades chilenas ha generado focos persistentes de vulnerabilidad social y pobreza, que presentan condiciones favorables para el arraigo de organizaciones criminales (Dammert y Malone, 2003; Garreton, 2017, 2020).\nDe este modo, el temor a la delincuencia y las percepciones de victimización han mantenido un rol protagónico en el debate público e incluso se han agudizado en años recientes (Dammert, 2013; FK Economics, 2019). El discurso de una probidad excepcional de las autoridades chilenas en el contexto latinoamericano contrasta con la baja sostenida de la aprobación y confianza en las instituciones y con una inquietud creciente entre expertos e instituciones policiales respecto al crecimiento y sofisticación del crimen organizado en Chile (PDI, 2018, 2019; ¿otros?). Un conjunto de desventajas - segregación urbana generalizada en Chile (Garreton, 2020), reproducción de comportamientos criminales en el sistema penal, casi nula movilidad social de personas con bajo nivel educativo y otras formas de desigualdad - se intersectan a escala de barrios, lo que podría ofrecer arraigo a organizaciones criminales emergentes. Estas condiciones corresponden a lo descrito en otros países como el segundo de los seis pasos (arriba mencionados) de transición hacia un equilibrio de alta criminalidad (Bergman, 2019).\nEn esta situación, cabe preguntarse si el actual estado de crisis, generado por el impacto sucesivo del estallido social ocurrido a fines del año 2019 (Guell, 2019) y de la pandemia de Covid-19 actualmente en desarrollo, podría ser un estresor mayor capaz de desencadenar un deterioro progresivo de la seguridad pública. Cabe destacar que revertir la pérdida de control del monopolio de la violencia que implica el paso a esta última fase implicaría un altísimo costo social (Bergman, 2018).\nEn suma, las trayectorias de recrudecimiento del crimen y la violencia observadas en otros países de América Latina alertan de un riesgo latente en Chile, a saber, que una crisis social, sanitaria y económica como la que atravesamos actualmente podría desencadenar la transición hacia un régimen de alta criminalidad. En complemento a la labor investigativa propiamente policial, el análisis de las manifestaciones territoriales de la actividad criminal puede generar evidencia robusta para el diseño de políticas de prevención de la delincuencia, sociales o situacionales, enfocadas en la seguridad pública y/o recuperación de barrios con fuerte arraigo de actividades criminales. Para ello, proponemos integrar tres marco teóricos complementarios. Primero, la teoría de Efectos de Barrio, que ofrece la amplitud conceptual necesaria para interpretar evidencia diversa (individual, colectiva, cuantitativa, cualitativa, etc) en forma coherente (Galster, 2012). Segundo, las teorías de Desorganización Social y Actividades Rutinarias, conceptualmente relacionadas a los Efectos de Barrio, que aportan una tradición analítica robusta y precisa en cuanto a variables territoriales relevantes para el análisis espacial de las actividades criminales. Tercero, una adaptación de la teoría de equilibrio criminal al contexto Latinoamericano, que sugiere senderos (path dependence) conducentes a equilibrios de alta criminalidad (Bergman, 2019), permitiendo definir hipótesis de causalidad y co-dependencia de actividades criminales (Figure 1.6), que pueden ser analizadas cuantitativamente con conceptos y variables territoriales definidos por las teorías anteriores.\n\n\n\nFigure 1.6: Sendero hipotético de diversificación de delitos hacia un equilibrio de alta criminalidad"
  },
  {
    "objectID": "marco.html#autoría",
    "href": "marco.html#autoría",
    "title": "1  Marco de Referencia",
    "section": "1.8 Autoría",
    "text": "1.8 Autoría\nMatías Garretón, Investigador asociado COES,\nemail: matiasgarreton@gmail.cl"
  },
  {
    "objectID": "datos.html#introducción",
    "href": "datos.html#introducción",
    "title": "1  Datos",
    "section": "1.1 Introducción",
    "text": "1.1 Introducción\nLa lectura y limpieza de datos es una tarea fundamental en el análisis de datos, ya que los datos pueden contener errores, valores faltantes, duplicados o información inconsistente. Estos problemas pueden afectar la calidad de los resultados obtenidos a partir del análisis y, en algunos casos, incluso invalidar las conclusiones. Por lo tanto, es importante que los datos se sometan a procesos de limpieza y transformación antes de ser utilizados en el análisis."
  },
  {
    "objectID": "datos.html#cargar-librerías-y-funciones",
    "href": "datos.html#cargar-librerías-y-funciones",
    "title": "2  Datos",
    "section": "2.2 Cargar Librerías y Funciones",
    "text": "2.2 Cargar Librerías y Funciones\nEn primer lugar se procederá a cargar las librerías necesarias para realizar el tratamiento y transformaciones a los datos.\n\n## Manipulación de Tablas\nlibrary(dplyr)\nlibrary(tidyr)\n\n## Manipulación de Datos Espaciales\nlibrary(sf)\n\n## Manipulación de Excel\nlibrary(openxlsx)\n\n## Graficos\nlibrary(ggplot2)\nlibrary(plotly)"
  },
  {
    "objectID": "datos.html#lectura-de-datos",
    "href": "datos.html#lectura-de-datos",
    "title": "1  Datos",
    "section": "1.2 Lectura de Datos",
    "text": "1.2 Lectura de Datos\nUno de los objetivos principales de este capítulo es replicar fielmente los procesos de lectura, limpieza y estructura que realizan normalmente los analistas. Por lo tanto, se requiere tener bases de datos con la misma forma y estructura que las originales. Para este fin, se utilizará una base de datos llamada samples, que es una copia de la original, pero anonimizada aleatoriamente.Los datos originales fueron anomimizados mediante distribución aleatoria por columna, lo que impostibilita reconstruir la base original y a su vez los datos mantienen su estructura y tipología tal como se distribuyen los datos originales.\n\n\n\n\n\n\nDirectorio de Trabajo\n\n\n\nDefinir correctamente el directorio de trabajo en R, que corresponde al lugar o carpeta de origen de donde R va acceder a los diferentes archivos. (Ver Section A.5)\n\n\n\n1.2.1 Datos CSV\nUna forma común de almacenar tablas es mediante archivos de valores separados por comas (CSV). Estos archivos tienen una extensión .csv y se utilizan ampliamente para compartir datos porque son compatibles con muchos sistemas diferentes y ocupan relativamente poco espacio de almacenamiento. Una ventaja de usar archivos .csv es la disponibilidad de la función read.csv(), que está optimizada para importar archivos CSV y esta disponible por defeto en R base.\nLectura de Unitaria: A continuación procedermos a la lectura de uno de los archivos CSV. Recordar definir un directorio de trabajo que será el punto de partida donde se accederá a los diferentes archivos del proyecto. (Ver Section A.5)\n\n# 1. Definir Diferectorio de trabajo con setwd(\"\") o con Rstudio\n# 2. Lectura y asignar nombre de variables\n\npartes_1T_2015 &lt;- read.csv(\n  file = \"data/samples/Base Estadistica/CSV/partes_1er_trim_2015.csv\") \n\n# dim(partes_1T_2015)\n# str(partes_1T_2015)\n# head(partes_1T_2015)\n\nLectura de Secuencial: En este caso si todos los archivos que se van a leer se encuentran en la misma carpeta o directorio se recomienda que declare esa ruta en una variable en R y posteriormente genere la ruta completa adicionando solamente el nombre del archivo para esto usaremos la función paste0() para concatener cadenas de texto. (ver Section B.1.2)\n\n# Declarar la ruta en una variable (considerar que finaliza con slash \"/\")\npath_csv &lt;-  \"data/samples/Base Estadistica/CSV/\"\n\n# Partes\n# Declarar la ruta del archivo + nombre\npartes_1T_2015 &lt;- read.csv(file =  paste0(path_csv, \"partes_1er_trim_2015.csv\"))\npartes_2T_2015 &lt;- read.csv(file =  paste0(path_csv, \"partes_2do_trim_2015.csv\"))\n\n\n# Participaciones\nparticp_1T_2015 &lt;- read.csv(\n  file =  paste0(path_csv, \"participantes_1er_trim_2015.csv\"))\nparticp_2T_2015 &lt;- read.csv(\n  file =  paste0(path_csv, \"participantes_2do_trim_2015.csv\"))\n\nUnir Bases: Uno de los objetivos puede ser unificar o consolidar bases del mismo tipo pero de diferentes periodos, se procede a su unidicación utilizando una de las formas más simples que es mediante la función rbind() que unir por filas (rows).\n\n\n\n\n\n\nCantidad de Columnnas\n\n\n\nPara que funione correctamente debemos estar seguros que las candidad de columnas de todos los dataframes que se van a unir deben ser idénticos.\n\n\n\n# Verificar si la cantidad de columnas son identicas\nncol(partes_1T_2015)\nncol(partes_2T_2015)\n\n\n# Unir Partes\npartes_2015 &lt;-  rbind(partes_1T_2015, partes_2T_2015)\ndim(partes_2015)\n\n\n# Unir Participaciones\nparticipaciones_2015 &lt;-  rbind(particp_1T_2015, particp_2T_2015)\ndim(participaciones_2015)\n\nGuardar Bases Conbinadas: Aquí hau que tener claro cual será carpeta de destino para nuestro caso en data/resultados/combinadas esta carpeta debe existir en el directorio. La función que se usará para guardar es write.csv().\n\npath_out = \"data/resultados/combinadas/\"\n\nfile_name_partes &lt;- \"partes_2015.csv\"\nwrite.csv(x = partes_2015, file = paste0(path_out, file_name_partes))\n\n\nfile_name_particp &lt;- \"participaciones_2015.csv\"\nwrite.csv(x = participaciones_2015, file = paste0(path_out, file_name_particp))\n\n\n\n1.2.2 Datos TXT\nOtra forma de almacenar tablas de datos es mediante archivos de texto plano con extensión .txt y que tambien se utilizan ampliamente para compartir datos porque son compatibles con muchos sistemas diferentes y ocupan relativamente poco espacio de almacenamiento. Utilizaremos la función read.delim() que también es de R base.\n\n\n\n\n\n\nDefinir el elemento separador\n\n\n\nUna consideración importante, para que R entienda que los datos que lee desde un archivo TXT corresponden a tablas de datos, hay que declarar que caracter es separador, en lcaso de los archivos de samples es \"\\t\" que representa tab. Puede variar de cada tipo de archivo.\n\n\nLectura de Unitaria: A continuación procedermos a la lectura de uno de los archivos CSV. Recordar definir un directorio de trabajo que será el punto de partida donde se accederá a los diferentes archivos del proyecto. (Ver Section A.5)\n\n# 1. Definir Diferectorio de trabajo con setwd(\"\") o con Rstudio\n# 2. Lectura y asignar nombre de variables\n\npartes_1T_2015_txt &lt;- read.delim(\n  file = \"data/samples/Base Estadistica/TXT/partes_1er_trim_2015.txt\",\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE) \n\ndim(partes_1T_2015_txt)\nstr(partes_1T_2015_txt)\nhead(partes_1T_2015_txt)\n\nLectura de Secuencial: En este caso si todos los archivos que se van a leer se encuentran en la misma carpeta o directorio se recomienda que declare esa ruta en una variable en R y posteriormente genere la ruta completa adicionando solamente el nombre del archivo para esto usaremos la función paste0() para concatener cadenas de texto.\n\n# Declarar la ruta en una variable (considerar que finaliza con slash \"/\")\npath_txt &lt;-  \"data/samples/Base Estadistica/TXT/\"\n\n# Partes\n# Declarar la ruta del archivo + nombre\npartes_1T_2015_txt &lt;- read.delim(\n  file =  paste0(path_txt, \"partes_1er_trim_2015.txt\"),\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE)\n\npartes_2T_2015_txt &lt;- read.delim(\n  file =  paste0(path_txt, \"partes_2do_trim_2015.txt\"),\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE)\n\n\n# Participaciones\nparticp_1T_2015_txt &lt;- read.delim(\n  file =  paste0(path_txt, \"participantes_1er_trim_2015.txt\"),\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE)\n\nparticp_2T_2015_txt &lt;- read.delim(\n  file =  paste0(path_txt, \"participantes_2do_trim_2015.txt\"),\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE)\n\nUnir Bases:\n\n# Verificar si la cantidad de columnas son identicas\ndim(partes_1T_2015_txt)\ndim(partes_2T_2015_txt)\n\n\n# Unir Partes\npartes_2015_txt &lt;-  rbind(partes_1T_2015_txt, partes_2T_2015_txt)\ndim(partes_2015_txt)\n\n\n# Unir Participaciones\nparticipaciones_2015_txt &lt;-  rbind(particp_1T_2015_txt, particp_2T_2015_txt)\ndim(participaciones_2015_txt)\n\nGuardar Bases Conbinadas: La función que se usará para guardar es write.table().\n\npath_out = \"data/resultados/combinadas/\"\n\nfile_name_partes &lt;- \"partes_2015.txt\"\nwrite.table(x = partes_2015_txt, file = paste0(path_out, file_name_partes),\n            sep = \"\\t\", na = \"\", quote = FALSE, eol = \"\\n\")\n\n\nfile_name_particp &lt;- \"participaciones_2015.txt\"\nwrite.table(x = participaciones_2015_txt, file = paste0(path_out, file_name_particp),\n            sep = \"\\t\", na = \"\", quote = FALSE, eol = \"\\n\")\n\n\n\n1.2.3 Datos Espaciales SHP\nLos objetos espaciales en R representan datos georreferenciados, lo que significa que están vinculados a una ubicación en el mundo real. Los objetos espaciales se pueden representar en mapas y gráficos, y se pueden analizar para identificar patrones y tendencias en los datos. Para nuestro casos, los objetos espaciales son tipo puntos que representan casos policiales en formato shapefile.Para su lectura y manipulación utilizaremos la librería sf (Simple Features for R).\n\n\n\n\n\n\nLibrería sf\n\n\n\nEl uso de sf nos facilitará la manipulación de datos espaciales tipo vectorial como puntos, polígonos o líneas, su característica principal es que se trabaja como si fuese una tabla y en una sola columna almacena las información espacial (geometry)\n\n\nLectura de Unitaria: A continuación procedermos a la lectura de uno de los archivos Shapefiles con su estensión .shp. Para la lectura utilizaremos la función st_read()\n\n# 1. Cargar Librería\nlibrary(sf)\n# 2. Lectura y asignar nombre de variables\n\ncasos_T1_2015 &lt;- st_read(dsn = \"data/samples/Base Geo/casos_2015_t1.shp\") \n\ndim(partes_1T_2015_txt)\nstr(partes_1T_2015_txt)\npartes_1T_2015_txt\n\nLectura de Secuencial: En este caso si todos los archivos que se van a leer se encuentran en la misma carpeta o directorio se recomienda que declare esa ruta en una variable en R y posteriormente genere la ruta completa adicionando solamente el nombre del archivo para esto usaremos la función paste0() para concatener cadenas de texto.\n\n# Declarar la ruta en una variable (considerar que finaliza con slash \"/\")\npath_txt &lt;-  \"data/samples/Base Geo/\"\n\n# Casps\n# unir la ruta del archivo + nombre\ncasos_T1_2015 &lt;- st_read(paste0(path_txt, \"casos_2015_t1.shp\"))\ncasos_T2_2015 &lt;- st_read(paste0(path_txt, \"casos_2015_t2.shp\"))\n\nUnir Bases:\nNo se pueden unir ya que no tienen las misma columnas\n\n# Verificar si la cantidad de columnas son identicas\ndim(casos_T1_2015)\ndim(casos_T2_2015)\n\n\n# Unir Partes\ncasos_2015 &lt;-  rbind(casos_T1_2015, casos_T2_2015)\n# Error in rbind.data.frame(...) : \n  # numbers of columns of arguments do not match\n\nSolución 1: Unir solo las colunas en común\n\n# encontrar la columnas en común\ncommon &lt;- intersect(colnames(casos_T1_2015), colnames(casos_T2_2015))\n\n# unir bases seleccionando solo als columnas en común\ncasos_2015_s1 &lt;- rbind(casos_T1_2015[common], casos_T2_2015[common])\ncasos_2015_s1\n\nSolución 2: Unir y en la base faltante rellena con NA usando dplyr::bind_rows()\n\nlibrary(dplyr)\n\ncasos_2015_s2 &lt;- bind_rows(casos_T1_2015, casos_T2_2015)\ncasos_2015_s2 \n\nGuardar Bases Conbinadas: La función que se usará para guardar es write.table().\n\npath_out = \"data/resultados/combinadas/\"\n\nfile_name_comun &lt;- \"casos_2015_comun.shp\"\nst_write(casos_2015_s1, paste0(path_out, file_name_comun), delete_dsn = T)\n\n\n\nfile_name_all &lt;- \"casos_2015_all.shp\"\nst_write(casos_2015_s2, paste0(path_out, file_name_all), delete_dsn = T)"
  },
  {
    "objectID": "datos.html#unificar-bases",
    "href": "datos.html#unificar-bases",
    "title": "2  Datos",
    "section": "2.4 Unificar Bases",
    "text": "2.4 Unificar Bases\nLas bases están separadas por año por lo tanto se ban unificar para obtener un solo archivo, lo que facilitará hacer todas las transformaciones. Revisar las bases a unificar:\n\ndelitos_anuales &lt;-  list.files(\"data/delitos/raw\", full.names = T)\ndelitos_anuales\n\nLectura y unificación utilizando la librería Purrr, prdimeramente con la lista de objetos .rds con sus rutas completas se procederá a sus lecturas con la función de R base llamada readRDS() pero dentro del la función purrr::map_df() para que el resultado sea solo una tabla.\n\ndelitos_raw &lt;-  list.files(\"data/delitos/raw/\", full.names = T) %&gt;% \n  map_df(readRDS)"
  },
  {
    "objectID": "datos.html#seleccion-de-variables",
    "href": "datos.html#seleccion-de-variables",
    "title": "2  Datos",
    "section": "2.5 Seleccion de variables",
    "text": "2.5 Seleccion de variables\n\n# selección de variables\ncols_names &lt;- c(\"DELITO\", \"GRUPO\", \"CLASIFICAC\", \n                \"CATEGORIA\",\"GRUPO_DELI\", \"GRUPO_INTE\",\n                \"FECHA_DEL\",  \"DIA\",  \"MES\", \"ANO\",\n                \"HORA_DEL_D\", \"HORA24\", \"BLOQUE\",\n                \"LUGAR\", \"geometry\")\n\n\ndelitos_raw &lt;- delitos_raw %&gt;% \n  select_at(.tbl = ., .vars = cols_names)"
  },
  {
    "objectID": "datos.html#eliminar-duplicados",
    "href": "datos.html#eliminar-duplicados",
    "title": "2  Datos",
    "section": "2.6 Eliminar Duplicados",
    "text": "2.6 Eliminar Duplicados\nSe crea ID por cada registro considerando las variables de hora, fecha, delito_native, lon, lat. Como en nuestro caso la base de delitos en objeto espacial (Simple Features) se extraerá las columnas de latitud y longitud con la función sf2df() alojado en script de funciones generales (?sec-fuctions).\nPrimero creamos una variable temporal de delitos con las columnas de interés:\n\ndel &lt;-  delitos_raw %&gt;% \n  sf2df() %&gt;% #variable temporal tipo df (sacar lon lat)\n  dplyr::select(hora, fecha,delito_native,  lon, lat)\n\nhead(del[,1:5])\n\nSe genera el ID para valores únicos\n\ndelitos_raw$ID &lt;- cumsum(!duplicated(del[,1:5]))\n\nSe extraen los duplicados (son los duplicados)\n\nduplicados &lt;- delitos_raw[duplicated(delitos_raw$ID), ]\n# head(duplicados)\n\nid_casos_dup &lt;- duplicados$ID\n# table(delitos$ID %in%id_casos_dup)\n\nEliminar duplicados\n\ndelitos_clean &lt;- delitos_raw[!duplicated(delitos_raw$ID), ]\n# dim(delitos_clean)\n# head(delitos_clean)\n\n\n\n\n\n\n\n\n\n\n\n2.6.1 Imputar datos de Zonas Censales a los Delitos\nA la información correspondiente a casos policiales se le va a imputar información de zonas censales (Instituto Nacional de Estadísticas) a través de una operación espacial llamada inteserct entre los polígonos de las zonas censales con los puntos de los casos policiales.\nLectura de Zonas censales\n\nzonas &lt;- readRDS(\"data/ine/zonas_urb_consolidadas.rds\") %&gt;% \n  st_transform(32719)\nhead(zonas)\n\nImputar infomación censal a delitos, para lo cual se utilizará la función add_info_intersects() que está en el script de funciones.\n\nzonas_inf_fil &lt;- zonas %&gt;% \n  dplyr::select(NOM_REGION, PROVINCIA, NOM_PROVIN,\n         COMUNA, NOM_COMUNA, URBANO,\n         DISTRITO, LOC_ZON, GEOCODIGO)\n\ndelitos_info &lt;- add_info_intersects(zonas_inf_fil, delitos_clean)\n# dim(delitos_info)\n# head(delitos_info)\n\nGuardar los resultados\n\nsaveRDS(delitos_info, \"data/delitos/delitos_all_info.rds\")"
  },
  {
    "objectID": "datos.html#categorizar-los-delitos",
    "href": "datos.html#categorizar-los-delitos",
    "title": "2  Datos",
    "section": "2.7 Categorizar los delitos",
    "text": "2.7 Categorizar los delitos\nConsiderando que en los casos policiales tiene una diversa tipificación de delitos se procede a categorizarlos en grupos similares.\nPara facilitar el proceso de clasificación a cada tipo de delito se le asignará una Sigla que se encuentra en una hoja de un archivo excel.\n\ndel_sigla &lt;- read.xlsx(\"data/excel/delito_native.xlsx\", \n                       sheet = \"delitos\") %&gt;% \n  mutate(DELITO = toupper(DELITO)) %&gt;% \n  rename(Sigla =CATEGORIA)\nhead(del_sigla)\n\n  Sigla                                               DELITO\n1    vi ABANDONO DE CÓNYUGE O DE PARIENTES ENFERMOS ART. 352\n2  &lt;NA&gt;                         ABANDONO DE DESTINO ART. 254\n3    vi                                    ABANDONO DE HOGAR\n4    vi                    ABANDONO DE NIÑOS ART. 346 AL 351\n5    hr                               ABIGEATO ART. 448 BIS.\n6  &lt;NA&gt;             ABORTO COMETIDO POR FACULTATIVO ART. 345\n\n\nLa lista de categorías se encuentra en el mismo archivo Excel\n\ncategorias &lt;- read.xlsx(\"data/excel/delito_native.xlsx\", \n                        sheet = \"categorias\")\n  \nhead(categorias)\n\n      Tipo Sigla             Categoria Barrios_Comerciales\n1 Públicos    dd    Desordenes y daños                   0\n2 Públicos    ci       Comercio ilegal                   1\n3 Públicos    hr         Hurtos, robos                   1\n4 Públicos    rm Robos vehiculos motor                   1\n5 Públicos    rv   Robos con violencia                   1\n6 Públicos    rl      Riñas y lesiones                   0\n  Organizacion_criminal\n1                     0\n2                     1\n3                     0\n4                     1\n5                     0\n6                     0\n\n\nCon la sigla previamente creada se procede a categorizar cada uno de los casos policiales\n\ndelitos_cat &lt;- left_join(delitos_info, del_sigla,\n                         by = c(\"delito_native\" =\"DELITO\"))\n# head(delitos_cat)\n\n\n\ndelitos_cat &lt;- left_join(delitos_cat, categorias, \n                         by = \"Sigla\")\n# head(delitos_cat)\n\nGuardar los resultados\n\nsaveRDS(delitos_cat, \"data/delitos/delitos_all_categ.rds\")\n\nComo resultado del proceso anterior quedan muchos casos policiales sin categoría asignada los cuales se proceden a eliminar.\n\n# #Descartar los NA en Categoria\ndelitos_cat_sigla &lt;- delitos_cat%&gt;%\n  filter(!is.na(Categoria))\n\n# head(delitos_cat)\n# dim(delitos_cat_sigla)\n\nGuardar los resultados\n\nsaveRDS(delitos_cat_sigla, \"data/delitos/delitos_only_cat.rds\")"
  },
  {
    "objectID": "datos.html#filtrar-por-barrios-comerciales",
    "href": "datos.html#filtrar-por-barrios-comerciales",
    "title": "2  Datos",
    "section": "2.8 Filtrar por Barrios Comerciales",
    "text": "2.8 Filtrar por Barrios Comerciales\nFinalmente se procede a filtrar aquellos casos policiales que sean considerados en el proyecto de valuación de barrios comerciales.\n\ndelitos_cat_bc_URB &lt;- delitos_cat%&gt;%\n  filter(Barrios_Comerciales == 1) \n\nGuardar los resultados\n\nsaveRDS(delitos_cat_bc_URB, \"data/delitos/delitos_eval_bcom_urb.rds\")"
  },
  {
    "objectID": "datos.html#visualización-resultados-intermedios",
    "href": "datos.html#visualización-resultados-intermedios",
    "title": "2  Datos",
    "section": "2.9 Visualización Resultados Intermedios",
    "text": "2.9 Visualización Resultados Intermedios\n\nregion_num &lt;- \"05\"\ndel_reg &lt;-  delitos_cat_bc_URB %&gt;% \n  filter(region == region_num) \n\nmapview(del_reg, zcol = \"Categoria\")"
  },
  {
    "objectID": "panel.html#introducción",
    "href": "panel.html#introducción",
    "title": "3  Datos de Panel",
    "section": "3.1 Introducción",
    "text": "3.1 Introducción\nEn estadística y econometría, el término de datos de panel se refiere a datos que combinan una dimensión temporal con otra transversal.\nUn conjunto de datos que recoge observaciones de un fenómeno a lo largo del tiempo se conoce como serie temporal. Dichos conjuntos de datos están ordenados y la información relevante respecto al fenómeno estudiado es la que proporciona su evolución en el tiempo. Un conjunto transversal de datos contiene observaciones sobre múltiples fenómenos en un momento determinado. En este caso, el orden de las observaciones es irrelevante.\nUn conjunto de datos de panel recoge observaciones sobre múltiples fenómenos a lo largo de determinados períodos. La dimensión temporal enriquece la estructura de los datos y es capaz de aportar información que no aparece en un único corte.\nPara nuestro caso los datos de panel serán la densidad de delitos por zona censal y el orden temporal será construido con el mes y el año eso es lo que sale a continuación."
  },
  {
    "objectID": "panel.html#cálculo-de-total-delitos-por-espacio-y-tiempo",
    "href": "panel.html#cálculo-de-total-delitos-por-espacio-y-tiempo",
    "title": "3  Datos de Panel",
    "section": "3.2 Cálculo de Total Delitos por Espacio y tiempo",
    "text": "3.2 Cálculo de Total Delitos por Espacio y tiempo\nEn este punto se procederá a crear tablas de cálculo de total casos policiales por espacio las zonas censales, mientras que tiempo las variables de mes y año.\n\n\n\n\n\nPrimeramente se debe extraer mes y año de la variable fecha para esto se hará uso de la librería Lubridate para manipulación de la variables temporales.\n\ndelitos_cat_bc_URB &lt;- readRDS(\"data/delitos/delitos_eval_bcom_urb.rds\")\n\n\n\n\n\n# Agregar la variable mes\ndelitos_urb &lt;- delitos_cat_bc_URB %&gt;% \n  st_drop_geometry() %&gt;% \n  rename(fecha = FECHA_DEL) %&gt;% \n  mutate(mes = month(fecha),\n         anno = year(fecha)) %&gt;% \n  filter(!is.na(Categoria))\nhead(delitos_urb %&gt;%  select(fecha, mes, anno))\n\n       fecha mes anno\n1 2017-04-19   4 2017\n2 2020-12-15  12 2020\n3 2018-09-18   9 2018\n4 2017-12-02  12 2017\n5 2018-03-08   3 2018\n6 2018-09-24   9 2018\n\n\nA continuación se creará una tabla temporal que permitirá hacer una contabilidad de todos los delitos ocurridos por Zona censal, categoría, mes y año.\n\n# todos los delitos\ntab_del_all &lt;- delitos_urb%&gt;%\n  mutate(a_mes = paste0( anno, \"_\", sprintf(\"%02d\",mes))) %&gt;% \n  group_by(GEOCODIGO, Categoria, a_mes )%&gt;%\n  summarise(Cantidad = n(), .groups = \"keep\")\n\nhead(tab_del_all)\n\n# A tibble: 6 × 4\n# Groups:   GEOCODIGO, Categoria, a_mes [6]\n  GEOCODIGO   Categoria          a_mes   Cantidad\n  &lt;chr&gt;       &lt;chr&gt;              &lt;chr&gt;      &lt;int&gt;\n1 10101011001 Armas y homicidios 2018_08        1\n2 10101011001 Armas y homicidios 2019_05        1\n3 10101011001 Comercio ilegal    2018_04        1\n4 10101011001 Comercio ilegal    2019_07        1\n5 10101011001 Comercio ilegal    2021_08        2\n6 10101011001 Comercio ilegal    2021_12        1\n\n\nA continuación se procede a generar el cálculo de la suma de todos los eventos policiales ocurridos por cada zona censal categoría mes y año utilizando la librería Tidyr con la función pivot_wider()\n\n\n\n\n\n\ntab_del_all_mes &lt;- tab_del_all%&gt;%\n  pivot_wider(names_from = a_mes, values_from = Cantidad, \n              names_prefix = \"a_\", values_fill = 0)%&gt;% \n  dplyr::select(GEOCODIGO, Categoria,sort(names(.)[3:ncol(.)]))\nhead(tab_del_all_mes)\n\n# A tibble: 6 × 74\n# Groups:   GEOCODIGO, Categoria [6]\n  GEOCODIGO   Categoria        a_2017_01 a_2017_02 a_2017_03 a_2017_04 a_2017_05\n  &lt;chr&gt;       &lt;chr&gt;                &lt;int&gt;     &lt;int&gt;     &lt;int&gt;     &lt;int&gt;     &lt;int&gt;\n1 10101011001 Armas y homicid…         0         0         0         0         0\n2 10101011001 Comercio ilegal          0         0         0         0         0\n3 10101011001 Drogas y mercad…         0         0         0         0         0\n4 10101011001 Hurtos, robos            0         0         0         0         0\n5 10101011002 Hurtos, robos            0         1         0         0         0\n6 10101021001 Hurtos, robos            0         0         0         0         0\n# ℹ 67 more variables: a_2017_06 &lt;int&gt;, a_2017_07 &lt;int&gt;, a_2017_08 &lt;int&gt;,\n#   a_2017_09 &lt;int&gt;, a_2017_10 &lt;int&gt;, a_2017_11 &lt;int&gt;, a_2017_12 &lt;int&gt;,\n#   a_2018_01 &lt;int&gt;, a_2018_02 &lt;int&gt;, a_2018_03 &lt;int&gt;, a_2018_04 &lt;int&gt;,\n#   a_2018_05 &lt;int&gt;, a_2018_06 &lt;int&gt;, a_2018_07 &lt;int&gt;, a_2018_08 &lt;int&gt;,\n#   a_2018_09 &lt;int&gt;, a_2018_10 &lt;int&gt;, a_2018_11 &lt;int&gt;, a_2018_12 &lt;int&gt;,\n#   a_2019_01 &lt;int&gt;, a_2019_02 &lt;int&gt;, a_2019_03 &lt;int&gt;, a_2019_04 &lt;int&gt;,\n#   a_2019_05 &lt;int&gt;, a_2019_06 &lt;int&gt;, a_2019_07 &lt;int&gt;, a_2019_08 &lt;int&gt;, …\n\n\n\n#guargar resultados\nwrite.xlsx(tab_del_all_mes,\n           \"data/tablas/tablas_del_mes/del_zonas_all.xlsx\", overwrite = T)\nsaveRDS(tab_del_all_mes, \"data/tablas/tablas_del_mes/del_zonas_all.rds\")"
  },
  {
    "objectID": "panel.html#cálculo-de-tablas-de-densidad-casos-policiales",
    "href": "panel.html#cálculo-de-tablas-de-densidad-casos-policiales",
    "title": "3  Datos de Panel",
    "section": "3.3 Cálculo de tablas de densidad casos policiales",
    "text": "3.3 Cálculo de tablas de densidad casos policiales\nLectura de Zonas Urbanas consolidadas\n\nzonas &lt;- readRDS(\"data/ine/zonas_urb_consolidadas.rds\")\n\n\ninfo_zonas_base &lt;- zonas %&gt;%\n  st_drop_geometry() %&gt;% \n  dplyr::select(GEOCODIGO = COD_INE_16, AREA) %&gt;% \n  mutate(GEOCODIGO = as.character(GEOCODIGO))\n\nCalcular delitos anual y agregar área\n\ntab_del_all_mes &lt;- tab_del_all_mes %&gt;%\n  as.data.frame() %&gt;% #acelera el proceso\n  mutate(anual = rowSums(across(.cols = starts_with(\"a_\")))) %&gt;% \n  left_join(info_zonas_base, by = \"GEOCODIGO\")\n\nCalcular la densidad delitos por Hectárea (10000 metros)\n\ntab_all_dens &lt;- tab_del_all_mes %&gt;% \n  mutate(across(starts_with(\"a_\"), ~ .x/(AREA/10000))) %&gt;% \n  mutate(dens_anual = anual / (AREA/10000))\n\nhead(tab_all_dens[,1:10])\n\n    GEOCODIGO                    Categoria a_2017_01  a_2017_02 a_2017_03\n1 10101011001           Armas y homicidios         0 0.00000000         0\n2 10101011001              Comercio ilegal         0 0.00000000         0\n3 10101011001 Drogas y mercados criminales         0 0.00000000         0\n4 10101011001                Hurtos, robos         0 0.00000000         0\n5 10101011002                Hurtos, robos         0 0.01368904         0\n6 10101021001                Hurtos, robos         0 0.00000000         0\n  a_2017_04 a_2017_05 a_2017_06 a_2017_07 a_2017_08\n1         0         0         0         0         0\n2         0         0         0         0         0\n3         0         0         0         0         0\n4         0         0         0         0         0\n5         0         0         0         0         0\n6         0         0         0         0         0\n\n\nGuardar resultados\n\nwrite.xlsx(tab_all_dens, \n           \"data/tablas/tabla_dens_mes/del_dens_all.xlsx\",\n           overwrite = T)\n\nsaveRDS(tab_all_dens, \"data/tablas/tabla_dens_mes/del_dens_all.rds\")"
  },
  {
    "objectID": "panel.html#tablas-de-densidad-de-delitos-por-mes-2017-al-2022",
    "href": "panel.html#tablas-de-densidad-de-delitos-por-mes-2017-al-2022",
    "title": "3  Datos de Panel",
    "section": "3.4 Tablas de Densidad de Delitos por Mes (2017 al 2022)",
    "text": "3.4 Tablas de Densidad de Delitos por Mes (2017 al 2022)\nUnir Tablas\n\ninfo_zonas_base &lt;- zonas %&gt;%\n  dplyr::select(GEOCODIGO = COD_INE_16, REGION, \n                NOM_REGION, COMUNA, NOM_COMUNA) %&gt;% \n  mutate(GEOCODIGO = as.character(GEOCODIGO))\n\ndel_dens_zonas &lt;- info_zonas_base %&gt;% \n  left_join(tab_all_dens, by =\"GEOCODIGO\")\nhead(del_dens_zonas[,1:10])\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 417007.9 ymin: 7731793 xmax: 467736.3 ymax: 7789225\nProjected CRS: WGS 84 / UTM zone 19S\n   GEOCODIGO REGION         NOM_REGION COMUNA   NOM_COMUNA\n1 1405011001     01 REGIÓN DE TARAPACÁ   1405         PICA\n2 1401011001     01 REGIÓN DE TARAPACÁ   1401 POZO ALMONTE\n3 1401011001     01 REGIÓN DE TARAPACÁ   1401 POZO ALMONTE\n4 1401011002     01 REGIÓN DE TARAPACÁ   1401 POZO ALMONTE\n5 1401011002     01 REGIÓN DE TARAPACÁ   1401 POZO ALMONTE\n6 1404011001     01 REGIÓN DE TARAPACÁ   1404        HUARA\n                     Categoria a_2017_01 a_2017_02 a_2017_03 a_2017_04\n1                         &lt;NA&gt;        NA        NA        NA        NA\n2           Armas y homicidios         0         0         0         0\n3 Drogas y mercados criminales         0         0         0         0\n4           Armas y homicidios         0         0         0         0\n5                Hurtos, robos         0         0         0         0\n6                         &lt;NA&gt;        NA        NA        NA        NA\n                        geometry\n1 MULTIPOLYGON (((467470.7 77...\n2 MULTIPOLYGON (((417931.5 77...\n3 MULTIPOLYGON (((417931.5 77...\n4 MULTIPOLYGON (((420405 7759...\n5 MULTIPOLYGON (((420405 7759...\n6 MULTIPOLYGON (((419490.2 77...\n\n\nSelección de Zonas Censales con Mayor Densidad\n\nhist(del_dens_zonas$dens_anual, breaks = 100)\n\n\n\n# hist(del_dens_zonas[del_dens_zonas$dens_anual&gt;50,]$dens_anual, breaks = 100)\n\n\n# definición de zonas que corresponde al porcentaje\nn_porc &lt;- porc_df(del_dens_zonas, porcentaje = 5)\nn_porc\n\n[1] 267\n\ndens_max &lt;- del_dens_zonas %&gt;% \n  slice_max(dens_anual, n = n_porc) \n\n\n# Densidades \n\n# mapview(dens_max, zcol = \"dens_anual\")\n\nConocer que región tiene las zonas con mayor concentración de delitos\n\nregiones_max &lt;- dens_max %&gt;% \n  st_drop_geometry() %&gt;% \n  group_by(REGION) %&gt;% \n  summarise(Cantidad = n()) %&gt;% \n  arrange(desc(Cantidad))\n\nregiones_max\n\n# A tibble: 15 × 2\n   REGION Cantidad\n   &lt;chr&gt;     &lt;int&gt;\n 1 13          163\n 2 05           35\n 3 08           20\n 4 06            8\n 5 02            6\n 6 10            6\n 7 15            6\n 8 01            4\n 9 04            4\n10 07            4\n11 09            4\n12 16            4\n13 03            1\n14 11            1\n15 14            1\n\n\nVisualización de las región máxima\n\nreg_dens_max2 &lt;- dens_max %&gt;% \n  filter(REGION == 13) %&gt;% \n  filter(!is.na(dens_anual))\n\n# mapview(reg_dens_max2, zcol = \"dens_anual\", at= c(0,10,50,100,1000))\n\nVisualización de desimad máxima por categoria\n\nunique(del_dens_zonas$Categoria)\n\n[1] NA                             \"Armas y homicidios\"          \n[3] \"Drogas y mercados criminales\" \"Hurtos, robos\"               \n[5] \"Comercio ilegal\"             \n\ncategoria_tipo &lt;-  \"Comercio ilegal\"  \n\ndens_max_cat &lt;- del_dens_zonas %&gt;% \n  filter(Categoria==categoria_tipo) %&gt;% \n  slice_max(dens_anual, n = n_porc) \n\n# mapview(dens_max_cat, zcol = \"dens_anual\")\n\n\nregiones_max_cat &lt;- dens_max_cat %&gt;% \n  st_drop_geometry() %&gt;% \n  group_by(REGION) %&gt;% \n  summarise(Cantidad = n()) %&gt;% \n  arrange(desc(Cantidad))\n\nregiones_max_cat\n\n# A tibble: 14 × 2\n   REGION Cantidad\n   &lt;chr&gt;     &lt;int&gt;\n 1 13          102\n 2 05           38\n 3 08           24\n 4 04           18\n 5 02           10\n 6 01            7\n 7 06            7\n 8 09            6\n 9 07            5\n10 10            5\n11 15            5\n12 03            4\n13 14            3\n14 16            2\n\nreg_dens_max_cat &lt;- dens_max_cat %&gt;% \n  filter(REGION == 13) %&gt;% \n  filter(!is.na(dens_anual))%&gt;% \n  slice_max(dens_anual, n = 100) \n\nmapview(reg_dens_max_cat, zcol = \"dens_anual\")"
  },
  {
    "objectID": "panel.html#densidades-con-respecto-al-tiempo",
    "href": "panel.html#densidades-con-respecto-al-tiempo",
    "title": "3  Datos de Panel",
    "section": "3.5 Densidades con Respecto al Tiempo",
    "text": "3.5 Densidades con Respecto al Tiempo\n\n\n\n\n\n\ncategoria_tipo &lt;-  \"Comercio ilegal\" \nts_info &lt;- dens_max %&gt;% \n  st_drop_geometry() %&gt;% \n  dplyr::select(Categoria, a_2017_01:a_2022_12) %&gt;% \n  pivot_longer(cols = a_2017_01:a_2022_12,\n               names_to = \"tiempo\", values_to = \"densidades\") %&gt;% \n  mutate(tiempo = gsub(\"a_\", \"\", tiempo),\n         tiempo = gsub(\"_\", \"-\", tiempo),\n         tiempo = ym(tiempo)) \nhead(ts_info)\n\n# A tibble: 6 × 3\n  Categoria       tiempo     densidades\n  &lt;chr&gt;           &lt;date&gt;          &lt;dbl&gt;\n1 Comercio ilegal 2017-01-01      0.628\n2 Comercio ilegal 2017-02-01      0    \n3 Comercio ilegal 2017-03-01      0    \n4 Comercio ilegal 2017-04-01      0    \n5 Comercio ilegal 2017-05-01      0    \n6 Comercio ilegal 2017-06-01      0    \n\n\nGráficos\nGráficos de Serie de Tiempo Todas las Categorías. Se utilizará la librería Plotly para hacer gráficos dinámicos\n\npline &lt;- ggplot() + \n  geom_line(data = ts_info, aes(x = tiempo, y = densidades,\n                                colour = Categoria),\n            alpha = 0.4) +\n  xlab('Meses ') +\n  ylab('Densidades') +\n  theme_bw()\npline\n\n\n\n\n\npline &lt;- ggplot() + \n  geom_line(data = ts_info, aes(x = tiempo, y = densidades,\n                                colour = Categoria),\n            alpha = 0.4) +\n  xlab('Meses ') +\n  ylab('Densidades') +\n  theme_bw()+\n  facet_grid(Categoria ~ .) + \n  theme(legend.position = \"none\")\n# pline\n\nggplotly(pline)\n\n\n\n\n\nGráficos sobre médidas de centralidad (8 Primeras Categorías)\n\nunique(ts_info$Categoria)\n\n[1] \"Comercio ilegal\"              \"Hurtos, robos\"               \n[3] \"Armas y homicidios\"           \"Drogas y mercados criminales\"\n\ndf_tidy_mean_1 &lt;- ts_info %&gt;%\n  filter(!is.na(densidades)) %&gt;%\n  filter(Categoria %in% unique(ts_info$Categoria)[1:8]) %&gt;%\n  group_by(tiempo, Categoria) %&gt;%\n  summarise(n = n(),\n            mean = mean(densidades),\n            median = median(densidades),\n            sd = sd(densidades),\n            .groups = \"keep\") %&gt;%\n  mutate(sem = sd / sqrt(n - 1),\n         CI_lower = mean + qt((1-0.95)/2, n - 1) * sem,\n         CI_upper = mean - qt((1-0.95)/2, n - 1) * sem)\n\nmean_plot_1 &lt;- ggplot(df_tidy_mean_1, aes(x = tiempo, y = mean, color = Categoria)) +\n  geom_line(aes(x = tiempo, y = mean, color = Categoria)) +\n  geom_ribbon(\n    aes(ymin = CI_lower, ymax = CI_upper, fill = Categoria),\n    color = \"grey90\",\n    alpha = 0.2 )+\n  theme_bw()\n\nggplotly(mean_plot_1)\n\n\n\n\n\nGráficos Desagregados\n\ncolor_list &lt;- viridis::viridis(length(unique(ts_info$Categoria)))\nmean_plot_1_solos &lt;- ggplot(df_tidy_mean_1, aes(x = tiempo, y = mean, color = Categoria)) +\n  geom_line(aes(x = tiempo, y = mean, color = Categoria)) +\n  geom_ribbon(\n    aes(ymin = CI_lower, ymax = CI_upper, fill = Categoria),\n    color = \"grey90\",\n    alpha = 0.2) +  \n  theme_bw()+\n  scale_fill_manual(values = color_list) +\n  scale_color_manual(values = color_list) +\n  facet_grid(Categoria ~ .) + \n  theme(legend.position = \"none\")\n\n\nggplotly(mean_plot_1_solos)"
  },
  {
    "objectID": "resumen.html#introducción",
    "href": "resumen.html#introducción",
    "title": "4  Resúmenes",
    "section": "4.1 Introducción",
    "text": "4.1 Introducción\nEste capítulo tiene como objetivos generar tablas resúmenes generales de acuerdo a diferentes unidades territoriales, tipologías delictuales y tipos de casos policiales."
  },
  {
    "objectID": "resumen.html#preparación-de-data",
    "href": "resumen.html#preparación-de-data",
    "title": "4  Resúmenes",
    "section": "4.2 Preparación de Data",
    "text": "4.2 Preparación de Data\n\n#cargar Librerias\nsource(\"R/librerias.R\")\n# Cargar Funciones\nsource(\"R/funciones.R\")\n\n\ndelitos &lt;- readRDS( \"data/delitos/delitos_all_categ.rds\") %&gt;% \n  rename(ZONA = GEOCODIGO)\n\n\n\n\nCreación de una variable de tiempo para concervar el orden de los datos\n\ndelitos &lt;- delitos %&gt;%\n  st_drop_geometry() %&gt;% \n  mutate(FECHA_DEL = ymd(FECHA_DEL)) %&gt;% \n  mutate(tiempo = paste0(year(FECHA_DEL), \"_\",\n                         sprintf(\"%02d\",month(FECHA_DEL)))) %&gt;% \n  mutate(tiempo = ym(tiempo))\n\n# head(delitos)"
  },
  {
    "objectID": "resumen.html#resúmenes-por-mes",
    "href": "resumen.html#resúmenes-por-mes",
    "title": "4  Resúmenes",
    "section": "4.3 Resúmenes por mes",
    "text": "4.3 Resúmenes por mes\nGeneral\n\n# General\ndel_mes &lt;- delitos %&gt;% \n  group_by(tiempo, GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo) %&gt;% \n  as.data.frame()\n\n# saveRDS(del_mes, \"data/resumen/del_mes.rds\")\n# write.xlsx(del_mes, \"data/tablas/del_mes.xlsx\", overwrite = T)\n\n\nhead(del_mes)\n\n      tiempo                  GRUPO               TIPO cantidad\n1 2017-01-01          Aprehensiones        Aprehensión        4\n2 2017-01-01 Desorganización social              Daños        1\n3 2017-01-01 Desorganización social         Desórdenes       31\n4 2017-01-01 Desorganización social  Hallazgo vehículo        2\n5 2017-01-01      Mercados Ilegales    Comercio Ilegal        4\n6 2017-01-01      Mercados Ilegales Delitos económicos        2\n\n\nRegional\n\ndel_region &lt;- delitos %&gt;% \n  group_by(tiempo, REGION, NOM_REGION, GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  as.data.frame()\n\n# saveRDS(del_region, \"data/resumen/del_regional.rds\")\n# write.xlsx(del_region, \"data/tablas/del_region.xlsx\", overwrite = T)\n\nhead(del_region)\n\n      tiempo REGION            NOM_REGION                         GRUPO\n1 2017-01-01     01    REGIÓN DE TARAPACÁ        Desorganización social\n2 2017-01-01     02 REGIÓN DE ANTOFAGASTA        Desorganización social\n3 2017-01-01     02 REGIÓN DE ANTOFAGASTA             Mercados Ilegales\n4 2017-01-01     02 REGIÓN DE ANTOFAGASTA Robo con perjuicio a personas\n5 2017-01-01     03     REGIÓN DE ATACAMA                 Aprehensiones\n6 2017-01-01     03     REGIÓN DE ATACAMA        Desorganización social\n                TIPO cantidad\n1         Desórdenes        1\n2         Desórdenes        2\n3 Delitos económicos        1\n4     Robo domicilio        1\n5        Aprehensión        1\n6         Desórdenes        2\n\n\nComunal\n\n# Comunal\ndel_comuna &lt;- delitos %&gt;% \n  group_by(tiempo, REGION, NOM_REGION,COMUNA,  NOM_COMUNA, GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  as.data.frame()\n\n# saveRDS(del_comuna, \"data/resumen/del_comuna.rds\")\n# write.xlsx(del_comuna, \"data/tablas/del_comuna.xlsx\", overwrite = T)\n\nhead(del_comuna)\n\n      tiempo REGION            NOM_REGION COMUNA  NOM_COMUNA\n1 2017-01-01     01    REGIÓN DE TARAPACÁ   1101     IQUIQUE\n2 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA\n3 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA\n4 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA\n5 2017-01-01     03     REGIÓN DE ATACAMA   3101     COPIAPÓ\n6 2017-01-01     03     REGIÓN DE ATACAMA   3102     CALDERA\n                          GRUPO               TIPO cantidad\n1        Desorganización social         Desórdenes        1\n2        Desorganización social         Desórdenes        2\n3             Mercados Ilegales Delitos económicos        1\n4 Robo con perjuicio a personas     Robo domicilio        1\n5                 Aprehensiones        Aprehensión        1\n6        Desorganización social         Desórdenes        1\n\n\n\n# Zona\ndel_zona &lt;- delitos %&gt;% \n  group_by(tiempo, REGION, NOM_REGION,COMUNA,  NOM_COMUNA,  ZONA,  GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  as.data.frame()\n\n# saveRDS(del_zona, \"data/resumen/del_zona.rds\")\n# write.xlsx(del_zona, \"data/tablas/del_zona.xlsx\", overwrite = T)\n\n\nhead(del_comuna)\n\n      tiempo REGION            NOM_REGION COMUNA  NOM_COMUNA\n1 2017-01-01     01    REGIÓN DE TARAPACÁ   1101     IQUIQUE\n2 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA\n3 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA\n4 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA\n5 2017-01-01     03     REGIÓN DE ATACAMA   3101     COPIAPÓ\n6 2017-01-01     03     REGIÓN DE ATACAMA   3102     CALDERA\n                          GRUPO               TIPO cantidad\n1        Desorganización social         Desórdenes        1\n2        Desorganización social         Desórdenes        2\n3             Mercados Ilegales Delitos económicos        1\n4 Robo con perjuicio a personas     Robo domicilio        1\n5                 Aprehensiones        Aprehensión        1\n6        Desorganización social         Desórdenes        1\n\n\n\ndel_tipo_zona &lt;- delitos %&gt;% \n  group_by(tiempo, REGION, NOM_REGION,COMUNA,  NOM_COMUNA,  ZONA,  TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  as.data.frame()\n\n# saveRDS(del_tipo_zona, \"data/resumen/del_tipo_zona.rds\")\n# write.xlsx(deldel_tipo_zona_zona, \"data/tablas/del_tipo_zona.xlsx\", overwrite = T)\n\n\nhead(del_tipo_zona)\n\n      tiempo REGION            NOM_REGION COMUNA  NOM_COMUNA       ZONA\n1 2017-01-01     01    REGIÓN DE TARAPACÁ   1101     IQUIQUE 1101031004\n2 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA 2101031005\n3 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA 2101061002\n4 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA 2101141006\n5 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA 2101161002\n6 2017-01-01     03     REGIÓN DE ATACAMA   3101     COPIAPÓ 3101041001\n                TIPO cantidad\n1         Desórdenes        1\n2 Delitos económicos        1\n3         Desórdenes        1\n4     Robo domicilio        1\n5         Desórdenes        1\n6        Aprehensión        1"
  },
  {
    "objectID": "resumen.html#resúmenes-por-denuncia",
    "href": "resumen.html#resúmenes-por-denuncia",
    "title": "4  Resúmenes",
    "section": "4.4 Resúmenes por Denuncia",
    "text": "4.4 Resúmenes por Denuncia\n\n# General\ndel_mes &lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DENUNCIA\") %&gt;% \n  group_by(tiempo, GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo) %&gt;% \n  mutate(CLASIFICAC = \"DENUNCIA\") %&gt;% \n  as.data.frame()\n\n# saveRDS(del_mes, \"data/resumen/del_mes_denuncia.rds\")\n# write.xlsx(del_mes, \"data/tablas/del_mes_denuncia.xlsx\", overwrite = T)\n\nhead(del_mes)\n\n      tiempo                  GRUPO               TIPO cantidad CLASIFICAC\n1 2017-01-01 Desorganización social              Daños        1   DENUNCIA\n2 2017-01-01 Desorganización social         Desórdenes       26   DENUNCIA\n3 2017-01-01 Desorganización social  Hallazgo vehículo        2   DENUNCIA\n4 2017-01-01      Mercados Ilegales    Comercio Ilegal        4   DENUNCIA\n5 2017-01-01      Mercados Ilegales Delitos económicos        2   DENUNCIA\n6 2017-01-01      Mercados Ilegales             Drogas        1   DENUNCIA\n\n\n\n# Regional\ndel_region &lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DENUNCIA\") %&gt;% \n  group_by(tiempo, REGION, NOM_REGION, GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  mutate(CLASIFICAC = \"DENUNCIA\") %&gt;% \n  as.data.frame()\n\n# saveRDS(del_region, \"data/resumen/del_regional_denuncia.rds\")\n# write.xlsx(del_region, \"data/tablas/del_regional_denuncia.xlsx\", overwrite = T)\n\nhead(del_region)\n\n      tiempo REGION            NOM_REGION                   GRUPO\n1 2017-01-01     01    REGIÓN DE TARAPACÁ  Desorganización social\n2 2017-01-01     02 REGIÓN DE ANTOFAGASTA  Desorganización social\n3 2017-01-01     02 REGIÓN DE ANTOFAGASTA       Mercados Ilegales\n4 2017-01-01     03     REGIÓN DE ATACAMA  Desorganización social\n5 2017-01-01     03     REGIÓN DE ATACAMA Uso ilegítimo violencia\n6 2017-01-01     04    REGIÓN DE COQUIMBO  Desorganización social\n                TIPO cantidad CLASIFICAC\n1         Desórdenes        1   DENUNCIA\n2         Desórdenes        1   DENUNCIA\n3 Delitos económicos        1   DENUNCIA\n4         Desórdenes        2   DENUNCIA\n5    Lesiones graves        1   DENUNCIA\n6         Desórdenes        2   DENUNCIA\n\n\n\n# Comunal\ndel_comuna &lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DENUNCIA\") %&gt;% \n  group_by(tiempo, REGION, NOM_REGION,COMUNA,  NOM_COMUNA, GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  mutate(CLASIFICAC = \"DENUNCIA\") %&gt;% \n  as.data.frame()\n\n# saveRDS(del_comuna, \"data/resumen/del_comuna_denuncia.rds\")\n# write.xlsx(del_comuna, \"data/tablas/del_comuna_denuncia.xlsx\", overwrite = T))\n\nhead(del_comuna)\n\n      tiempo REGION            NOM_REGION COMUNA  NOM_COMUNA\n1 2017-01-01     01    REGIÓN DE TARAPACÁ   1101     IQUIQUE\n2 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA\n3 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA\n4 2017-01-01     03     REGIÓN DE ATACAMA   3102     CALDERA\n5 2017-01-01     03     REGIÓN DE ATACAMA   3301    VALLENAR\n6 2017-01-01     03     REGIÓN DE ATACAMA   3301    VALLENAR\n                    GRUPO               TIPO cantidad CLASIFICAC\n1  Desorganización social         Desórdenes        1   DENUNCIA\n2  Desorganización social         Desórdenes        1   DENUNCIA\n3       Mercados Ilegales Delitos económicos        1   DENUNCIA\n4  Desorganización social         Desórdenes        1   DENUNCIA\n5  Desorganización social         Desórdenes        1   DENUNCIA\n6 Uso ilegítimo violencia    Lesiones graves        1   DENUNCIA\n\n\n\n# Zona\ndel_zona&lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DENUNCIA\") %&gt;% \n  group_by(tiempo, REGION, NOM_REGION,COMUNA,  NOM_COMUNA,  ZONA,  GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  mutate(CLASIFICAC = \"DENUNCIA\") %&gt;% \n  as.data.frame()\n\n# saveRDS(del_zona, \"data/resumen/del_zona_denuncia.rds\")\n# write.xlsx(del_zona, \"data/tablas/del_zona_denuncia.xlsx\", overwrite = T)\n\nhead(del_zona)\n\n      tiempo REGION            NOM_REGION COMUNA  NOM_COMUNA       ZONA\n1 2017-01-01     01    REGIÓN DE TARAPACÁ   1101     IQUIQUE 1101031004\n2 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA 2101031005\n3 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA 2101061002\n4 2017-01-01     03     REGIÓN DE ATACAMA   3102     CALDERA 3102011007\n5 2017-01-01     03     REGIÓN DE ATACAMA   3301    VALLENAR 3301021001\n6 2017-01-01     03     REGIÓN DE ATACAMA   3301    VALLENAR 3301051003\n                    GRUPO               TIPO cantidad CLASIFICAC\n1  Desorganización social         Desórdenes        1   DENUNCIA\n2       Mercados Ilegales Delitos económicos        1   DENUNCIA\n3  Desorganización social         Desórdenes        1   DENUNCIA\n4  Desorganización social         Desórdenes        1   DENUNCIA\n5  Desorganización social         Desórdenes        1   DENUNCIA\n6 Uso ilegítimo violencia    Lesiones graves        1   DENUNCIA\n\n\n\n# Zona tipo\ndel_tipo_zona &lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DENUNCIA\") %&gt;% \n  group_by(tiempo, REGION, NOM_REGION,COMUNA,  NOM_COMUNA,  ZONA,  TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  mutate(CLASIFICAC = \"DENUNCIA\") %&gt;% \n  as.data.frame()\n\n# saveRDS(del_tipo_zona, \"data/resumen/del_tipo_zona_denuncia.rds\")\n# write.xlsx(del_tipo_zona, \"data/tablas/del_tipo_zona_denuncia.xlsx\", overwrite = T)\n\n\nhead(del_tipo_zona)\n\n      tiempo REGION            NOM_REGION COMUNA  NOM_COMUNA       ZONA\n1 2017-01-01     01    REGIÓN DE TARAPACÁ   1101     IQUIQUE 1101031004\n2 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA 2101031005\n3 2017-01-01     02 REGIÓN DE ANTOFAGASTA   2101 ANTOFAGASTA 2101061002\n4 2017-01-01     03     REGIÓN DE ATACAMA   3102     CALDERA 3102011007\n5 2017-01-01     03     REGIÓN DE ATACAMA   3301    VALLENAR 3301021001\n6 2017-01-01     03     REGIÓN DE ATACAMA   3301    VALLENAR 3301051003\n                TIPO cantidad CLASIFICAC\n1         Desórdenes        1   DENUNCIA\n2 Delitos económicos        1   DENUNCIA\n3         Desórdenes        1   DENUNCIA\n4         Desórdenes        1   DENUNCIA\n5         Desórdenes        1   DENUNCIA\n6    Lesiones graves        1   DENUNCIA"
  },
  {
    "objectID": "resumen.html#resúmenes-por-detenciones",
    "href": "resumen.html#resúmenes-por-detenciones",
    "title": "4  Resúmenes",
    "section": "4.5 Resúmenes por Detenciones",
    "text": "4.5 Resúmenes por Detenciones\n\n# General\ndel_mes &lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DETENCION\") %&gt;% \n  group_by(tiempo, GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo) %&gt;% \n  mutate(CLASIFICAC = \"DETENCION\") %&gt;% \n  as.data.frame()\n\n# saveRDS(del_mes, \"data/resumen/del_mes_detencion.rds\")\n# write.xlsx(del_mes, \"data/tablas/del_mes_detencion.xlsx\", overwrite = T)\n\nhead(del_mes)\n\n\n# Regional\ndel_region &lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DETENCION\") %&gt;% \n  group_by(tiempo,  REGION, NOM_REGION,GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  mutate(CLASIFICAC = \"DETENCION\") %&gt;% \n  arrange(tiempo)%&gt;% \n  as.data.frame()\n\n# saveRDS(del_region, \"data/resumen/del_regional_detencion.rds\")\n# write.xlsx(del_region, \"data/tablas/del_regional_detencion.xlsx\", overwrite = T)\n\nhead(del_region)\n\n      tiempo REGION                                       NOM_REGION\n1 2017-01-01     02                            REGIÓN DE ANTOFAGASTA\n2 2017-01-01     02                            REGIÓN DE ANTOFAGASTA\n3 2017-01-01     03                                REGIÓN DE ATACAMA\n4 2017-01-01     04                               REGIÓN DE COQUIMBO\n5 2017-01-01     06 REGIÓN DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS\n6 2017-01-01     06 REGIÓN DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS\n                          GRUPO           TIPO cantidad CLASIFICAC\n1        Desorganización social     Desórdenes        1  DETENCION\n2 Robo con perjuicio a personas Robo domicilio        1  DETENCION\n3                 Aprehensiones    Aprehensión        1  DETENCION\n4        Desorganización social     Desórdenes        1  DETENCION\n5                 Aprehensiones    Aprehensión        1  DETENCION\n6        Desorganización social     Desórdenes        2  DETENCION\n\n\n\n# Comunal\ndel_comuna &lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DETENCION\") %&gt;% \n  group_by(tiempo,  REGION, NOM_REGION,COMUNA,  NOM_COMUNA,GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  mutate(CLASIFICAC = \"DETENCION\") %&gt;% \n  as.data.frame()\n\n# saveRDS(del_comuna, \"data/resumen/del_comuna_detencion.rds\")\n# write.xlsx(del_comuna, \"data/tablas/del_comuna_detencion.xlsx\", overwrite = T)\n\n\nhead(del_comuna)\n\n      tiempo REGION                                       NOM_REGION COMUNA\n1 2017-01-01     02                            REGIÓN DE ANTOFAGASTA   2101\n2 2017-01-01     02                            REGIÓN DE ANTOFAGASTA   2101\n3 2017-01-01     03                                REGIÓN DE ATACAMA   3101\n4 2017-01-01     04                               REGIÓN DE COQUIMBO   4102\n5 2017-01-01     06 REGIÓN DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS   6108\n6 2017-01-01     06 REGIÓN DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS   6115\n   NOM_COMUNA                         GRUPO           TIPO cantidad CLASIFICAC\n1 ANTOFAGASTA        Desorganización social     Desórdenes        1  DETENCION\n2 ANTOFAGASTA Robo con perjuicio a personas Robo domicilio        1  DETENCION\n3     COPIAPÓ                 Aprehensiones    Aprehensión        1  DETENCION\n4    COQUIMBO        Desorganización social     Desórdenes        1  DETENCION\n5     MACHALÍ        Desorganización social     Desórdenes        1  DETENCION\n6       RENGO                 Aprehensiones    Aprehensión        1  DETENCION\n\n\n\n# Zona\ndel_zona &lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DETENCION\") %&gt;% \n  group_by(tiempo,  REGION, NOM_REGION,COMUNA,  NOM_COMUNA,ZONA,  GRUPO, TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  mutate(CLASIFICAC = \"DETENCION\") %&gt;% \n  as.data.frame()\n\n# saveRDS(del_zona, \"data/resumen/del_zona_detencion.rds\")\n# write.xlsx(del_zona, \"data/tablas/del_zona_detencion.xlsx\", overwrite = T)\n\nhead(del_zona)\n\n      tiempo REGION                                       NOM_REGION COMUNA\n1 2017-01-01     02                            REGIÓN DE ANTOFAGASTA   2101\n2 2017-01-01     02                            REGIÓN DE ANTOFAGASTA   2101\n3 2017-01-01     03                                REGIÓN DE ATACAMA   3101\n4 2017-01-01     04                               REGIÓN DE COQUIMBO   4102\n5 2017-01-01     06 REGIÓN DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS   6108\n6 2017-01-01     06 REGIÓN DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS   6115\n   NOM_COMUNA       ZONA                         GRUPO           TIPO cantidad\n1 ANTOFAGASTA 2101141006 Robo con perjuicio a personas Robo domicilio        1\n2 ANTOFAGASTA 2101161002        Desorganización social     Desórdenes        1\n3     COPIAPÓ 3101041001                 Aprehensiones    Aprehensión        1\n4    COQUIMBO 4102151002        Desorganización social     Desórdenes        1\n5     MACHALÍ 6108031002        Desorganización social     Desórdenes        1\n6       RENGO 6115021002        Desorganización social     Desórdenes        1\n  CLASIFICAC\n1  DETENCION\n2  DETENCION\n3  DETENCION\n4  DETENCION\n5  DETENCION\n6  DETENCION\n\n\n\n# Zona tipo\ndel_tipo_zona &lt;- delitos %&gt;% \n  filter(CLASIFICAC == \"DETENCION\") %&gt;% \n  group_by(tiempo,  REGION, NOM_REGION,COMUNA,  NOM_COMUNA,  ZONA,  TIPO) %&gt;% \n  summarise(cantidad = n(), .groups = \"keep\") %&gt;% \n  arrange(tiempo)%&gt;% \n  mutate(CLASIFICAC = \"DETENCION\") %&gt;% \n  as.data.frame()\n\n# saveRDS(del_tipo_zona, \"data/resumen/del_tipo_zona_detencion.rds\")\n# write.xlsx(del_tipo_zona, \"data/tablas/del_tipo_zona_detencion.xlsx\", overwrite = T)\n\nhead(del_tipo_zona)\n\n      tiempo REGION                                       NOM_REGION COMUNA\n1 2017-01-01     02                            REGIÓN DE ANTOFAGASTA   2101\n2 2017-01-01     02                            REGIÓN DE ANTOFAGASTA   2101\n3 2017-01-01     03                                REGIÓN DE ATACAMA   3101\n4 2017-01-01     04                               REGIÓN DE COQUIMBO   4102\n5 2017-01-01     06 REGIÓN DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS   6108\n6 2017-01-01     06 REGIÓN DEL LIBERTADOR GENERAL BERNARDO O'HIGGINS   6115\n   NOM_COMUNA       ZONA           TIPO cantidad CLASIFICAC\n1 ANTOFAGASTA 2101141006 Robo domicilio        1  DETENCION\n2 ANTOFAGASTA 2101161002     Desórdenes        1  DETENCION\n3     COPIAPÓ 3101041001    Aprehensión        1  DETENCION\n4    COQUIMBO 4102151002     Desórdenes        1  DETENCION\n5     MACHALÍ 6108031002     Desórdenes        1  DETENCION\n6       RENGO 6115021002     Desórdenes        1  DETENCION"
  },
  {
    "objectID": "crime_f.html#dataframe-to-sf-object",
    "href": "crime_f.html#dataframe-to-sf-object",
    "title": "Appendix A — Funciones Generales",
    "section": "A.1 Dataframe to SF Object",
    "text": "A.1 Dataframe to SF Object\nConvertir DataFrame con columnas de latitud y longitud a un objeto espacial llamado simple feature además se le puede asignar un sistema de referencia de coordenadas.\n\n# dataframe a sf\ndf2sf &lt;- function(df, lon =\"lon\", lat =\"lat\", crs_base = 4326) {\n  sf_object &lt;- df %&gt;%\n    dplyr::filter(!is.na(lon)|!is.na(lat)) %&gt;%\n    sf::st_as_sf(coords = c(lon, lat),\n                 crs = crs_base, agr = \"constant\")\n  return(sf_object)\n}\n\nAl inverso esta función permite convertir de un objeto espacial tipo puntos a una tabla de datos a la cual se le agregará latitud y longitud como columnas.\n\n# sf to dataframe\nsf2df &lt;- function(sf_points){\n  df &lt;- sfheaders::sf_to_df( sf_points, fill = TRUE ) %&gt;% \n    rename(lon = x, lat = y)\n  return(df)\n}"
  },
  {
    "objectID": "crime_f.html#imputar-datos-por-intersect",
    "href": "crime_f.html#imputar-datos-por-intersect",
    "title": "Appendix A — Funciones Generales",
    "section": "A.2 Imputar datos por intersect",
    "text": "A.2 Imputar datos por intersect\n\nadd_info_intersects &lt;-  function(pol_info, sf_data){\n# versión eficiente de intersects\n  id_int &lt;- sapply(st_intersects(sf_data, pol_info), \n                   function(z) if (length(z)==0) NA_integer_ else z[1])\n  \n  pol_info &lt;- pol_info %&gt;% \n    mutate(id = 1:nrow(.)) %&gt;% \n    st_drop_geometry()\n  \n  resultados &lt;- sf_data%&gt;%\n    mutate(id = id_int) %&gt;%\n    left_join(pol_info, by =\"id\")\n  return(resultados)\n  \n}"
  },
  {
    "objectID": "crime_f.html#tablas-resumen",
    "href": "crime_f.html#tablas-resumen",
    "title": "Appendix A — Funciones Generales",
    "section": "A.3 Tablas Resumen",
    "text": "A.3 Tablas Resumen\nCrea un resumen estadístico por cada una de las comunes columnas del data frame\n\nresumen_base &lt;- function(base, name_base, n_samples = 5){ \n  smp &lt;- sample(nrow(base), size = n_samples, replace = F)\n  res &lt;- NULL\n  for(i in 1:ncol(base)){\n    r &lt;- data.frame(\n      col_name = as.character(names(base)[i]),\n      # col_name_cor =  names(janitor::clean_names(base))[i],\n      n_rows = nrow(base),\n      n_unique = length(unique(base[,i])),\n      n_NA = sum(is.na(base[,i])),\n      min = round(min(base[,i],  na.rm = T), 3),\n      max = round(max(base[,i],  na.rm = T), 3),\n      mean = round(mean(base[,i],  na.rm = T), 3),\n      sample1 = as.character(base[smp[1],i]),\n      sample2 = as.character(base[smp[2],i]),\n      sample3 = as.character(base[smp[3],i]),\n      sample4 = as.character(base[smp[4],i]),\n      sample5 = as.character(base[smp[5],i])\n    )\n    r &lt;- r %&gt;%\n      mutate(base_name = name_base, \n             porc_NA = round((n_NA / nrow(base)) * 100, 2),\n             col_name = gsub(pattern = \"\\\\.\", replacement = \" \", x = col_name),# puntos -&gt; espacios\n      )%&gt;%\n      dplyr::select(base_name, col_name,  n_rows, n_unique, n_NA, porc_NA, everything())\n    \n    res &lt;- rbind(res, r)\n  }\n  return(res)\n  \n}"
  },
  {
    "objectID": "crime_f.html#funciones-de-uso-general",
    "href": "crime_f.html#funciones-de-uso-general",
    "title": "Appendix A — Funciones Generales",
    "section": "A.4 Funciones de uso general",
    "text": "A.4 Funciones de uso general\n\n# Si no existe directorio lo crea\nmake_dir &lt;- function(path){\n  if (!dir.exists(path)) dir.create(path, recursive = TRUE)\n}\n\n# transformar -999 a NA\nfix_missing &lt;- function(x) {\n  if(is.numeric(x)){\n    x[x == -999] &lt;- NA\n    \n  }\n  return(x)\n}\n\n\n# transformar NA a 0\nfix_NA_0 &lt;- function(x) {\n  x[is.na(x)] &lt;- 0\n  return(x)\n}\n\n\n\n# Reeplaza puntos pomas\npto_por_coma &lt;- function(x){\n  format(x, big.mark = \".\", decimal.mark = \",\" ,\n         scientific = FALSE)\n  \n}\n\nsimpleCap &lt;- function(x) {\n  s &lt;- strsplit(x, \" \")[[1]]\n  paste(toupper(substring(s, 1, 1)), substring(s, 2),\n        sep = \"\", collapse = \" \")\n}\n\nsf_toupper &lt;-  function(sf_object){\n  names(sf_object)[1:(ncol(sf_object)-1)] &lt;- toupper(names(sf_object)[1:(ncol(sf_object)-1)])\n  return(sf_object)\n}\n\n# función paara saber catidad de acuerdo un porcentaje\nporc_df &lt;- function(dataframe, porcentaje){\n  if(porcentaje&gt;100){\n    stop(\"Porcentaje NO puede ser mayor que 100\")\n  }else{\n    num &lt;- round(nrow(dataframe)*(porcentaje/100))\n  }\n  return(num)\n}"
  },
  {
    "objectID": "crime_f.html#cuenta-duplicados-por-columna",
    "href": "crime_f.html#cuenta-duplicados-por-columna",
    "title": "Appendix A — Funciones Generales",
    "section": "A.5 Cuenta duplicados por columna",
    "text": "A.5 Cuenta duplicados por columna\n\nduplicados &lt;- function(file, columna) {\n  if (columna == \"geometry\") {\n    col &lt;- file %&gt;% dplyr::select(all_of(columna))\n  } else{\n    col &lt;-\n      file %&gt;% st_drop_geometry() %&gt;% dplyr::select(all_of(columna))\n  }\n  \n  d &lt;- col %&gt;% duplicated() %&gt;% sum()\n  return(d)\n}"
  },
  {
    "objectID": "crime_f.html#leer-delitos-rds-por-año",
    "href": "crime_f.html#leer-delitos-rds-por-año",
    "title": "Appendix A — Funciones Generales",
    "section": "A.6 Leer delitos rds por año",
    "text": "A.6 Leer delitos rds por año\n\nread_delitos &lt;-\n  function(path_data = \"data/delitos/delitos_base/\", year) {\n    delitos &lt;- readRDS(paste0(path_data, \"delitos_\", year, \".rds\"))\n    return(delitos)\n  }"
  },
  {
    "objectID": "crime_f.html#función-seleccionar-muestra-n",
    "href": "crime_f.html#función-seleccionar-muestra-n",
    "title": "Appendix A — Funciones Generales",
    "section": "A.7 Función seleccionar muestra n",
    "text": "A.7 Función seleccionar muestra n\n\nmuestra_n &lt;-  function(df, n, random = F){\n  if(isTRUE(random)){\n    x &lt;- dplyr::slice_sample(df, n = n, replace = F)\n  }else{\n    x &lt;- df[1:n]\n  }\n  return(x)\n}"
  },
  {
    "objectID": "crime_f.html#función-seleccionar-muestra-por-fracción",
    "href": "crime_f.html#función-seleccionar-muestra-por-fracción",
    "title": "Appendix A — Funciones Generales",
    "section": "A.8 Función seleccionar muestra por fracción",
    "text": "A.8 Función seleccionar muestra por fracción\n\nmuestra_frac &lt;-  function(df, prop){\n    x &lt;- dplyr::slice_sample(df, prop = prop, replace = F)\n  return(x)\n}"
  },
  {
    "objectID": "r_project.html",
    "href": "r_project.html",
    "title": "Appendix A — R Project",
    "section": "",
    "text": "B Objetos Espaciales en R"
  },
  {
    "objectID": "r_project.html#qué-es-r-project",
    "href": "r_project.html#qué-es-r-project",
    "title": "Appendix A — R Project",
    "section": "A.1 ¿Qué es R Project?",
    "text": "A.1 ¿Qué es R Project?\nR es un lenguaje programación multiparadigma (procedural, imperativo, orientado a objetos y funcional) enfocado a aplicaciones estadísticas. Por estadísticas se debe entender también los campos de estudio que se basan o las utilizan como económía, finanzas, ciencia de datos, machine learning, etc.\n\nA.1.1 Ventajas de Utilizar R Project\n1. R es un software libre\n\nLa libertad de ejecutar el programa como desee y con cualquier propósito\nEstudiar el funcionamiento del programa y adaptarlo a sus necesidades.\nRescribir copias para ayudar a los demás.\nManejar el programa y publicar las mejorar, de manera que toda comunidad se beneficie.\n\n2. R es multiplataforma\n\nR funciona en Mac, Windows y en numerosos sistemas UNIX. Esto significa que cualquier persona puede trabajar con tus datos, figuras, análisis y más importante aún usar tus instrucciones (también conocido como scripts o código) para generar las figuras y el análisis. Así que cualquier persona, y en cualquier lugar del mundo, con acceso a cualquier SO puede usar R sin ninguna licencia.\n\n3. R es de código abierto\n\nExiste una gran comunidad de voluntarios trabajando para mejorarlo, lo cual permite ser moldeado y dirigido a cuestiones específicas. Creando así programas y paquetes que funcionen en el entorno R. Programas tales como R-studio, Java GUI for R, R- commander, RKWard, entre otros, y con más de 18000 paquetes indexado en CRAN, Biocoductor, GitHub y R-Forge.\n\n4. Todo dentro de un mismo entorno\n\nR remplaza la combinación de varios programas para el proceso de análisis de datos, por ejemplo Excel, ArcGis, QGis, SigmaPlot, entre otros. Esto no solo resulta en el alto costo de las licencias de múltiples programas, si no también, en la gran cantidad de archivos con diferentes formatos que no podrían leer otros programas. En cambio con solo utilizar R, puedes realizar todo el análisis de datos e inclusive leer archivos de diferentes formatos.\n\n\n\nA.1.2 Desventajas de utilizar R\n\nR tiene una vasta documentación de ayuda, descripción de paquetes y de funciones, que es difícil encontrar información específica en un momento dado.\nLos mensajes de error que R nos muestra, no es específica sobre los fallos que estamos realizando y solo un usuario con cierta experiencia en el uso de R puede saberlo."
  },
  {
    "objectID": "r_project.html#instalación-de-r-project",
    "href": "r_project.html#instalación-de-r-project",
    "title": "Appendix A — R Project",
    "section": "A.2 Instalación de R Project",
    "text": "A.2 Instalación de R Project\n\nA.2.1 Instalación de R Project\nPrimero se debe instalar R Project desde su sitio oficial (https://cran.r-project.org/bin/windows/base/), se ejecuta el instalador que se descargó depende del sistema operativo del PC, como se muestra en las siguientes figuras:\n\n\n\nA.2.2 Instalación de R para Windows\n\n\n\n\n\nA.2.3 Instalar Rtools (solo Sistema Operativo Windows)\n\n\n\n\n\n\n\n\nA.2.4 Instalación de R para Mac\n\n\n\nR Project Ejecutándose"
  },
  {
    "objectID": "r_project.html#instalación-de-rstudio",
    "href": "r_project.html#instalación-de-rstudio",
    "title": "Appendix A — R Project",
    "section": "A.3 Instalación de RStudio",
    "text": "A.3 Instalación de RStudio\nSe recomienta instalar Rstudio, que es Interfaz de Usuario de R Project, desde su sitio web oficial, el cual permite acceder con mayor facilidad a sus funciones y potencialidades de R.\n\n\n\n\n\n\n\n\n\nA.3.1 RStudio Cloud\nRStudio Cloud es una versión ligera del IDE RStudio alojada en la la nube que permite a cualquiera hacer, compartir, enseñar y aprender Ciencias de Datos Online. Tiene una versión gratuita limitada.\n\nA.3.1.1 Características:\n\nAnalyze your data using the RStudio IDE, directly from your browser.\nShare projects with your team, class, workshop or the world.\nTeach data science with R to your students or colleagues.\nLearn data science in an instructor-led environment or with interactive tutorials."
  },
  {
    "objectID": "r_project.html#instalar-librerías",
    "href": "r_project.html#instalar-librerías",
    "title": "Appendix A — R Project",
    "section": "A.4 Instalar Librerías",
    "text": "A.4 Instalar Librerías\n\nA.4.1 Librerías en R\nLas librerías o paquetes en R corresponden a una colección de funciones encapsuladas y diseñadas para atender una tarea específica. Por ejemplo, hay paquetes para trabajo visualización geoespacial, análisis psicométricos, mineria de datos, interacción con servicios de internet y muchas otras cosas más.\nEstos paquetes se encuentran alojados principalmente en CRAN (Comprehensive R Archive Network), así que pasan por un control riguroso antes de estar disponibles para su uso generalizado, al día de hoy (29.11.2021) existen 18498 paquetes disponibles. En el siguiente enlace se deja una lista de temas y sus librerías asociadas disponibles, con una breve descripción (enlace)\nAunque las versiones de prueba de una librería pueden estar disponible en Github (Respositorio de Control de Versiones) de cada autor.\n\n\nA.4.2 Ejemplo de Instalación de Librerías desde R\nPodemos instalar paquetes usando la función install.packages(), dando como argumento el nombre del paquete que deseamos instalar, entre comillas.\nPara instalar librerías se puede hacer directamente desde la consola de RStudio, por ejemplo:\n\ninstall.packages(\"dplyr\") # Se puede instalar más de una librería a la vez\n\n\n\nA.4.3 Ejemplo de Instalación de Librerías desde Rstudio\nTambién se pude instalar librerías del Panel “Packages”\n\n\n\nY por último se puede instalar desde Pestaña “Tools” -&gt; “Install Packages”:"
  },
  {
    "objectID": "r_project.html#definición-de-directorios-de-trabajos",
    "href": "r_project.html#definición-de-directorios-de-trabajos",
    "title": "Appendix A — R Project",
    "section": "A.5 Definición de Directorios de Trabajos",
    "text": "A.5 Definición de Directorios de Trabajos\nDefinir directorio de Trabajo con RStudio\n\n\n\n\n\n\nDefinir Directorio de Trabajo con una función\n\nsetwd(\"~/OneDrive - Universidad Adolfo Ibanez/FONDECYT/capacitacion_SPD\")\n\nConsultar Directorio de Trabajo\n\ngetwd()\n\n[1] \"/Users/denisberroeta/Library/CloudStorage/OneDrive-UniversidadAdolfoIbanez/FONDECYT/CURSO_SPD/book_SPD\""
  },
  {
    "objectID": "r_project.html#tipos-de-objetos-en-r",
    "href": "r_project.html#tipos-de-objetos-en-r",
    "title": "Appendix A — R Project",
    "section": "B.1 Tipos de Objetos en R",
    "text": "B.1 Tipos de Objetos en R\nLos Datos en R se pueden clasificar por su dimensiones y los tipos de Datos que permiten almacenar, como se muestra en la siguiente tabla:\n\n\n\nDimensiones\nHomogéneos\nHeterogéneos\n\n\n\n\n1d\nAtomic vector\nList\n\n\n2d\nMatrix\nData frame\n\n\nnd\nArray\n\n\n\n\nFuente: http://adv-r.had.co.nz/Data-structures.html\nR nos permite definir variables que pueden ser luego usadas en las distintas operaciones. El lenguaje no solo permite definir escalares (variable de un numero), si no también variables que sean un conjunto de numero o caracteres ordenados.\n\nB.1.1 Variables Numéricas\n\n# La asignación en R son válidos 2 métodos '&lt;-' o '='\nx &lt;- 7 # Definir variable (escalar) x que sea igual a 7\nx # Mostrar que es x\n\n[1] 7\n\ny &lt;- 3 + 2 * x # Crear y como funcion de x \ny\n\n[1] 17\n\nclass(y)\n\n[1] \"numeric\"\n\n\nNúmeros Random con decimales\n\nru &lt;- runif(n = 100, min = 1, max = 10)\nru\n\n  [1] 9.473356 6.040478 4.510763 6.516362 1.543336 7.373860 9.043325 3.190359\n  [9] 4.857324 3.970465 6.034322 4.182500 3.256356 4.191251 5.667761 8.739018\n [17] 4.359806 8.007800 3.502802 9.005406 6.541317 1.417422 5.109838 7.633450\n [25] 9.884280 2.435339 1.467578 8.975747 3.670139 3.088779 6.377084 3.160848\n [33] 3.967706 4.797819 6.567520 2.660434 2.224826 2.353972 4.054589 9.502204\n [41] 4.301190 4.817301 1.983535 7.745105 6.356578 6.376291 9.279361 4.768847\n [49] 4.690305 4.822926 6.033909 4.187271 8.722336 9.485013 3.604847 3.179643\n [57] 5.145904 7.247876 9.068472 3.471114 3.926065 9.314977 2.300168 6.512335\n [65] 4.095063 9.748449 6.307563 2.063822 3.225555 1.826857 3.692400 5.345360\n [73] 4.919958 2.999161 7.093058 1.327682 3.638644 1.952726 4.070841 6.125853\n [81] 3.992749 2.679791 5.906003 7.030280 9.230453 3.331896 5.200322 7.109227\n [89] 1.625768 4.644657 2.666458 4.969422 8.703808 8.478802 7.797970 5.982428\n [97] 1.349329 6.658253 9.379290 2.778944\n\n\n\nhist(ru, breaks = 20, col = \"orange\", border = \"gray60\", \n     main = \"Histograma de valores Random\")\n\n\n\n\n\n\n\n\nNúmeros Random Enteros\nSimular los lanzamientos de un dado\n\nsample.int(n = 6, size = 10, replace = T)\n\n [1] 1 6 5 1 3 6 2 6 2 6\n\n\n\n\nB.1.2 Variables de Caracter\n\nch &lt;- \"Chile\" # Definir variable (objeto) ch que sea la palabra \"Chile\"\nsn &lt;- \"Santiago\"\nch # Mostrar ch\n\n[1] \"Chile\"\n\nsn\n\n[1] \"Santiago\"\n\n\nUnir variables de texto con paste()\n\nch &lt;- \"Chile\" # Definir variable (objeto) ch que sea la palabra \"Chile\"\nsn &lt;- \"Santiago\"\nunion &lt;- paste(sn,ch, sep = \", \")\nunion\n\n[1] \"Santiago, Chile\"\n\n\nUtilizar paste0()\n\nunion &lt;- paste(\"Provincia de \", sn,ch, sep = \", \")\nunion\n\n[1] \"Provincia de , Santiago, Chile\"\n\nunion0 &lt;- paste0(\"Provincia de \", sn, \", \", ch)\nunion0\n\n[1] \"Provincia de Santiago, Chile\"\n\n\nBuscar y reemplazar con gsub\n\nav &lt;- \"Av. Apoquindo\"\ncomuna &lt;- \"comuna de Las Condes\"\ncalle &lt;- paste(av, comuna, union0, sep = \", \")\ncalle\n\n[1] \"Av. Apoquindo, comuna de Las Condes, Provincia de Santiago, Chile\"\n\n# reemplazar Av. por Avenida\ncalle_new &lt;- gsub(pattern = \"Av.\", replacement = \"Avenida\", x = calle)\ncalle_new\n\n[1] \"Avenida Apoquindo, comuna de Las Condes, Provincia de Santiago, Chile\""
  },
  {
    "objectID": "r_project.html#estructuras-de-datos",
    "href": "r_project.html#estructuras-de-datos",
    "title": "Appendix A — R Project",
    "section": "B.2 Estructuras de Datos",
    "text": "B.2 Estructuras de Datos\nLas variables pueden ser un conjunto de números y caracteres ordenados de varias maneras. El orden que se les da depende de lo que queremos lograr con estos.\n\nVector\nMatrices\nDataframes\nFactores\nListas\n\n\nB.2.1 Vectores\nVector Cadenas unidimensionales (es decir una sola columna o fila) de un tipo único de valores (numéricos, caracteres, etc.)\n\nvec &lt;-  c(4, 3, 1, 5, 8, 16)\nvec\n\n[1]  4  3  1  5  8 16\n\nclass(vec)\n\n[1] \"numeric\"\n\nstr(vec)\n\n num [1:6] 4 3 1 5 8 16\n\n\nPodemos seleccionar parte del vector:\n\n# EL primer índice en R es 1 (en otros lenguajes de programación es 0)\nvec[3]\n\n[1] 1\n\n\nLa selección también puede ser hecha con una condición, de tal manera que solo seleccione aquella parte del vector que cumple con la condición.\nMayor a:\n\nvec[vec &gt;= 4]\n\n[1]  4  5  8 16\n\n\nContenido en:\n\nvec[vec %in% c(3, 8, 7, 29)]\n\n[1] 3 8\n\n\nNegación de la condición:\n\nvec[!vec &lt;= 3]\n\n[1]  4  5  8 16\n\n\nTambién podemos realizar operaciones matemáticas simples aplicadas al vector, por ejemplo una suma:\n\nvec2  &lt;-  c(7, 10, 1)\nvec + vec2\n\n[1] 11 13  2 12 18 17\n\n\n\n\nB.2.2 Listas\nSon estructuras eficientes y flexibles, que permiten combinar distintas clases de elementos :\n\nlista &lt;-  list(1, 2, 3, \"cosa\", x, y)\nlista\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3\n\n[[4]]\n[1] \"cosa\"\n\n[[5]]\n[1] 7\n\n[[6]]\n[1] 17\n\nstr(lista)\n\nList of 6\n $ : num 1\n $ : num 2\n $ : num 3\n $ : chr \"cosa\"\n $ : num 7\n $ : num 17\n\n\n\n#Tambien se puede seleccionar parte de una lista, usando el doble corchete:\nlista[[3]]\n\n[1] 3\n\n\nComo inspeccionar una lista con Rstudio\n\n\n\n\n\nB.2.3 Matrices\nSon estructuras de datos con 2 dimensiones, horizontal y la vertical (filas y columnas). Podemos construirlas usando la función “matrix”, con un vector inicial y sus dimensiones:\n\nn &lt;- matrix(c(1.3, 2.8, 3.5, 6.4, 5.3, 6.2, 7, 4.5, 2.4, 6.3, 5.6, 5.3, 6.6, 7, 4.3),\n  nrow = 5, ncol = 3, byrow = TRUE)\nn\n\n     [,1] [,2] [,3]\n[1,]  1.3  2.8  3.5\n[2,]  6.4  5.3  6.2\n[3,]  7.0  4.5  2.4\n[4,]  6.3  5.6  5.3\n[5,]  6.6  7.0  4.3\n\n\nLa matriz tiene 2 dimensiones, por lo que para seleccionar partes de ella es necesario declarar dos dimensiones separadas por una coma. A la izquierda van las filas y a la derecha las columnas. Un valor vacío indica que se seleccionan todos los valores posibles.\n\nn[1,2]\n\n[1] 2.8\n\n\n\nn[,3]\n\n[1] 3.5 6.2 2.4 5.3 4.3\n\n\n\n\nB.2.4 Dataframes\nEstructura mas clásica de datos, es una matriz pero con mas atributos como nombres de columna y/o fila. Es lo mas similar en R a una tabla excel o la tabla de atributos. La manera mas simple de crear un dataframe es a partir de una matriz usando la función as.data.frame() :\n\ndf&lt;- as.data.frame(n)\ndf\n\n   V1  V2  V3\n1 1.3 2.8 3.5\n2 6.4 5.3 6.2\n3 7.0 4.5 2.4\n4 6.3 5.6 5.3\n5 6.6 7.0 4.3\n\n\nPodemos asignar nombres a las columnas del dataframe\n\nnames(df)&lt;- c(\"control_1\",\"control_2\",\"examen\")\ndf\n\n  control_1 control_2 examen\n1       1.3       2.8    3.5\n2       6.4       5.3    6.2\n3       7.0       4.5    2.4\n4       6.3       5.6    5.3\n5       6.6       7.0    4.3\n\n\nY a las filas del dataframe\n\ndf$alumno &lt;- c(\"Sofia\",\"Tomas\",\"Luciano\",\"Julian\",\"Gabriela\")\ndf\n\n  control_1 control_2 examen   alumno\n1       1.3       2.8    3.5    Sofia\n2       6.4       5.3    6.2    Tomas\n3       7.0       4.5    2.4  Luciano\n4       6.3       5.6    5.3   Julian\n5       6.6       7.0    4.3 Gabriela\n\n\nTambién podemos realizar operaciones entre vectores del dataframe:\n\ndf$promedio_final &lt;-  0.3*df$control_1 + 0.3*df$control_2 + 0.4*df$examen\ndf\n\n  control_1 control_2 examen   alumno promedio_final\n1       1.3       2.8    3.5    Sofia           2.63\n2       6.4       5.3    6.2    Tomas           5.99\n3       7.0       4.5    2.4  Luciano           4.41\n4       6.3       5.6    5.3   Julian           5.69\n5       6.6       7.0    4.3 Gabriela           5.80"
  },
  {
    "objectID": "r_project.html#operaciones-básicas-en-r",
    "href": "r_project.html#operaciones-básicas-en-r",
    "title": "Appendix A — R Project",
    "section": "C.1 Operaciones Básicas en R",
    "text": "C.1 Operaciones Básicas en R\n\nC.1.1 Operaciones Matemáticas\nEn R, es posible realizar operaciones matemáticas básicas utilizando los operadores aritméticos estándar. Estos operadores incluyen:\n\nSuma (+): se utiliza para sumar dos valores.\nResta (-): se utiliza para restar un valor de otro.\nMultiplicación (*): se utiliza para multiplicar dos valores.\nDivisión (/): se utiliza para dividir un valor por otro.\nExponenciación (^): se utiliza para elevar un valor a una potencia.\nMódulo (%%): se utiliza para encontrar el resto de la división de un valor por otro.\n\nEstos operadores se pueden utilizar con números enteros, decimales y variables numéricas. Además, también se pueden utilizar paréntesis para especificar el orden de las operaciones.\nA continuación, se presentan algunos ejemplos de operaciones matemáticas básicas en R:\n\n# Suma\n2 + 3 # resultado: 5\n\n[1] 5\n\n# Resta\n5 - 2 # resultado: 3\n\n[1] 3\n\n# Multiplicación\n2 * 4 # resultado: 8\n\n[1] 8\n\n# División\n10 / 2 # resultado: 5\n\n[1] 5\n\n# Exponenciación\n2^3 # resultado: 8\n\n[1] 8\n\n# Módulo\n15 %% 4 # resultado: 3\n\n[1] 3\n\n# Utilizando paréntesis para especificar el orden de las operaciones\n(2 + 3) * 4 # resultado: 20\n\n[1] 20\n\n\nEs importante tener en cuenta que R sigue las reglas de precedencia de las operaciones matemáticas. Esto significa que las operaciones dentro de los paréntesis se evalúan primero, seguidas de la exponenciación, la multiplicación y la división, y finalmente la suma y la resta. Si se requiere un orden específico de operaciones, se deben utilizar paréntesis para indicarlo.\nAdemás, R también cuenta con una variedad de funciones matemáticas incorporadas, como “sin”, “cos”, “tan”, “log”, “exp”, entre otras, que se pueden utilizar para realizar operaciones más complejas.\nTambién se pueden aplica a un elemento a al objeto espacial completo\n\na &lt;- 13\nb &lt;- c(20,30,22,2,1)\n\nsum(b) # suma\n\n[1] 75\n\nsqrt(b) # find the square root of x\n\n[1] 4.472136 5.477226 4.690416 1.414214 1.000000\n\n\n\nmean(b)\n\n[1] 15\n\nmin(b)\n\n[1] 1\n\nmax(b)\n\n[1] 30\n\n\n\n\nC.1.2 Funciones Útiles de propósito general\n\nrep(1, 10)\n\n [1] 1 1 1 1 1 1 1 1 1 1\n\nrep(\"HAHA\", 10)\n\n [1] \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\"\n\nseq(1, 10)\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nseq(1, 10, by = 2)\n\n[1] 1 3 5 7 9\n\nifelse(3 &gt; 5, 1, \"this is false\")\n\n[1] \"this is false\"\n\n\n\npaste(\"Hola\", \"amigo\")\n\n[1] \"Hola amigo\"\n\npaste(\"Hello\", \"amigo\", sep = \"--\")\n\n[1] \"Hello--amigo\"\n\npaste0(\"Hello\", \"amigo\")\n\n[1] \"Helloamigo\"\n\ntolower(\"HAHAHAHAH\")\n\n[1] \"hahahahah\"\n\ntoupper(\"hueuehuehuheuhe\")\n\n[1] \"HUEUEHUEHUHEUHE\""
  },
  {
    "objectID": "r_project.html#operaciones-lógicas",
    "href": "r_project.html#operaciones-lógicas",
    "title": "Appendix A — R Project",
    "section": "C.2 Operaciones Lógicas",
    "text": "C.2 Operaciones Lógicas\nEn R, los operadores lógicos se utilizan para realizar comparaciones lógicas entre valores o expresiones. Estos operadores devuelven valores booleanos (TRUE o FALSE) según se cumpla o no la condición.\nA continuación se presentan los operadores lógicos en R:\n\n\n\n\n\nOperador\nSignificado\nEjemplo\n\n\n\n\n==\nIgual a\n2 == 2 (TRUE)\n\n\n!=\nDiferente a\n2 != 3 (TRUE)\n\n\n&gt;\nMayor que\n3 &gt; 2 (TRUE)\n\n\n&lt;\nMenor que\n2 &lt; 3 (TRUE)\n\n\n&gt;=\nMayor o igual que\n3 &gt;= 2 (TRUE)\n\n\n&lt;=\nMenor o igual que\n2 &lt;= 3 (TRUE)\n\n\n&\nOperador lógico AND\n2 &lt; 3 & 3 &gt; 1 (TRUE)\n\n\n|\nOperador lógico OR\n2 &lt; 3 | 3 &lt; 1 (TRUE)\n\n\n!\nOperador lógico NOT\n!(2 == 3) (TRUE)\n\n\n\n\n\n\n\n\nC.2.1 Operador de igualdad: (==)\nEste operador se utiliza para comparar si dos valores son iguales. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na == b # FALSE\n\n[1] FALSE\n\n\n\n\nC.2.2 Operador de desigualdad: (!=)\nEste operador se utiliza para comparar si dos valores son diferentes. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na != b # TRUE\n\n[1] TRUE\n\n\n\n\nC.2.3 Operador de mayor que: (&gt;)\nEste operador se utiliza para comparar si un valor es mayor que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\nb &gt; a # TRUE\n\n[1] TRUE\n\n\n\n\nC.2.4 Operador de menor que: (&lt;)\nEste operador se utiliza para comparar si un valor es menor que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na &lt; b # TRUE\n\n[1] TRUE\n\n\n\n\nC.2.5 Operador de mayor o igual que: (&gt;=)\nEste operador se utiliza para comparar si un valor es mayor o igual que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\nb &gt;= a # TRUE\n\n[1] TRUE\n\n\n\n\nC.2.6 Operador de menor o igual que: (&lt;=)\nEste operador se utiliza para comparar si un valor es menor o igual que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na &lt;= b # TRUE\n\n[1] TRUE\n\n\n\n\nC.2.7 Operador lógico AND: (&)\nEste operador se utiliza para evaluar dos o más condiciones y retornar TRUE si todas se cumplen, de lo contrario retorna FALSE.\n\na &lt;- 2\nb &lt;- 3\nc &lt;- 4\na &lt; b & b &lt; c # TRUE\n\n[1] TRUE\n\n\n\n\nC.2.8 Operador lógico OR: (|)\nEste operador se utiliza para evaluar dos o más condiciones y retornar TRUE si al menos una se cumple, de lo contrario retorna FALSE.\n\na &lt;- 2\nb &lt;- 3\nc &lt;- 4\na &gt; b | b &lt; c # TRUE\n\n[1] TRUE\n\n\nOperador lógico NOT: (!) Este operador se utiliza para negar una condición. Si la condición es TRUE, retorna FALSE, y si la condición es FALSE, retorna TRUE.\n\na &lt;- 2\nb &lt;- 3\n!(a == b) # TRUE\n\n[1] TRUE\n\n\nEs importante tener en cuenta que los operadores lógicos se pueden utilizar en combinación para crear expresiones lógicas más complejas. Además, los operadores lógicos también se pueden utilizar en las estructuras de control condicionales, como if/else y switch, para tomar decisiones basadas en condiciones lógicas."
  },
  {
    "objectID": "r_project.html#crear-funciones-propias",
    "href": "r_project.html#crear-funciones-propias",
    "title": "Appendix A — R Project",
    "section": "C.3 Crear Funciones Propias",
    "text": "C.3 Crear Funciones Propias\nEn R, es posible crear funciones propias para realizar tareas específicas y reutilizarlas en diferentes partes de un programa. Para crear una función en R, se utiliza la siguiente estructura:\n\nnombre_de_la_funcion &lt;- function(argumentos) {\n  cuerpo_de_la_funcion\n}\n\nPor ejemplo, se puede crear una función que calcule la suma de dos números:\n\nsuma &lt;- function(a, b) {\n  resultado &lt;- a + b\n  return(resultado)\n}\n\nresultado_suma &lt;- suma(2, 3)\nprint(resultado_suma) # 5\n\n[1] 5\n\n\nPor ejemplo, se puede crear una función que eleve al cuadrado:\n\ncuadrado &lt;- function(x) { # x = parámetro\n    y = x ^ 2 # asiganción de variables solo dentro de la función\n    return(y) # especificar valor retornado (no necesario completamente)\n}\n\n\na &lt;- 13\nb &lt;- c(20,30,22,2,1)\ncuadrado(a)\n\n[1] 169\n\ncuadrado(b)\n\n[1] 400 900 484   4   1\n\n\nEs importante tener en cuenta que los nombres de las funciones en R deben cumplir las mismas reglas que los nombres de las variables. Además, es recomendable incluir comentarios explicativos dentro del cuerpo de la función para facilitar su comprensión y uso posterior.\nActividad:\nActividad: Crear una función que calcule la hipotenusa de un triángulo rectángulo (Teorema de Pitágoras):\n\n\n\nEstablece que el cuadrado de la longitud de la hipotenusa es igual a la suma de los cuadrados de las longitudes de los catetos.\nc^2 = {a^2}+{b^2}\nPor lo cual:\nc = \\sqrt{{a^2}+{b^2}}\n\n\n\n\n\n\nAyuda\n\n\n\n\nhipotenusa &lt;- function(a, b){\n  #h &lt;-     # En esta parte escribir la función\n  return(h)\n}\nr1 &lt;-  hipotenusa(a = 5,  b = 5)\n\n\n\nEncontrar la Hipotenusa de:\nh=?, a = 10, b = 6\nh=?, a = 5, b = 4\nh=?, a = 3, b = 4"
  },
  {
    "objectID": "r_project.html#estructuras-condicionales",
    "href": "r_project.html#estructuras-condicionales",
    "title": "Appendix A — R Project",
    "section": "D.1 Estructuras condicionales",
    "text": "D.1 Estructuras condicionales\nLas estructuras condicionales son una de las tres estructuras de control principales en R. Estas estructuras permiten ejecutar un bloque de código solo si se cumple una condición determinada.\nLa estructura condicional más común en R es “if”. La sintaxis básica de la estructura “if” es la siguiente:\n\nif(Condición) {\n  operaciones_si_la_condición_es_TRUE\n}\n\nLa “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, el bloque de código dentro del “if” se ejecutará. Si la condición es falsa, el bloque de código dentro del “if” se ignorará.\nPor ejemplo, le pedimos a R que nos muestre el texto “Verdadero” si la condición se cumple.\n\n# Se cumple la condición y se muestra \"verdadero\"\nif(4 &gt; 3) {\n  \"Verdadero\"\n}\n\n[1] \"Verdadero\"\n\n\n\n# No se cumple la condición y no pasa nada\nif(4 &gt; 5) {\n  \"Verdadero\"\n}\n\nTambién se puede agregar un bloque de código opcional para el caso en que la condición sea falsa utilizando la estructura “else”. La sintaxis básica de la estructura “if” con “else” es la siguie\nSI esta condición es es cierta, ENTONCES haz estas operaciones, DE OTRO MODO haz estas otras operaciones.\n\nif(condición) {\n  operaciones_si_la_condición_es_TRUE\n} else {\n  operaciones_si_la_condición_es_FALSE\n}\n\nUsando los ejemplos anteriores, podemos mostrar “Falso” si no se cumple la condición, en lugar de que no ocurra nada\n\n# Se cumple la condición y se muestra \"Verdadero\"\nif(4 &gt; 3) {\n  \"Verdadero\"\n} else {\n  \"Falso\"\n}\n\n[1] \"Verdadero\"\n\n\nLa estructura “ifelse” es otra forma de estructura condicional que permite ejecutar diferentes bloques de código en función de la condición. La sintaxis básica de la estructura “ifelse” es la siguiente:\n\nifelse(condición, expresión1, expresión2)\n\nSi la “condición” es verdadera, se ejecutará “expresión1”. Si la “condición” es falsa, se ejecutará “expresión2”.\nAdemás, se pueden anidar varias estructuras condicionales utilizando la sintaxis de “if” y “else”. Por ejemplo:\n\nif (condición1) {\n  # Código a ejecutar si la condición1 es verdadera\n} else if (condición2) {\n  # Código a ejecutar si la condición1 es falsa y la condición2 es verdadera\n} else {\n  # Código a ejecutar si todas las condiciones son falsas\n}\n\nEn resumen, las estructuras condicionales en R son herramientas muy útiles para controlar el flujo de ejecución de un programa en función de ciertas condiciones. Estas estructuras permiten crear soluciones más eficientes y complejas al permitir que los programas tomen decisiones y realicen acciones en función de las condiciones que se presenten."
  },
  {
    "objectID": "r_project.html#estructuras-de-bucles",
    "href": "r_project.html#estructuras-de-bucles",
    "title": "Appendix A — R Project",
    "section": "D.2 Estructuras de bucles",
    "text": "D.2 Estructuras de bucles\nLas estructuras de bucles son una de las tres estructuras de control principales en R. Estas estructuras permiten ejecutar un bloque de código repetidamente mientras se cumpla una condición determinada. En R, existen tres estructuras de bucles principales: “while”, “for” y “repeat”.\nBeneficios\n\nEs más fácil ver el objetivo de tu código; lo diferente llama más atención a la vista que aquello que permanece igual.\nEs más sencillo responder a cambios en los requerimientos. A medida que tus necesidades cambian, solo necesitarás realizar cambios en un lugar, en vez de recordar cambiar en cada lugar donde copiaste y pegaste el código.\nEs probable que tengas menos errores porque cada línea de código es utilizada en más lugares.\n\n\nD.2.1 Estructura de bucle “for”:\nLa estructura “for” permite repetir la ejecución de un bloque de código un número determinado de veces. La sintaxis básica de la estructura “for” es la siguiente:\n\nfor (variable in secuencia) {\n  # Código a ejecutar para cada elemento en la secuencia\n}\n\nLa “secuencia” es un objeto que contiene una serie de elementos. La “variable” toma el valor de cada elemento de la secuencia en cada iteración del bucle. En cada iteración, se ejecutará el bloque de código dentro del “for” para ese valor de la variable.\nEjemplo simple: print una secuencia\n\nfor (i in 1:5){\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\nEjemplo 2: Guardando los resultados en un vector\n\ndado &lt;- 1:6\nmi_vector &lt;- NULL\nfor(cara in dado) {\n  mi_vector[cara] &lt;- cara ^ 2\n}\nmi_vector\n\n[1]  1  4  9 16 25 36\n\n\nEjemplo 3: Loops con vectores\n\nalumnos &lt;- c(\"Carmen\", \"Adriana\", \"Marco\", \"Fabi\", \"Brenda\")\n\nfor(i in 1:length(alumnos)) {\n  print(paste(\"Hola,\", alumnos[i], sep = \" \"))\n}\n\n[1] \"Hola, Carmen\"\n[1] \"Hola, Adriana\"\n[1] \"Hola, Marco\"\n[1] \"Hola, Fabi\"\n[1] \"Hola, Brenda\"\n\n\nEjemplo 4: loops en Dataframes\n\ndf &lt;- data.frame(a = rnorm(10), b = rnorm(10),\n                 c = rnorm(10), d = rnorm(10))\n\nfor(i in 1:ncol(df)){\n  promedio = mean(df[,i])\n  print(promedio)\n}\n\n[1] -0.1792997\n[1] -0.2093232\n[1] -0.3982068\n[1] 0.05786447\n\n\n\n\nD.2.2 Estructura de bucle “while”:\nLa estructura “while” permite repetir la ejecución de un bloque de código mientras se cumpla una condición determinada. La sintaxis básica de la estructura “while” es la siguiente:\n\nwhile (condición) {\n  # Código a ejecutar mientras se cumpla la condición\n}\n\nLa “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, se ejecutará el bloque de código dentro del “while”. Este proceso se repetirá hasta que la condición sea falsa.\n\n\nD.2.3 Estructura de bucle “repeat”:\n\nrepeat {\n  # Código a ejecutar de manera indefinida\n  if (condición) {\n    break\n  }\n}\n\nEl bloque de código dentro del “repeat” se ejecutará de manera indefinida hasta que se encuentre la sentencia “break”, que permite salir del bucle. La “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, se ejecutará la sentencia “break” y se saldrá del bucle."
  },
  {
    "objectID": "r_project.html#estructuras-de-control-de-flujo",
    "href": "r_project.html#estructuras-de-control-de-flujo",
    "title": "Appendix A — R Project",
    "section": "D.3 Estructuras de control de flujo",
    "text": "D.3 Estructuras de control de flujo\n“next” y “break” son palabras clave importantes en R que se utilizan en las estructuras de control de flujo, específicamente en las estructuras de bucle. “next” se utiliza para saltar a la siguiente iteración del bucle sin ejecutar el resto del código dentro del bucle, mientras que “break” se utiliza para detener el bucle de forma abrupta, incluso si la condición del bucle todavía se cumple.\n\nD.3.1 Estructuras de control “next”:\n“next” se utiliza en una estructura de bucle para saltar a la siguiente iteración del bucle sin ejecutar el resto del código dentro del bucle. Es decir, si se encuentra la palabra clave “next” dentro de un bucle, se omitirá el código que viene después y el bucle pasará inmediatamente a la siguiente iteración. La palabra clave “next” es útil cuando se desea saltar una iteración específica del bucle, sin afectar el resto del código.\nPor ejemplo, en el siguiente código se utiliza la palabra clave “next” para omitir la impresión del número 3 dentro del bucle “for”:\n\nfor (i in 1:5) {\n  if (i == 3) {\n    next\n  }\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 4\n[1] 5\n\n\n\n\nD.3.2 Estructuras de control “break”:\n“break”, por otro lado, se utiliza en una estructura de bucle para detener el bucle de forma abrupta, incluso si la condición del bucle todavía se cumple. Es decir, si se encuentra la palabra clave “break” dentro de un bucle, se detendrá el bucle de inmediato y se continuará con la ejecución del código que viene después del bucle. La palabra clave “break” es útil cuando se desea detener el bucle en un punto específico sin tener que esperar a que la condición del bucle se deje de cumplir.\nPor ejemplo, en el siguiente código se utiliza la palabra clave “break” para detener el bucle “while” cuando el valor de “i” es mayor que 5:\n\ni &lt;- 1\nwhile (i &lt; 10) {\n  if (i &gt; 5) {\n    break\n  }\n  print(i)\n  i &lt;- i + 1\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5"
  },
  {
    "objectID": "r_project.html#introducción-a-tidyverse",
    "href": "r_project.html#introducción-a-tidyverse",
    "title": "Appendix A — R Project",
    "section": "E.1 Introducción a Tidyverse",
    "text": "E.1 Introducción a Tidyverse\nTidyverse es una colección de paquetes diseñados para Ciencia de Datos.\n\n\n\n\n\n\n# instalación\ninstall.packages(\"tidyverse\")\n\nTodos los paquetes comparten una filosofía de diseño, una gramática y estructuras de datos.\nEsta filosofía promueve\n\nEn Pipes, navegarás dentro del pipe, %&gt;%, para anidar instrucciones\nSi bien copiar-y-pegar (copy-and-paste) es una herramienta poderosa, deberías evitar utilizarla más de dos veces. Repetir el código es peligroso porque puede llevar a errores e inconsistencias.\nA medida que comiences a escribir funciones más potentes, necesitarás una base sólida acerca de las estructuras de datos.\nLas funciones nos permiten evitar la repetición de código; sin embargo, muchas veces necesitas repertir las mismas acciones con diferentes inputs. Puedes hacer esto con herramientas de iteración."
  },
  {
    "objectID": "r_project.html#estructura-de-un-dataframe",
    "href": "r_project.html#estructura-de-un-dataframe",
    "title": "Appendix A — R Project",
    "section": "E.2 Estructura de un dataframe",
    "text": "E.2 Estructura de un dataframe\n\n\n\nLectura de Base de SII\n\nsuppressPackageStartupMessages(library(dplyr))\nsuppressPackageStartupMessages(library(sf))\ntbl_sii  &lt;- readRDS(\"data/sii/mz_constru_SII.rds\") %&gt;% \n  st_drop_geometry() # descartar geometrias solo usar la tabla de datos\n\nhead(tbl_sii)\n\n# A tibble: 6 × 10\n  n_com   manzana   reg cod_com num_manz oficinas comercio vivienda total   AREA\n  &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 IQUIQUE 1201-0      1    1201        0        0        0        0     0   585.\n2 IQUIQUE 1201-0      1    1201        0        0        0        0     0 17291.\n3 ALTO H… 1211-0      1    1211        0        0        0        0     0  1859.\n4 ALTO H… 1211-0      1    1211        0        0        0        0     0   442.\n5 ALTO H… 1211-0      1    1211        0        0        0        0     0   205.\n6 ALTO H… 1211-0      1    1211        0        0        0        0     0  1200."
  },
  {
    "objectID": "r_project.html#funciones-básicas-dplyr",
    "href": "r_project.html#funciones-básicas-dplyr",
    "title": "Appendix A — R Project",
    "section": "E.3 Funciones básicas dplyr",
    "text": "E.3 Funciones básicas dplyr\n\n\n\n\nE.3.1 Select\nselect Seleccionar variables relevantes\n\n# seleccionar nomnres de columnas que deseo conservar\ntbl_sii %&gt;%\n  select(n_com, oficinas, comercio, vivienda)\n\n# A tibble: 210,662 × 4\n   n_com         oficinas comercio vivienda\n   &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 IQUIQUE              0        0        0\n 2 IQUIQUE              0        0        0\n 3 ALTO HOSPICIO        0        0        0\n 4 ALTO HOSPICIO        0        0        0\n 5 ALTO HOSPICIO        0        0        0\n 6 ALTO HOSPICIO        0        0        0\n 7 ALTO HOSPICIO        0        0        0\n 8 ALTO HOSPICIO        0        0        0\n 9 ALTO HOSPICIO        0        0        0\n10 ALTO HOSPICIO        0        0        0\n# ℹ 210,652 more rows\n\n# seleccionar nomnres de columnas que deseo eliminar anteponiendo un \"-\"\ntbl_sii %&gt;%\n  select(-cod_com)\n\n# A tibble: 210,662 × 9\n   n_com         manzana   reg num_manz oficinas comercio vivienda total   AREA\n   &lt;chr&gt;         &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 IQUIQUE       1201-0      1        0        0        0        0     0   585.\n 2 IQUIQUE       1201-0      1        0        0        0        0     0 17291.\n 3 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  1859.\n 4 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   442.\n 5 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   205.\n 6 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  1200.\n 7 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  4548.\n 8 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   130.\n 9 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   300.\n10 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  6488.\n# ℹ 210,652 more rows\n\n\n\n\nE.3.2 Filter\n\nmi_comuna &lt;- \"LAS CONDES\" \n\nsii_com &lt;- tbl_sii %&gt;%\n  filter(n_com == mi_comuna) \n \nhead(sii_com, 5)\n\n# A tibble: 5 × 10\n  n_com    manzana   reg cod_com num_manz oficinas comercio vivienda total  AREA\n  &lt;chr&gt;    &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 LAS CON… 15108-…    13   15108     2358        0        0     1316  1390 2358.\n2 LAS CON… 15108-…    13   15108     2360        0        0     1590  1622 2280.\n3 LAS CON… 15108-…    13   15108     2362        0        0     1436  1502 2659.\n4 LAS CON… 15108-…    13   15108     2364        0        0     1926  1926 3348.\n5 LAS CON… 15108-…    13   15108     2366        0        0     2584  2656 4390.\n\n\nfilter: Operadores Lógicos\n\n\n\n\n\nOperador\nComparación\nEjemplo\nResultado\n\n\n\n\nx | y\nx Ó y es verdadero\nTRUE | FALSE\nTRUE\n\n\nx & y\nx Y y son verdaderos\nTRUE & FALSE\nFALSE\n\n\n!x\nx no es verdadero (negación)\n!TRUE\nFALSE\n\n\nisTRUE(x)\nx es verdadero (afirmación)\nisTRUE(TRUE)\nTRUE\n\n\n\n\n\n\n\nFiltrar las manzanas que tengan valores de oficina y comercio mayores a 0\n\nsii_com %&gt;%\n  filter(oficinas &gt; 0 & comercio &gt; 0) \n\n# A tibble: 493 × 10\n   n_com manzana   reg cod_com num_manz oficinas comercio vivienda  total   AREA\n   &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 LAS … 15108-…    13   15108     2400     322     3388    65422  1.22e5 1.06e5\n 2 LAS … 15108-…    13   15108     2407   30864     2518        0  7.50e4 4.04e3\n 3 LAS … 15108-…    13   15108     1392     424     9902        0  1.58e4 1.27e4\n 4 LAS … 15108-…    13   15108      336   45190     1432        0  8.28e4 3.24e3\n 5 LAS … 15108-…    13   15108      338     424.     244.    9993. 1.17e4 1.11e4\n 6 LAS … 15108-…    13   15108      338     414.     238.    9765. 1.14e4 1.06e4\n 7 LAS … 15108-…    13   15108      339    1120     5274     7748  1.49e4 9.38e3\n 8 LAS … 15108-…    13   15108      340     250       72    55206  7.23e4 1.22e4\n 9 LAS … 15108-…    13   15108      342     494     1914    47690  6.97e4 1.62e4\n10 LAS … 15108-…    13   15108      349   17826     1568        0  3.38e4 1.84e3\n# ℹ 483 more rows"
  },
  {
    "objectID": "r_project.html#resúmenes-estadísticos-con-dplyr",
    "href": "r_project.html#resúmenes-estadísticos-con-dplyr",
    "title": "Appendix A — R Project",
    "section": "E.4 Resúmenes Estadísticos con dplyr",
    "text": "E.4 Resúmenes Estadísticos con dplyr\n\n\n\nContabilizar cuantos metros cuadrados de oficina por cada comuna.\n\ntbl_resumen &lt;-  tbl_sii %&gt;%\n  group_by(n_com) %&gt;%\n  summarise(Cantidad_mz = n(),\n            Total_of = sum(oficinas)) %&gt;%\n  arrange(desc(Total_of)) # Ordenar\n\ntbl_resumen\n\n# A tibble: 170 × 3\n   n_com           Cantidad_mz Total_of\n   &lt;chr&gt;                 &lt;int&gt;    &lt;dbl&gt;\n 1 SANTIAGO CENTRO         686  6105996\n 2 LAS CONDES             2310  4248336\n 3 PROVIDENCIA             885  3495426\n 4 HUECHURABA             1160  1006138\n 5 QUILICURA              2592   751874\n 6 VITACURA                950   743734\n 7 SANTIAGO SUR            623   669270\n 8 Ã‘UÃ‘OA                1337   637982\n 9 SANTIAGO OESTE          586   586724\n10 PUDAHUEL               2775   561868\n# ℹ 160 more rows\n\n\nActividad\n\nContabilizar cuantos metros cuadrados de Comercio hay por cada comuna rdenar de mayor a menor.\nCrear tabla con las 10 comunas que tienen mayor densisdad de Comercio\n\n\n\n\n\n\n\nDensidad de comercio\n\n\n\nSe puede entender como la división de la cantidad de metros cuadrados de comercio dividio por el total de metros cuadrados."
  },
  {
    "objectID": "r_project.html#visualización-de-variables",
    "href": "r_project.html#visualización-de-variables",
    "title": "Appendix A — R Project",
    "section": "E.5 Visualización de Variables",
    "text": "E.5 Visualización de Variables\n\nE.5.1 Función Plot\n\noptions(scipen = 999) # evitas notación cientiífica\nhist(sii_com$vivienda, breaks = 50,\n     main = \"Histograma mt2 de Viviendas\", col = \"#225ea8\")\n\n\n\n# colores:https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3\n\n\n\nE.5.2 Package ggplot2\n\nlibrary(ggplot2)\nggplot(sii_com, aes(x = vivienda)) + \n  geom_histogram(bins = 50, fill = \"#225ea8\", color =\"black\")\n\n\n\n\n\n\n\n\nggplot2 con estilos y características\n\nggplot(sii_com, aes(x = vivienda)) +\n  geom_histogram(bins = 50, color = \"#c7e9b4\", fill = \"#1d91c0\")+\n  theme_bw()+\n  labs(title=\"Histograma mt2 de Viviendas\", x =\"Mt2. Viviendas\", y = \"Frecuencias\")+\n  theme(plot.title = element_text(face = \"bold\",colour= \"gray60\", size=10))"
  },
  {
    "objectID": "r_project.html#introducción",
    "href": "r_project.html#introducción",
    "title": "Appendix A — R Project",
    "section": "B.1 Introducción",
    "text": "B.1 Introducción\nUn rasgo es una cosa, un objeto del mundo real, como un edificio o un árbol. Al igual que los objetos, suelen estar formados por otros objetos. Lo mismo ocurre con los rasgos: un conjunto de rasgos puede formar un único rasgo. Una masa forestal puede ser un rasgo, un bosque puede ser un rasgo, una ciudad puede ser un rasgo. Un píxel de una imagen de satélite puede ser un rasgo, una imagen completa también puede ser un rasgo.\nLos elementos tienen una geometría que describe su ubicación en la Tierra y atributos que describen otras propiedades. La geometría de un árbol puede ser la delineación de su copa, de su tallo o el punto que indica su centro. Otras propiedades pueden ser su altura, color, diámetro a la altura del pecho en una fecha determinada, etc."
  },
  {
    "objectID": "r_project.html#lectura-de-insumos-espaciales",
    "href": "r_project.html#lectura-de-insumos-espaciales",
    "title": "Appendix A — R Project",
    "section": "B.2 Lectura de Insumos Espaciales",
    "text": "B.2 Lectura de Insumos Espaciales\n\n# install.packages(\"sf\")\nlibrary(sf)\ncrs_ll &lt;- \"+proj=longlat +datum=WGS84 +no_defs\"\ncrs_utm &lt;- \"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0\"\ncenso &lt;-  readRDS(\"data/ine/Zonas_Censales_2017_Nacional.rds\")"
  },
  {
    "objectID": "r_project.html#transformar-a-objeto-sf-simple-features",
    "href": "r_project.html#transformar-a-objeto-sf-simple-features",
    "title": "Appendix A — R Project",
    "section": "B.3 Transformar a objeto sf (simple features)",
    "text": "B.3 Transformar a objeto sf (simple features)\n\n# transformar a objeto sf (simple features)\ncenso_sf &lt;- st_as_sf(censo)\n# head(censo_sf)\nnames(censo_sf)\n\n [1] \"REGION\"     \"NOM_REGION\" \"PROVINCIA\"  \"NOM_PROVIN\" \"COMUNA\"    \n [6] \"NOM_COMUNA\" \"URBANO\"     \"DISTRITO\"   \"LOC_ZON\"    \"GEOCODIGO\" \n[11] \"SHAPE_Leng\" \"SHAPE_Area\" \"geometry\""
  },
  {
    "objectID": "r_project.html#filtros-espaciales-por-data",
    "href": "r_project.html#filtros-espaciales-por-data",
    "title": "Appendix A — R Project",
    "section": "B.4 Filtros espaciales por data",
    "text": "B.4 Filtros espaciales por data\n\nlibrary(dplyr)\nmi_communa &lt;-  \"LAS CONDES\"\n\nzonas_com &lt;-  censo_sf %&gt;% \n  filter(NOM_COMUNA == mi_communa)\n\nzonas_com %&gt;% head()\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -70.56629 ymin: -33.41713 xmax: -70.47884 ymax: -33.36421\nGeodetic CRS:  +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0\n            REGION                       NOM_REGION PROVINCIA NOM_PROVIN COMUNA\n13114051001     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114041001     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114041003     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114161002     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114151003     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114021002     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n            NOM_COMUNA     URBANO DISTRITO LOC_ZON   GEOCODIGO SHAPE_Leng\n13114051001 LAS CONDES LAS CONDES        5       1 13114051001 0.02302722\n13114041001 LAS CONDES LAS CONDES        4       1 13114041001 0.09575698\n13114041003 LAS CONDES LAS CONDES        4       3 13114041003 0.06782420\n13114161002 LAS CONDES LAS CONDES       16       2 13114161002 0.06482893\n13114151003 LAS CONDES LAS CONDES       15       3 13114151003 0.04135677\n13114021002 LAS CONDES LAS CONDES        2       2 13114021002 0.04687558\n              SHAPE_Area                       geometry\n13114051001 3.357387e-05 MULTIPOLYGON (((-70.56008 -...\n13114041001 2.708800e-04 MULTIPOLYGON (((-70.47951 -...\n13114041003 2.451087e-04 MULTIPOLYGON (((-70.5267 -3...\n13114161002 1.450608e-04 MULTIPOLYGON (((-70.50789 -...\n13114151003 8.288767e-05 MULTIPOLYGON (((-70.51477 -...\n13114021002 5.754391e-05 MULTIPOLYGON (((-70.53606 -..."
  },
  {
    "objectID": "r_project.html#visualización-cartográficas",
    "href": "r_project.html#visualización-cartográficas",
    "title": "Appendix A — R Project",
    "section": "B.5 Visualización Cartográficas",
    "text": "B.5 Visualización Cartográficas\n\nB.5.1 Visualización estática Simple\n\n## Visualizar\n# Consideración el plot se realiza sobre la columna geometry\n\nnombre_plot &lt;-  paste0(\"COMUNA DE \", mi_communa)\nplot(zonas_com$geometry, main = nombre_plot,col =\"orange\")\n\n\n\n\n\n\n\n\n\n\nB.5.2 Visualización estática con ggplot2\n\nlibrary(ggplot2)\n\n# Visualización ggplot y sf\nggplot() +\n  geom_sf(data = zonas_com, fill = \"orange\", alpha=0.5)+\n  ggtitle(nombre_plot) +\n  theme_bw() +\n  theme(legend.position=\"none\")+\n  theme(panel.grid.major = element_line(colour = \"gray80\"),\n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n\n\n\nB.5.3 Visualización Dinámica con mapview\n\n# install.packages(\"mapview\")\nlibrary(mapview)\nm &lt;- mapview(zonas_com, alpha = 0.5,\n        col.regions = \"orange\", color=\"gray80\",\n        legend =FALSE, cex = 3)\nm"
  },
  {
    "objectID": "r_project.html#referencias",
    "href": "r_project.html#referencias",
    "title": "Appendix A — R Project",
    "section": "A.6 Referencias:",
    "text": "A.6 Referencias:\n\nR para Ciencia de Datos\nRStudio para Estadística Descriptiva en Ciencias Sociales\nhttps://bookdown.org/jboscomendoza/r-principiantes4/estructuras-de-control.html"
  },
  {
    "objectID": "index.html#objetivos",
    "href": "index.html#objetivos",
    "title": "Análisis Criminológico Espacial",
    "section": "Objetivos",
    "text": "Objetivos\nEl Objetivo General de aprendizaje este curso es aplicar herramientas eficientes para el trabajo con grandes volúmenes de datos, aplicándolos al análisis de patrones territoriales y tendencias delictuales.\nObjetivos específicos: \n\nAbrir datos de formato diverso, limpiarlos, estructurarlos y concatenarlos, en R.\nGenerar indicadores y series longitudinales con datos de panel, en R.\nExportar datos agregados a .csv y .shp, para analizar casos territoriales en otros programas.\n\nSe evaluará la aplicación de estas herramientas al análisis personal de casos territoriales."
  },
  {
    "objectID": "index.html#objetivos-del-curso",
    "href": "index.html#objetivos-del-curso",
    "title": "Análisis Criminológico de Datos",
    "section": "Objetivos del curso",
    "text": "Objetivos del curso\nEl Objetivo General de aprendizaje este curso es aplicar herramientas eficientes para el trabajo con grandes volúmenes de datos, aplicándolos al análisis de patrones territoriales y tendencias delictuales.\nObjetivos específicos: \n\nAbrir datos de formato diverso, limpiarlos, estructurarlos y concatenarlos, en R.\nGenerar indicadores y series longitudinales con datos de panel, en R.\nExportar datos agregados a .csv y .shp, para analizar casos territoriales en otros programas.\n\nSe evaluará la aplicación de estas herramientas al análisis personal de casos territoriales."
  },
  {
    "objectID": "index.html#metodología",
    "href": "index.html#metodología",
    "title": "Técnicas Avanzadas de Análisis Delictual Aplicado",
    "section": "Metodología",
    "text": "Metodología\n\nEl curso considera sesiones de 1- hora 20, las que se desarrollarán en modalidad presencial teórica de 9:00 a 10:20 y en online en vivo práctica de 11:30 a 12:50 respectivamente. Los días martes se considera una sesión de 1 hora y 20 minutos de trabajo asistido online.\nDe esta manera cada semana tendrá tres partes: una teórica, en la que se explicarán los conceptos fundamentales de la criminología espacial, y otra práctica, en la que los alumnos podrán aplicar las metodologías de análisis espacial estudiadas mediante herramientas de programación con la orientación del profesor y finalmente desarrollar trabajo autónomo asistido por un docente."
  },
  {
    "objectID": "index.html#evaluaciones",
    "href": "index.html#evaluaciones",
    "title": "Técnicas Avanzadas de Análisis Delictual Aplicado",
    "section": "Evaluaciones",
    "text": "Evaluaciones\nEl proceso evaluativo de este curso se basa en la comprensión de que este debe ser continuo y estar ligado al desarrollo de los aprendizajes y no unilateralmente a la calificación. Cada actividad evaluativa tendrá etapas de profundización progresiva y acompañamiento al estudiante para la mejora.\n\nSe realizarán dos tareas que contarán con una ponderación del 30% cada una. Estas tareas estarán diseñadas para evaluar la comprensión de los conceptos clave y la aplicación de los mismos a situaciones prácticas.\nSe llevará a cabo un trabajo final que tendrá un peso del 40% en la nota final. Este trabajo final será una oportunidad para profundizar en una zona urbana de interés y demostrar la capacidad de análisis y síntesis de los contenidos del curso."
  },
  {
    "objectID": "index.html#horarios",
    "href": "index.html#horarios",
    "title": "Técnicas Avanzadas de Análisis Delictual Aplicado",
    "section": "Horarios",
    "text": "Horarios\nSeptiembre:\n\n\n\nOctubre:"
  },
  {
    "objectID": "index.html#sesiones",
    "href": "index.html#sesiones",
    "title": "Técnicas Avanzadas de Análisis Delictual Aplicado",
    "section": "Sesiones",
    "text": "Sesiones\n\n\n\n\n\n\n\n\nFecha\nHorario\nModalidad\nTema\n\n\n\n\n01-09-23\n9h00 - 10h20\nPresencial teórica\nBienvenida. Introducción a la Criminología desde la economía política, la sociología y la geografía.\n\n\n05-09-23\n11h00 - 12h20\nSincrónica Online práctica\nLectura de datos en formato entregado por Carabineros, limpieza, transformación y estructuración de datos en R.\n\n\n05-09-23\n15h00 - 16h20\nSincrónica Online asistida\nTarea 1: estructurar datos de casos policiales por zona censal y de denuncia seguro por comunas en el año 2022\n\n\n08-09-23\n9h00 - 10h20\nPresencial teórica\nCrimen organizado, evolución global y en teórica América Latina\n\n\n08-09-23\n11h30 - 12h50\nSincrónica Online práctica\nEstructuración y análisis de paneles de datos 1, en R.\n\n\n12-09-23\n15h00 - 16h20\nSincrónica Online asistida\nTarea 2: analizar tendencias de casos policiales y de denuncia seguro, por regiones, en el período 2017-2022\n\n\n15-09-23\n9h00 - 10h20\nPresencial teórica\nEvolución de tendencias criminales en Chile 2017-2022\n\n\n15-09-23\n11h30 - 12h50\nSincrónica Online práctica\nEstructuración y análisis de paneles de datos 2, R y exportación a Excel.\n\n\n26-09-23\n15h00 - 16h20\nSincrónica Online asistida\nProfundización de tarea 2.\n\n\n29-09-23\n9h00 - 10h20\nPresencial teórica\nEconomía política y sociología del poder en las organizaciones criminales\n\n\n29-09-23\n11h30 - 12h50\nSincrónica Online práctica\nCálculo de indicadores territoriales de evolución criminal y exportación a Shapefile.\n\n\n03-10-23\n15h00 - 16h20\nSincrónica Online asistida\nSincrónica Online asistida\n\n\n06-10-23\n9h00 - 10h20\nPresencial teórica\nSíntesis y discusión del curso\n\n\n06-10-23\n11h30 - 12h50\nSincrónica Online práctica\nRepresentación estadística y cartográfica de evolución criminal.\n\n\n10-10-23\n15h00 - 16h20\nSincrónica Online asistida\nProfundización de trabajo final.\n\n\n13-10-23\n9h00 - 11h30\nPresencial integradora\nSeminario abierto con autoridades y colegas. Presentación de trabajos."
  },
  {
    "objectID": "index.html#reglamento",
    "href": "index.html#reglamento",
    "title": "Técnicas Avanzadas de Análisis Delictual Aplicado",
    "section": "REGLAMENTO",
    "text": "REGLAMENTO\nAdministrativamente el Curso se guía por el Reglamento Académico y el código de Honor de la UAI. Los requisitos de aprobación son los siguientes:\n\n75% de Asistencia (el éxito del curso requiere de la asistencia y participación de los alumnos en las discusiones).\nPromedio final mínimo de 4,0."
  },
  {
    "objectID": "adms.html#objetivos-del-curso",
    "href": "adms.html#objetivos-del-curso",
    "title": "Syllabus",
    "section": "Objetivos del curso",
    "text": "Objetivos del curso\nEl Objetivo General de aprendizaje este curso es aplicar herramientas eficientes para el trabajo con grandes volúmenes de datos, aplicándolos al análisis de patrones territoriales y tendencias delictuales.\nObjetivos específicos: \n\nAbrir datos de formato diverso, limpiarlos, estructurarlos y concatenarlos, en R.\nGenerar indicadores y series longitudinales con datos de panel, en R.\nExportar datos agregados a .csv y .shp, para analizar casos territoriales en otros programas.\n\nSe evaluará la aplicación de estas herramientas al análisis personal de casos territoriales."
  },
  {
    "objectID": "adms.html#metodología",
    "href": "adms.html#metodología",
    "title": "Syllabus",
    "section": "Metodología",
    "text": "Metodología\n\nEl curso considera sesiones de 1- hora 20, las que se desarrollarán en modalidad presencial teórica de 9:00 a 10:20 y en online en vivo práctica de 11:30 a 12:50 respectivamente. Los días martes se considera una sesión de 1 hora y 20 minutos de trabajo asistido online.\nDe esta manera cada semana tendrá tres partes: una teórica, en la que se explicarán los conceptos fundamentales de la criminología espacial, y otra práctica, en la que los alumnos podrán aplicar las metodologías de análisis espacial estudiadas mediante herramientas de programación con la orientación del profesor y finalmente desarrollar trabajo autónomo asistido por un docente."
  },
  {
    "objectID": "adms.html#evaluaciones",
    "href": "adms.html#evaluaciones",
    "title": "Syllabus",
    "section": "Evaluaciones",
    "text": "Evaluaciones\nEl proceso evaluativo de este curso se basa en la comprensión de que este debe ser continuo y estar ligado al desarrollo de los aprendizajes y no unilateralmente a la calificación. Cada actividad evaluativa tendrá etapas de profundización progresiva y acompañamiento al estudiante para la mejora.\n\nSe realizarán dos tareas que contarán con una ponderación del 30% cada una. Estas tareas estarán diseñadas para evaluar la comprensión de los conceptos clave y la aplicación de los mismos a situaciones prácticas.\nSe llevará a cabo un trabajo final que tendrá un peso del 40% en la nota final. Este trabajo final será una oportunidad para profundizar en una zona urbana de interés y demostrar la capacidad de análisis y síntesis de los contenidos del curso."
  },
  {
    "objectID": "adms.html#sesiones",
    "href": "adms.html#sesiones",
    "title": "Syllabus",
    "section": "Sesiones",
    "text": "Sesiones\n\n\n\n\n\n\n\n\nFecha\nHorario\nModalidad\nTema\n\n\n\n\n01-09-23\n9h00 - 10h20\nPresencial teórica\nBienvenida. Introducción a la Criminología desde la economía política, la sociología y la geografía.\n\n\n05-09-23\n11h00 - 12h20\nSincrónica Online práctica\nLectura de datos en formato entregado por Carabineros, limpieza, transformación y estructuración de datos en R.\n\n\n05-09-23\n15h00 - 16h20\nSincrónica Online asistida\nTarea 1: estructurar datos de casos policiales por zona censal y de denuncia seguro por comunas en el año 2022\n\n\n08-09-23\n9h00 - 10h20\nPresencial teórica\nCrimen organizado, evolución global y en teórica América Latina\n\n\n08-09-23\n11h30 - 12h50\nSincrónica Online práctica\nEstructuración y análisis de paneles de datos 1, en R.\n\n\n12-09-23\n15h00 - 16h20\nSincrónica Online asistida\nTarea 2: analizar tendencias de casos policiales y de denuncia seguro, por regiones, en el período 2017-2022\n\n\n15-09-23\n9h00 - 10h20\nPresencial teórica\nEvolución de tendencias criminales en Chile 2017-2022\n\n\n15-09-23\n11h30 - 12h50\nSincrónica Online práctica\nEstructuración y análisis de paneles de datos 2, R y exportación a Excel.\n\n\n26-09-23\n15h00 - 16h20\nSincrónica Online asistida\nProfundización de tarea 2.\n\n\n29-09-23\n9h00 - 10h20\nPresencial teórica\nEconomía política y sociología del poder en las organizaciones criminales\n\n\n29-09-23\n11h30 - 12h50\nSincrónica Online práctica\nCálculo de indicadores territoriales de evolución criminal y exportación a Shapefile.\n\n\n03-10-23\n15h00 - 16h20\nSincrónica Online asistida\nSincrónica Online asistida\n\n\n06-10-23\n9h00 - 10h20\nPresencial teórica\nSíntesis y discusión del curso\n\n\n06-10-23\n11h30 - 12h50\nSincrónica Online práctica\nRepresentación estadística y cartográfica de evolución criminal.\n\n\n10-10-23\n15h00 - 16h20\nSincrónica Online asistida\nProfundización de trabajo final.\n\n\n13-10-23\n9h00 - 11h30\nPresencial integradora\nSeminario abierto con autoridades y colegas. Presentación de trabajos."
  },
  {
    "objectID": "adms.html#horarios",
    "href": "adms.html#horarios",
    "title": "Syllabus",
    "section": "Horarios",
    "text": "Horarios\nSeptiembre:\n\n\n\nOctubre:"
  },
  {
    "objectID": "adms.html#reglamento",
    "href": "adms.html#reglamento",
    "title": "Syllabus",
    "section": "REGLAMENTO",
    "text": "REGLAMENTO\nAdministrativamente el Curso se guía por el Reglamento Académico y el código de Honor de la UAI. Los requisitos de aprobación son los siguientes:\n\n75% de Asistencia (el éxito del curso requiere de la asistencia y participación de los alumnos en las discusiones).\nPromedio final mínimo de 4,0."
  },
  {
    "objectID": "syllabus.html#objetivos-del-curso",
    "href": "syllabus.html#objetivos-del-curso",
    "title": "Syllabus",
    "section": "Objetivos del curso",
    "text": "Objetivos del curso\nEl Objetivo General de aprendizaje este curso es aplicar herramientas eficientes para el trabajo con grandes volúmenes de datos, aplicándolos al análisis de patrones territoriales y tendencias delictuales.\nObjetivos específicos: \n\nAbrir datos de formato diverso, limpiarlos, estructurarlos y concatenarlos, en R.\nGenerar indicadores y series longitudinales con datos de panel, en R.\nExportar datos agregados a .csv y .shp, para analizar casos territoriales en otros programas.\n\nSe evaluará la aplicación de estas herramientas al análisis personal de casos territoriales."
  },
  {
    "objectID": "syllabus.html#metodología",
    "href": "syllabus.html#metodología",
    "title": "Syllabus",
    "section": "Metodología",
    "text": "Metodología\n\nEl curso considera sesiones de 1- hora 20, las que se desarrollarán en modalidad presencial teórica de 9:00 a 10:20 y en online en vivo práctica de 11:30 a 12:50 respectivamente. Los días martes se considera una sesión de 1 hora y 20 minutos de trabajo asistido online.\nDe esta manera cada semana tendrá tres partes: una teórica, en la que se explicarán los conceptos fundamentales de la criminología espacial, y otra práctica, en la que los alumnos podrán aplicar las metodologías de análisis espacial estudiadas mediante herramientas de programación con la orientación del profesor y finalmente desarrollar trabajo autónomo asistido por un docente."
  },
  {
    "objectID": "syllabus.html#evaluaciones",
    "href": "syllabus.html#evaluaciones",
    "title": "Syllabus",
    "section": "Evaluaciones",
    "text": "Evaluaciones\nEl proceso evaluativo de este curso se basa en la comprensión de que este debe ser continuo y estar ligado al desarrollo de los aprendizajes y no unilateralmente a la calificación. Cada actividad evaluativa tendrá etapas de profundización progresiva y acompañamiento al estudiante para la mejora.\n\nSe realizarán dos tareas que contarán con una ponderación del 30% cada una. Estas tareas estarán diseñadas para evaluar la comprensión de los conceptos clave y la aplicación de los mismos a situaciones prácticas.\nSe llevará a cabo un trabajo final que tendrá un peso del 40% en la nota final. Este trabajo final será una oportunidad para profundizar en una zona urbana de interés y demostrar la capacidad de análisis y síntesis de los contenidos del curso."
  },
  {
    "objectID": "syllabus.html#sesiones",
    "href": "syllabus.html#sesiones",
    "title": "Syllabus",
    "section": "Sesiones",
    "text": "Sesiones\n\n\n\n\n\n\n\n\nFecha\nHorario\nModalidad\nTema\n\n\n\n\n01-09-23\n9h00 - 10h20\nPresencial teórica\nBienvenida. Introducción a la Criminología desde la economía política, la sociología y la geografía.\n\n\n05-09-23\n11h00 - 12h20\nSincrónica Online práctica\nLectura de datos en formato entregado por Carabineros, limpieza, transformación y estructuración de datos en R.\n\n\n05-09-23\n15h00 - 16h20\nSincrónica Online asistida\nTarea 1: estructurar datos de casos policiales por zona censal y de denuncia seguro por comunas en el año 2022\n\n\n08-09-23\n9h00 - 10h20\nPresencial teórica\nCrimen organizado, evolución global y en teórica América Latina\n\n\n08-09-23\n11h30 - 12h50\nSincrónica Online práctica\nEstructuración y análisis de paneles de datos 1, en R.\n\n\n12-09-23\n15h00 - 16h20\nSincrónica Online asistida\nTarea 2: analizar tendencias de casos policiales y de denuncia seguro, por regiones, en el período 2017-2022\n\n\n15-09-23\n9h00 - 10h20\nPresencial teórica\nEvolución de tendencias criminales en Chile 2017-2022\n\n\n15-09-23\n11h30 - 12h50\nSincrónica Online práctica\nEstructuración y análisis de paneles de datos 2, R y exportación a Excel.\n\n\n26-09-23\n15h00 - 16h20\nSincrónica Online asistida\nProfundización de tarea 2.\n\n\n29-09-23\n9h00 - 10h20\nPresencial teórica\nEconomía política y sociología del poder en las organizaciones criminales\n\n\n29-09-23\n11h30 - 12h50\nSincrónica Online práctica\nCálculo de indicadores territoriales de evolución criminal y exportación a Shapefile.\n\n\n03-10-23\n15h00 - 16h20\nSincrónica Online asistida\nSincrónica Online asistida\n\n\n06-10-23\n9h00 - 10h20\nPresencial teórica\nSíntesis y discusión del curso\n\n\n06-10-23\n11h30 - 12h50\nSincrónica Online práctica\nRepresentación estadística y cartográfica de evolución criminal.\n\n\n10-10-23\n15h00 - 16h20\nSincrónica Online asistida\nProfundización de trabajo final.\n\n\n13-10-23\n9h00 - 11h30\nPresencial integradora\nSeminario abierto con autoridades y colegas. Presentación de trabajos."
  },
  {
    "objectID": "syllabus.html#horarios",
    "href": "syllabus.html#horarios",
    "title": "Syllabus",
    "section": "Horarios",
    "text": "Horarios\nSeptiembre:\n\n\n\nOctubre:"
  },
  {
    "objectID": "syllabus.html#reglamento",
    "href": "syllabus.html#reglamento",
    "title": "Syllabus",
    "section": "Reglamento",
    "text": "Reglamento\nAdministrativamente el Curso se guía por el Reglamento Académico y el código de Honor de la UAI. Los requisitos de aprobación son los siguientes:\n\n75% de Asistencia (el éxito del curso requiere de la asistencia y participación de los alumnos en las discusiones).\nPromedio final mínimo de 4,0."
  },
  {
    "objectID": "datos.html#datos-tipo",
    "href": "datos.html#datos-tipo",
    "title": "2  Datos",
    "section": "2.3 Datos tipo",
    "text": "2.3 Datos tipo\nLos datos se encuentran en formato RDS separados por y sin ningún tratamiento. Se procederá a revisar el contenido de los datos del año 2017 llamado Casos_2017.rds.\n\ndatos_2017 &lt;- readRDS(file = \"data/delitos/raw/Casos_2017.rds\")\nhead(datos_2017)\n\n\n\nSimple feature collection with 6 features and 29 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 158271 ymin: 5401271 xmax: 337234 ymax: 6343272\nProjected CRS: WGS 84 / UTM zone 19S\n                                                   DELITO         GRUPO\n1                                    HALLAZGO DE VEHICULO OTROS DELITOS\n2 VIOLENCIA INTRAFAMILIAR A MUJER (LESIONES PSICOLOGICAS)           VIF\n3 VIOLENCIA INTRAFAMILIAR A MUJER (LESIONES PSICOLOGICAS)           VIF\n4 VIOLENCIA INTRAFAMILIAR A MUJER (LESIONES M/GRAVES O SU           VIF\n5           ROBO CON INTIMIDACION ART. 433 436 INC. 1 438          DMCS\n6 HURTO SIMPLE POR UN VALOR DE MEDIA A MENOS DE 4 UTM. A.          DMCS\n  CLASIFICAC                LUGAR  FECHA_DEL       DIA       MES  ANO\n1   DENUNCIA          VIA PUBLICA 2017-06-16   VIERNES     JUNIO 2017\n2   DENUNCIA DOMICILIO PARTICULAR 2017-12-08   VIERNES DICIEMBRE 2017\n3   DENUNCIA DOMICILIO PARTICULAR 2017-05-07   DOMINGO      MAYO 2017\n4   DENUNCIA DOMICILIO PARTICULAR 2017-03-19   DOMINGO     MARZO 2017\n5  DETENCION          VIA PUBLICA 2017-08-23 MIERCOLES    AGOSTO 2017\n6   DENUNCIA          VIA PUBLICA 2017-11-16    JUEVES NOVIEMBRE 2017\n  HORA_DEL_D HORA24      BLOQUE      COM_GEO                          REG_GEO\n1      12:00     12 12:00-15:59       TEMUCO           REGION DE LA ARAUCANIA\n2      12:00     12 12:00-15:59       LUMACO           REGION DE LA ARAUCANIA\n3      22:00     22 20:00-23:59  LOS ANGELES                REGION DEL BIOBIO\n4      19:30     19 16:00-19:59 VINA DEL MAR             REGION DE VALPARAISO\n5      20:50     20 20:00-23:59     PUDAHUEL REGION METROPOLITANA DE SANTIAGO\n6      19:45     19 16:00-19:59 PUERTO MONTT              REGION DE LOS LAGOS\n                CATEGORIA                        GRUPO_DELI\n1    HALLAZGO DE VEHICULO             OTROS HECHOS Y FALTAS\n2 VIOLENCIA INTRAFAMILIAR           VIOLENCIA INTRAFAMILIAR\n3 VIOLENCIA INTRAFAMILIAR           VIOLENCIA INTRAFAMILIAR\n4 VIOLENCIA INTRAFAMILIAR           VIOLENCIA INTRAFAMILIAR\n5         ROBOS VIOLENTOS ROBO CON VIOLENCIA O INTIMIDACION\n6                  HURTOS                            HURTOS\n                         GRUPO_INTE ID_CLAS ID_LUGAR ID_GDELI ID_GINTE ID_GRUPO\n1                 HALLAZGO VEHICULO       1       98      500  2400000        6\n2                               VIF       1       28      200      200        7\n3                               VIF       1       28      200      200        7\n4                               VIF       1       28      200      200        7\n5 ROBO CON VIOLENCIA O INTIMIDACION       2       98      107      107        3\n6                            HURTOS       1       98      101      101        3\n  ST_REG ST_PROV ST_COM ST_ANO ID_MES ID_DIA  X_RAN   Y_RAN\n1     09     091  09101   2017      6      5 190864 5707829\n2     09     092  09207   2017     12      5 158271 5768480\n3     08     083  08301   2017      5      7 205552 5844695\n4     05     051  05109   2017      3      7 265420 6343272\n5     13     131  13124   2017      8      3 337234 6296234\n6     10     101  10101   2017     11      4 171337 5401271\n                geometry\n1 POINT (190864 5707829)\n2 POINT (158271 5768480)\n3 POINT (205552 5844695)\n4 POINT (265420 6343272)\n5 POINT (337234 6296234)\n6 POINT (171337 5401271)\n\n\nSe puede observar que corresponde a 1.418.435 de casos policiales con información espacial tipo punto (Simple Features for R), además información temporal y divisiones administrativas."
  },
  {
    "objectID": "variables.html#tipos-de-objetos-en-r",
    "href": "variables.html#tipos-de-objetos-en-r",
    "title": "Appendix B — Variables en R",
    "section": "B.1 Tipos de Objetos en R",
    "text": "B.1 Tipos de Objetos en R\nLos Datos en R se pueden clasificar por su dimensiones y los tipos de Datos que permiten almacenar, como se muestra en la siguiente tabla:\n\n\n\nDimensiones\nHomogéneos\nHeterogéneos\n\n\n\n\n1d\nAtomic vector\nList\n\n\n2d\nMatrix\nData frame\n\n\nnd\nArray\n\n\n\n\nFuente: http://adv-r.had.co.nz/Data-structures.html\nR nos permite definir variables que pueden ser luego usadas en las distintas operaciones. El lenguaje no solo permite definir escalares (variable de un numero), si no también variables que sean un conjunto de numero o caracteres ordenados.\n\nB.1.1 Variables Numéricas\n\n# La asignación en R son válidos 2 métodos '&lt;-' o '='\nx &lt;- 7 # Definir variable (escalar) x que sea igual a 7\nx # Mostrar que es x\n\n[1] 7\n\ny &lt;- 3 + 2 * x # Crear y como funcion de x \ny\n\n[1] 17\n\nclass(y)\n\n[1] \"numeric\"\n\n\nNúmeros Random con decimales\n\nru &lt;- runif(n = 100, min = 1, max = 10)\nru\n\n  [1] 2.062978 9.724989 9.873949 8.340992 3.453273 6.860994 5.220006 8.953261\n  [9] 7.825341 5.138026 3.650977 4.417103 3.860188 8.721178 7.912731 7.799404\n [17] 2.180973 1.072909 5.258229 5.219067 1.411597 2.002268 1.407911 2.483635\n [25] 9.509281 7.783778 8.705082 2.957396 3.863088 7.994742 1.478182 3.233259\n [33] 9.277089 8.345896 3.091831 1.293242 3.657353 2.011105 5.058856 2.431384\n [41] 2.809021 3.995728 2.990771 9.196505 1.713179 3.954336 5.564380 6.465655\n [49] 8.450274 9.046277 5.891535 5.050642 6.264887 3.895682 2.606468 1.215633\n [57] 9.940481 6.919465 2.028411 2.474516 7.059828 8.530199 1.014923 1.736620\n [65] 4.073945 1.835187 9.799037 3.867041 8.224794 4.794556 3.345804 5.369654\n [73] 3.302243 2.527206 4.312291 3.857317 3.349814 6.265524 7.535034 8.309711\n [81] 3.681789 3.852306 9.091817 9.928251 1.110255 6.347097 9.809346 6.183952\n [89] 2.663423 9.342514 5.811779 9.103286 5.968236 4.802584 9.594766 9.502688\n [97] 8.402840 6.858370 7.749955 1.497179\n\n\n\nhist(ru, breaks = 20, col = \"orange\", border = \"gray60\", \n     main = \"Histograma de valores Random\")\n\n\n\n\n\n\n\n\nNúmeros Random Enteros\nSimular los lanzamientos de un dado\n\nsample.int(n = 6, size = 10, replace = T)\n\n [1] 5 6 4 2 6 6 2 4 2 4\n\n\n\n\nB.1.2 Variables de Caracter\n\nch &lt;- \"Chile\" # Definir variable (objeto) ch que sea la palabra \"Chile\"\nsn &lt;- \"Santiago\"\nch # Mostrar ch\n\n[1] \"Chile\"\n\nsn\n\n[1] \"Santiago\"\n\n\nUnir variables de texto con paste()\n\nch &lt;- \"Chile\" # Definir variable (objeto) ch que sea la palabra \"Chile\"\nsn &lt;- \"Santiago\"\nunion &lt;- paste(sn,ch, sep = \", \")\nunion\n\n[1] \"Santiago, Chile\"\n\n\nUtilizar paste0()\n\nunion &lt;- paste(\"Provincia de \", sn,ch, sep = \", \")\nunion\n\n[1] \"Provincia de , Santiago, Chile\"\n\nunion0 &lt;- paste0(\"Provincia de \", sn, \", \", ch)\nunion0\n\n[1] \"Provincia de Santiago, Chile\"\n\n\nBuscar y reemplazar con gsub\n\nav &lt;- \"Av. Apoquindo\"\ncomuna &lt;- \"comuna de Las Condes\"\ncalle &lt;- paste(av, comuna, union0, sep = \", \")\ncalle\n\n[1] \"Av. Apoquindo, comuna de Las Condes, Provincia de Santiago, Chile\"\n\n# reemplazar Av. por Avenida\ncalle_new &lt;- gsub(pattern = \"Av.\", replacement = \"Avenida\", x = calle)\ncalle_new\n\n[1] \"Avenida Apoquindo, comuna de Las Condes, Provincia de Santiago, Chile\""
  },
  {
    "objectID": "variables.html#estructuras-de-datos",
    "href": "variables.html#estructuras-de-datos",
    "title": "Appendix B — Variables en R",
    "section": "B.2 Estructuras de Datos",
    "text": "B.2 Estructuras de Datos\nLas variables pueden ser un conjunto de números y caracteres ordenados de varias maneras. El orden que se les da depende de lo que queremos lograr con estos.\n\nVector\nMatrices\nDataframes\nFactores\nListas\n\n\nB.2.1 Vectores\nVector Cadenas unidimensionales (es decir una sola columna o fila) de un tipo único de valores (numéricos, caracteres, etc.)\n\nvec &lt;-  c(4, 3, 1, 5, 8, 16)\nvec\n\n[1]  4  3  1  5  8 16\n\nclass(vec)\n\n[1] \"numeric\"\n\nstr(vec)\n\n num [1:6] 4 3 1 5 8 16\n\n\nPodemos seleccionar parte del vector:\n\n# EL primer índice en R es 1 (en otros lenguajes de programación es 0)\nvec[3]\n\n[1] 1\n\n\nLa selección también puede ser hecha con una condición, de tal manera que solo seleccione aquella parte del vector que cumple con la condición.\nMayor a:\n\nvec[vec &gt;= 4]\n\n[1]  4  5  8 16\n\n\nContenido en:\n\nvec[vec %in% c(3, 8, 7, 29)]\n\n[1] 3 8\n\n\nNegación de la condición:\n\nvec[!vec &lt;= 3]\n\n[1]  4  5  8 16\n\n\nTambién podemos realizar operaciones matemáticas simples aplicadas al vector, por ejemplo una suma:\n\nvec2  &lt;-  c(7, 10, 1)\nvec + vec2\n\n[1] 11 13  2 12 18 17\n\n\n\n\nB.2.2 Listas\nSon estructuras eficientes y flexibles, que permiten combinar distintas clases de elementos :\n\nlista &lt;-  list(1, 2, 3, \"cosa\", x, y)\nlista\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3\n\n[[4]]\n[1] \"cosa\"\n\n[[5]]\n[1] 7\n\n[[6]]\n[1] 17\n\nstr(lista)\n\nList of 6\n $ : num 1\n $ : num 2\n $ : num 3\n $ : chr \"cosa\"\n $ : num 7\n $ : num 17\n\n\n\n#Tambien se puede seleccionar parte de una lista, usando el doble corchete:\nlista[[3]]\n\n[1] 3\n\n\nComo inspeccionar una lista con Rstudio\n\n\n\n\n\nB.2.3 Matrices\nSon estructuras de datos con 2 dimensiones, horizontal y la vertical (filas y columnas). Podemos construirlas usando la función “matrix”, con un vector inicial y sus dimensiones:\n\nn &lt;- matrix(c(1.3, 2.8, 3.5, 6.4, 5.3, 6.2, 7, 4.5, 2.4, 6.3, 5.6, 5.3, 6.6, 7, 4.3),\n  nrow = 5, ncol = 3, byrow = TRUE)\nn\n\n     [,1] [,2] [,3]\n[1,]  1.3  2.8  3.5\n[2,]  6.4  5.3  6.2\n[3,]  7.0  4.5  2.4\n[4,]  6.3  5.6  5.3\n[5,]  6.6  7.0  4.3\n\n\nLa matriz tiene 2 dimensiones, por lo que para seleccionar partes de ella es necesario declarar dos dimensiones separadas por una coma. A la izquierda van las filas y a la derecha las columnas. Un valor vacío indica que se seleccionan todos los valores posibles.\n\nn[1,2]\n\n[1] 2.8\n\n\n\nn[,3]\n\n[1] 3.5 6.2 2.4 5.3 4.3\n\n\n\n\nB.2.4 Dataframes\nEstructura mas clásica de datos, es una matriz pero con mas atributos como nombres de columna y/o fila. Es lo mas similar en R a una tabla excel o la tabla de atributos. La manera mas simple de crear un dataframe es a partir de una matriz usando la función as.data.frame() :\n\ndf&lt;- as.data.frame(n)\ndf\n\n   V1  V2  V3\n1 1.3 2.8 3.5\n2 6.4 5.3 6.2\n3 7.0 4.5 2.4\n4 6.3 5.6 5.3\n5 6.6 7.0 4.3\n\n\nPodemos asignar nombres a las columnas del dataframe\n\nnames(df)&lt;- c(\"control_1\",\"control_2\",\"examen\")\ndf\n\n  control_1 control_2 examen\n1       1.3       2.8    3.5\n2       6.4       5.3    6.2\n3       7.0       4.5    2.4\n4       6.3       5.6    5.3\n5       6.6       7.0    4.3\n\n\nY a las filas del dataframe\n\ndf$alumno &lt;- c(\"Sofia\",\"Tomas\",\"Luciano\",\"Julian\",\"Gabriela\")\ndf\n\n  control_1 control_2 examen   alumno\n1       1.3       2.8    3.5    Sofia\n2       6.4       5.3    6.2    Tomas\n3       7.0       4.5    2.4  Luciano\n4       6.3       5.6    5.3   Julian\n5       6.6       7.0    4.3 Gabriela\n\n\nTambién podemos realizar operaciones entre vectores del dataframe:\n\ndf$promedio_final &lt;-  0.3*df$control_1 + 0.3*df$control_2 + 0.4*df$examen\ndf\n\n  control_1 control_2 examen   alumno promedio_final\n1       1.3       2.8    3.5    Sofia           2.63\n2       6.4       5.3    6.2    Tomas           5.99\n3       7.0       4.5    2.4  Luciano           4.41\n4       6.3       5.6    5.3   Julian           5.69\n5       6.6       7.0    4.3 Gabriela           5.80"
  },
  {
    "objectID": "funciones.html",
    "href": "funciones.html",
    "title": "Appendix C — Funciones en R",
    "section": "",
    "text": "D Estructura de Control en R\nLas estructuras de control en R son herramientas que permiten controlar el flujo de ejecución de un programa. Las estructuras de control son esenciales para cualquier lenguaje de programación, ya que permiten que el programa tome decisiones y realice acciones en función de ciertas condiciones.\nEstas estructuras de control son muy útiles para crear programas que respondan a diferentes situaciones y condiciones, y permiten que los programadores puedan crear soluciones más eficientes y complejas.\nEn R, existen tres estructuras de control principales:"
  },
  {
    "objectID": "funciones.html#operaciones-básicas-en-r",
    "href": "funciones.html#operaciones-básicas-en-r",
    "title": "Appendix D — Funciones en R",
    "section": "D.1 Operaciones Básicas en R",
    "text": "D.1 Operaciones Básicas en R\n\nD.1.1 Operaciones Matemáticas\nEn R, es posible realizar operaciones matemáticas básicas utilizando los operadores aritméticos estándar. Estos operadores incluyen:\n\nSuma (+): se utiliza para sumar dos valores.\nResta (-): se utiliza para restar un valor de otro.\nMultiplicación (*): se utiliza para multiplicar dos valores.\nDivisión (/): se utiliza para dividir un valor por otro.\nExponenciación (^): se utiliza para elevar un valor a una potencia.\nMódulo (%%): se utiliza para encontrar el resto de la división de un valor por otro.\n\nEstos operadores se pueden utilizar con números enteros, decimales y variables numéricas. Además, también se pueden utilizar paréntesis para especificar el orden de las operaciones.\nA continuación, se presentan algunos ejemplos de operaciones matemáticas básicas en R:\n\n# Suma\n2 + 3 # resultado: 5\n\n[1] 5\n\n# Resta\n5 - 2 # resultado: 3\n\n[1] 3\n\n# Multiplicación\n2 * 4 # resultado: 8\n\n[1] 8\n\n# División\n10 / 2 # resultado: 5\n\n[1] 5\n\n# Exponenciación\n2^3 # resultado: 8\n\n[1] 8\n\n# Módulo\n15 %% 4 # resultado: 3\n\n[1] 3\n\n# Utilizando paréntesis para especificar el orden de las operaciones\n(2 + 3) * 4 # resultado: 20\n\n[1] 20\n\n\nEs importante tener en cuenta que R sigue las reglas de precedencia de las operaciones matemáticas. Esto significa que las operaciones dentro de los paréntesis se evalúan primero, seguidas de la exponenciación, la multiplicación y la división, y finalmente la suma y la resta. Si se requiere un orden específico de operaciones, se deben utilizar paréntesis para indicarlo.\nAdemás, R también cuenta con una variedad de funciones matemáticas incorporadas, como “sin”, “cos”, “tan”, “log”, “exp”, entre otras, que se pueden utilizar para realizar operaciones más complejas.\nTambién se pueden aplica a un elemento a al objeto espacial completo\n\na &lt;- 13\nb &lt;- c(20,30,22,2,1)\n\nsum(b) # suma\n\n[1] 75\n\nsqrt(b) # find the square root of x\n\n[1] 4.472136 5.477226 4.690416 1.414214 1.000000\n\n\n\nmean(b)\n\n[1] 15\n\nmin(b)\n\n[1] 1\n\nmax(b)\n\n[1] 30\n\n\n\n\nD.1.2 Funciones Útiles de propósito general\n\nrep(1, 10)\n\n [1] 1 1 1 1 1 1 1 1 1 1\n\nrep(\"HAHA\", 10)\n\n [1] \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\" \"HAHA\"\n\nseq(1, 10)\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\nseq(1, 10, by = 2)\n\n[1] 1 3 5 7 9\n\nifelse(3 &gt; 5, 1, \"this is false\")\n\n[1] \"this is false\"\n\n\n\npaste(\"Hola\", \"amigo\")\n\n[1] \"Hola amigo\"\n\npaste(\"Hello\", \"amigo\", sep = \"--\")\n\n[1] \"Hello--amigo\"\n\npaste0(\"Hello\", \"amigo\")\n\n[1] \"Helloamigo\"\n\ntolower(\"HAHAHAHAH\")\n\n[1] \"hahahahah\"\n\ntoupper(\"hueuehuehuheuhe\")\n\n[1] \"HUEUEHUEHUHEUHE\""
  },
  {
    "objectID": "funciones.html#operaciones-lógicas",
    "href": "funciones.html#operaciones-lógicas",
    "title": "Appendix D — Funciones en R",
    "section": "D.2 Operaciones Lógicas",
    "text": "D.2 Operaciones Lógicas\nEn R, los operadores lógicos se utilizan para realizar comparaciones lógicas entre valores o expresiones. Estos operadores devuelven valores booleanos (TRUE o FALSE) según se cumpla o no la condición.\nA continuación se presentan los operadores lógicos en R:\n\n\n\n\n\nOperador\nSignificado\nEjemplo\n\n\n\n\n==\nIgual a\n2 == 2 (TRUE)\n\n\n!=\nDiferente a\n2 != 3 (TRUE)\n\n\n&gt;\nMayor que\n3 &gt; 2 (TRUE)\n\n\n&lt;\nMenor que\n2 &lt; 3 (TRUE)\n\n\n&gt;=\nMayor o igual que\n3 &gt;= 2 (TRUE)\n\n\n&lt;=\nMenor o igual que\n2 &lt;= 3 (TRUE)\n\n\n&\nOperador lógico AND\n2 &lt; 3 & 3 &gt; 1 (TRUE)\n\n\n|\nOperador lógico OR\n2 &lt; 3 | 3 &lt; 1 (TRUE)\n\n\n!\nOperador lógico NOT\n!(2 == 3) (TRUE)\n\n\n\n\n\n\n\n\nD.2.1 Operador de igualdad: (==)\nEste operador se utiliza para comparar si dos valores son iguales. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na == b # FALSE\n\n[1] FALSE\n\n\n\n\nD.2.2 Operador de desigualdad: (!=)\nEste operador se utiliza para comparar si dos valores son diferentes. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na != b # TRUE\n\n[1] TRUE\n\n\n\n\nD.2.3 Operador de mayor que: (&gt;)\nEste operador se utiliza para comparar si un valor es mayor que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\nb &gt; a # TRUE\n\n[1] TRUE\n\n\n\n\nD.2.4 Operador de menor que: (&lt;)\nEste operador se utiliza para comparar si un valor es menor que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na &lt; b # TRUE\n\n[1] TRUE\n\n\n\n\nD.2.5 Operador de mayor o igual que: (&gt;=)\nEste operador se utiliza para comparar si un valor es mayor o igual que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\nb &gt;= a # TRUE\n\n[1] TRUE\n\n\n\n\nD.2.6 Operador de menor o igual que: (&lt;=)\nEste operador se utiliza para comparar si un valor es menor o igual que otro. Retorna TRUE si la condición se cumple y FALSE en caso contrario.\n\na &lt;- 2\nb &lt;- 3\na &lt;= b # TRUE\n\n[1] TRUE\n\n\n\n\nD.2.7 Operador lógico AND: (&)\nEste operador se utiliza para evaluar dos o más condiciones y retornar TRUE si todas se cumplen, de lo contrario retorna FALSE.\n\na &lt;- 2\nb &lt;- 3\nc &lt;- 4\na &lt; b & b &lt; c # TRUE\n\n[1] TRUE\n\n\n\n\nD.2.8 Operador lógico OR: (|)\nEste operador se utiliza para evaluar dos o más condiciones y retornar TRUE si al menos una se cumple, de lo contrario retorna FALSE.\n\na &lt;- 2\nb &lt;- 3\nc &lt;- 4\na &gt; b | b &lt; c # TRUE\n\n[1] TRUE\n\n\nOperador lógico NOT: (!) Este operador se utiliza para negar una condición. Si la condición es TRUE, retorna FALSE, y si la condición es FALSE, retorna TRUE.\n\na &lt;- 2\nb &lt;- 3\n!(a == b) # TRUE\n\n[1] TRUE\n\n\nEs importante tener en cuenta que los operadores lógicos se pueden utilizar en combinación para crear expresiones lógicas más complejas. Además, los operadores lógicos también se pueden utilizar en las estructuras de control condicionales, como if/else y switch, para tomar decisiones basadas en condiciones lógicas."
  },
  {
    "objectID": "funciones.html#crear-funciones-propias",
    "href": "funciones.html#crear-funciones-propias",
    "title": "Appendix D — Funciones en R",
    "section": "D.3 Crear Funciones Propias",
    "text": "D.3 Crear Funciones Propias\nEn R, es posible crear funciones propias para realizar tareas específicas y reutilizarlas en diferentes partes de un programa. Para crear una función en R, se utiliza la siguiente estructura:\n\nnombre_de_la_funcion &lt;- function(argumentos) {\n  cuerpo_de_la_funcion\n}\n\nPor ejemplo, se puede crear una función que calcule la suma de dos números:\n\nsuma &lt;- function(a, b) {\n  resultado &lt;- a + b\n  return(resultado)\n}\n\nresultado_suma &lt;- suma(2, 3)\nprint(resultado_suma) # 5\n\n[1] 5\n\n\nPor ejemplo, se puede crear una función que eleve al cuadrado:\n\ncuadrado &lt;- function(x) { # x = parámetro\n    y = x ^ 2 # asiganción de variables solo dentro de la función\n    return(y) # especificar valor retornado (no necesario completamente)\n}\n\n\na &lt;- 13\nb &lt;- c(20,30,22,2,1)\ncuadrado(a)\n\n[1] 169\n\ncuadrado(b)\n\n[1] 400 900 484   4   1\n\n\nEs importante tener en cuenta que los nombres de las funciones en R deben cumplir las mismas reglas que los nombres de las variables. Además, es recomendable incluir comentarios explicativos dentro del cuerpo de la función para facilitar su comprensión y uso posterior.\nActividad:\nActividad: Crear una función que calcule la hipotenusa de un triángulo rectángulo (Teorema de Pitágoras):\n\n\n\nEstablece que el cuadrado de la longitud de la hipotenusa es igual a la suma de los cuadrados de las longitudes de los catetos.\nc^2 = {a^2}+{b^2}\nPor lo cual:\nc = \\sqrt{{a^2}+{b^2}}\n\n\n\n\n\n\nAyuda\n\n\n\n\nhipotenusa &lt;- function(a, b){\n  #h &lt;-     # En esta parte escribir la función\n  return(h)\n}\nr1 &lt;-  hipotenusa(a = 5,  b = 5)\n\n\n\nEncontrar la Hipotenusa de:\nh=?, a = 10, b = 6\nh=?, a = 5, b = 4\nh=?, a = 3, b = 4"
  },
  {
    "objectID": "funciones.html#estructuras-condicionales",
    "href": "funciones.html#estructuras-condicionales",
    "title": "Appendix C — Funciones en R",
    "section": "D.1 Estructuras condicionales",
    "text": "D.1 Estructuras condicionales\nLas estructuras condicionales son una de las tres estructuras de control principales en R. Estas estructuras permiten ejecutar un bloque de código solo si se cumple una condición determinada.\nLa estructura condicional más común en R es “if”. La sintaxis básica de la estructura “if” es la siguiente:\n\nif(Condición) {\n  operaciones_si_la_condición_es_TRUE\n}\n\nLa “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, el bloque de código dentro del “if” se ejecutará. Si la condición es falsa, el bloque de código dentro del “if” se ignorará.\nPor ejemplo, le pedimos a R que nos muestre el texto “Verdadero” si la condición se cumple.\n\n# Se cumple la condición y se muestra \"verdadero\"\nif(4 &gt; 3) {\n  \"Verdadero\"\n}\n\n[1] \"Verdadero\"\n\n\n\n# No se cumple la condición y no pasa nada\nif(4 &gt; 5) {\n  \"Verdadero\"\n}\n\nTambién se puede agregar un bloque de código opcional para el caso en que la condición sea falsa utilizando la estructura “else”. La sintaxis básica de la estructura “if” con “else” es la siguie\nSI esta condición es es cierta, ENTONCES haz estas operaciones, DE OTRO MODO haz estas otras operaciones.\n\nif(condición) {\n  operaciones_si_la_condición_es_TRUE\n} else {\n  operaciones_si_la_condición_es_FALSE\n}\n\nUsando los ejemplos anteriores, podemos mostrar “Falso” si no se cumple la condición, en lugar de que no ocurra nada\n\n# Se cumple la condición y se muestra \"Verdadero\"\nif(4 &gt; 3) {\n  \"Verdadero\"\n} else {\n  \"Falso\"\n}\n\n[1] \"Verdadero\"\n\n\nLa estructura “ifelse” es otra forma de estructura condicional que permite ejecutar diferentes bloques de código en función de la condición. La sintaxis básica de la estructura “ifelse” es la siguiente:\n\nifelse(condición, expresión1, expresión2)\n\nSi la “condición” es verdadera, se ejecutará “expresión1”. Si la “condición” es falsa, se ejecutará “expresión2”.\nAdemás, se pueden anidar varias estructuras condicionales utilizando la sintaxis de “if” y “else”. Por ejemplo:\n\nif (condición1) {\n  # Código a ejecutar si la condición1 es verdadera\n} else if (condición2) {\n  # Código a ejecutar si la condición1 es falsa y la condición2 es verdadera\n} else {\n  # Código a ejecutar si todas las condiciones son falsas\n}\n\nEn resumen, las estructuras condicionales en R son herramientas muy útiles para controlar el flujo de ejecución de un programa en función de ciertas condiciones. Estas estructuras permiten crear soluciones más eficientes y complejas al permitir que los programas tomen decisiones y realicen acciones en función de las condiciones que se presenten."
  },
  {
    "objectID": "funciones.html#estructuras-de-bucles",
    "href": "funciones.html#estructuras-de-bucles",
    "title": "Appendix C — Funciones en R",
    "section": "D.2 Estructuras de bucles",
    "text": "D.2 Estructuras de bucles\nLas estructuras de bucles son una de las tres estructuras de control principales en R. Estas estructuras permiten ejecutar un bloque de código repetidamente mientras se cumpla una condición determinada. En R, existen tres estructuras de bucles principales: “while”, “for” y “repeat”.\nBeneficios\n\nEs más fácil ver el objetivo de tu código; lo diferente llama más atención a la vista que aquello que permanece igual.\nEs más sencillo responder a cambios en los requerimientos. A medida que tus necesidades cambian, solo necesitarás realizar cambios en un lugar, en vez de recordar cambiar en cada lugar donde copiaste y pegaste el código.\nEs probable que tengas menos errores porque cada línea de código es utilizada en más lugares.\n\n\nD.2.1 Estructura de bucle “for”:\nLa estructura “for” permite repetir la ejecución de un bloque de código un número determinado de veces. La sintaxis básica de la estructura “for” es la siguiente:\n\nfor (variable in secuencia) {\n  # Código a ejecutar para cada elemento en la secuencia\n}\n\nLa “secuencia” es un objeto que contiene una serie de elementos. La “variable” toma el valor de cada elemento de la secuencia en cada iteración del bucle. En cada iteración, se ejecutará el bloque de código dentro del “for” para ese valor de la variable.\nEjemplo simple: print una secuencia\n\nfor (i in 1:5){\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\nEjemplo 2: Guardando los resultados en un vector\n\ndado &lt;- 1:6\nmi_vector &lt;- NULL\nfor(cara in dado) {\n  mi_vector[cara] &lt;- cara ^ 2\n}\nmi_vector\n\n[1]  1  4  9 16 25 36\n\n\nEjemplo 3: Loops con vectores\n\nalumnos &lt;- c(\"Carmen\", \"Adriana\", \"Marco\", \"Fabi\", \"Brenda\")\n\nfor(i in 1:length(alumnos)) {\n  print(paste(\"Hola,\", alumnos[i], sep = \" \"))\n}\n\n[1] \"Hola, Carmen\"\n[1] \"Hola, Adriana\"\n[1] \"Hola, Marco\"\n[1] \"Hola, Fabi\"\n[1] \"Hola, Brenda\"\n\n\nEjemplo 4: loops en Dataframes\n\ndf &lt;- data.frame(a = rnorm(10), b = rnorm(10),\n                 c = rnorm(10), d = rnorm(10))\n\nfor(i in 1:ncol(df)){\n  promedio = mean(df[,i])\n  print(promedio)\n}\n\n[1] 0.2903093\n[1] -0.4070936\n[1] -0.1339478\n[1] 0.3863824\n\n\n\n\nD.2.2 Estructura de bucle “while”:\nLa estructura “while” permite repetir la ejecución de un bloque de código mientras se cumpla una condición determinada. La sintaxis básica de la estructura “while” es la siguiente:\n\nwhile (condición) {\n  # Código a ejecutar mientras se cumpla la condición\n}\n\nLa “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, se ejecutará el bloque de código dentro del “while”. Este proceso se repetirá hasta que la condición sea falsa.\n\n\nD.2.3 Estructura de bucle “repeat”:\n\nrepeat {\n  # Código a ejecutar de manera indefinida\n  if (condición) {\n    break\n  }\n}\n\nEl bloque de código dentro del “repeat” se ejecutará de manera indefinida hasta que se encuentre la sentencia “break”, que permite salir del bucle. La “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, se ejecutará la sentencia “break” y se saldrá del bucle."
  },
  {
    "objectID": "funciones.html#estructuras-de-control-de-flujo",
    "href": "funciones.html#estructuras-de-control-de-flujo",
    "title": "Appendix C — Funciones en R",
    "section": "D.3 Estructuras de control de flujo",
    "text": "D.3 Estructuras de control de flujo\n“next” y “break” son palabras clave importantes en R que se utilizan en las estructuras de control de flujo, específicamente en las estructuras de bucle. “next” se utiliza para saltar a la siguiente iteración del bucle sin ejecutar el resto del código dentro del bucle, mientras que “break” se utiliza para detener el bucle de forma abrupta, incluso si la condición del bucle todavía se cumple.\n\nD.3.1 Estructuras de control “next”:\n“next” se utiliza en una estructura de bucle para saltar a la siguiente iteración del bucle sin ejecutar el resto del código dentro del bucle. Es decir, si se encuentra la palabra clave “next” dentro de un bucle, se omitirá el código que viene después y el bucle pasará inmediatamente a la siguiente iteración. La palabra clave “next” es útil cuando se desea saltar una iteración específica del bucle, sin afectar el resto del código.\nPor ejemplo, en el siguiente código se utiliza la palabra clave “next” para omitir la impresión del número 3 dentro del bucle “for”:\n\nfor (i in 1:5) {\n  if (i == 3) {\n    next\n  }\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 4\n[1] 5\n\n\n\n\nD.3.2 Estructuras de control “break”:\n“break”, por otro lado, se utiliza en una estructura de bucle para detener el bucle de forma abrupta, incluso si la condición del bucle todavía se cumple. Es decir, si se encuentra la palabra clave “break” dentro de un bucle, se detendrá el bucle de inmediato y se continuará con la ejecución del código que viene después del bucle. La palabra clave “break” es útil cuando se desea detener el bucle en un punto específico sin tener que esperar a que la condición del bucle se deje de cumplir.\nPor ejemplo, en el siguiente código se utiliza la palabra clave “break” para detener el bucle “while” cuando el valor de “i” es mayor que 5:\n\ni &lt;- 1\nwhile (i &lt; 10) {\n  if (i &gt; 5) {\n    break\n  }\n  print(i)\n  i &lt;- i + 1\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5"
  },
  {
    "objectID": "control_r.html#estructuras-condicionales",
    "href": "control_r.html#estructuras-condicionales",
    "title": "Appendix C — Bucles en R",
    "section": "C.1 Estructuras condicionales",
    "text": "C.1 Estructuras condicionales\nLas estructuras condicionales son una de las tres estructuras de control principales en R. Estas estructuras permiten ejecutar un bloque de código solo si se cumple una condición determinada.\nLa estructura condicional más común en R es “if”. La sintaxis básica de la estructura “if” es la siguiente:\n\nif(Condición) {\n  operaciones_si_la_condición_es_TRUE\n}\n\nLa “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, el bloque de código dentro del “if” se ejecutará. Si la condición es falsa, el bloque de código dentro del “if” se ignorará.\nPor ejemplo, le pedimos a R que nos muestre el texto “Verdadero” si la condición se cumple.\n\n# Se cumple la condición y se muestra \"verdadero\"\nif(4 &gt; 3) {\n  \"Verdadero\"\n}\n\n[1] \"Verdadero\"\n\n\n\n# No se cumple la condición y no pasa nada\nif(4 &gt; 5) {\n  \"Verdadero\"\n}\n\nTambién se puede agregar un bloque de código opcional para el caso en que la condición sea falsa utilizando la estructura “else”. La sintaxis básica de la estructura “if” con “else” es la siguie\nSI esta condición es es cierta, ENTONCES haz estas operaciones, DE OTRO MODO haz estas otras operaciones.\n\nif(condición) {\n  operaciones_si_la_condición_es_TRUE\n} else {\n  operaciones_si_la_condición_es_FALSE\n}\n\nUsando los ejemplos anteriores, podemos mostrar “Falso” si no se cumple la condición, en lugar de que no ocurra nada\n\n# Se cumple la condición y se muestra \"Verdadero\"\nif(4 &gt; 3) {\n  \"Verdadero\"\n} else {\n  \"Falso\"\n}\n\n[1] \"Verdadero\"\n\n\nLa estructura “ifelse” es otra forma de estructura condicional que permite ejecutar diferentes bloques de código en función de la condición. La sintaxis básica de la estructura “ifelse” es la siguiente:\n\nifelse(condición, expresión1, expresión2)\n\nSi la “condición” es verdadera, se ejecutará “expresión1”. Si la “condición” es falsa, se ejecutará “expresión2”.\nAdemás, se pueden anidar varias estructuras condicionales utilizando la sintaxis de “if” y “else”. Por ejemplo:\n\nif (condición1) {\n  # Código a ejecutar si la condición1 es verdadera\n} else if (condición2) {\n  # Código a ejecutar si la condición1 es falsa y la condición2 es verdadera\n} else {\n  # Código a ejecutar si todas las condiciones son falsas\n}\n\nEn resumen, las estructuras condicionales en R son herramientas muy útiles para controlar el flujo de ejecución de un programa en función de ciertas condiciones. Estas estructuras permiten crear soluciones más eficientes y complejas al permitir que los programas tomen decisiones y realicen acciones en función de las condiciones que se presenten."
  },
  {
    "objectID": "control_r.html#estructuras-de-bucles",
    "href": "control_r.html#estructuras-de-bucles",
    "title": "Appendix C — Bucles en R",
    "section": "C.2 Estructuras de bucles",
    "text": "C.2 Estructuras de bucles\nLas estructuras de bucles son una de las tres estructuras de control principales en R. Estas estructuras permiten ejecutar un bloque de código repetidamente mientras se cumpla una condición determinada. En R, existen tres estructuras de bucles principales: “while”, “for” y “repeat”.\nBeneficios\n\nEs más fácil ver el objetivo de tu código; lo diferente llama más atención a la vista que aquello que permanece igual.\nEs más sencillo responder a cambios en los requerimientos. A medida que tus necesidades cambian, solo necesitarás realizar cambios en un lugar, en vez de recordar cambiar en cada lugar donde copiaste y pegaste el código.\nEs probable que tengas menos errores porque cada línea de código es utilizada en más lugares.\n\n\nC.2.1 Estructura de bucle “for”:\nLa estructura “for” permite repetir la ejecución de un bloque de código un número determinado de veces. La sintaxis básica de la estructura “for” es la siguiente:\n\nfor (variable in secuencia) {\n  # Código a ejecutar para cada elemento en la secuencia\n}\n\nLa “secuencia” es un objeto que contiene una serie de elementos. La “variable” toma el valor de cada elemento de la secuencia en cada iteración del bucle. En cada iteración, se ejecutará el bloque de código dentro del “for” para ese valor de la variable.\nEjemplo simple: print una secuencia\n\nfor (i in 1:5){\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\nEjemplo 2: Guardando los resultados en un vector\n\ndado &lt;- 1:6\nmi_vector &lt;- NULL\nfor(cara in dado) {\n  mi_vector[cara] &lt;- cara ^ 2\n}\nmi_vector\n\n[1]  1  4  9 16 25 36\n\n\nEjemplo 3: Loops con vectores\n\nalumnos &lt;- c(\"Carmen\", \"Adriana\", \"Marco\", \"Fabi\", \"Brenda\")\n\nfor(i in 1:length(alumnos)) {\n  print(paste(\"Hola,\", alumnos[i], sep = \" \"))\n}\n\n[1] \"Hola, Carmen\"\n[1] \"Hola, Adriana\"\n[1] \"Hola, Marco\"\n[1] \"Hola, Fabi\"\n[1] \"Hola, Brenda\"\n\n\nEjemplo 4: loops en Dataframes\n\ndf &lt;- data.frame(a = rnorm(10), b = rnorm(10),\n                 c = rnorm(10), d = rnorm(10))\n\nfor(i in 1:ncol(df)){\n  promedio = mean(df[,i])\n  print(promedio)\n}\n\n[1] 0.4695001\n[1] -0.4643527\n[1] -0.0719572\n[1] -0.06149058\n\n\n\n\nC.2.2 Estructura de bucle “while”:\nLa estructura “while” permite repetir la ejecución de un bloque de código mientras se cumpla una condición determinada. La sintaxis básica de la estructura “while” es la siguiente:\n\nwhile (condición) {\n  # Código a ejecutar mientras se cumpla la condición\n}\n\nLa “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, se ejecutará el bloque de código dentro del “while”. Este proceso se repetirá hasta que la condición sea falsa.\n\n\nC.2.3 Estructura de bucle “repeat”:\n\nrepeat {\n  # Código a ejecutar de manera indefinida\n  if (condición) {\n    break\n  }\n}\n\nEl bloque de código dentro del “repeat” se ejecutará de manera indefinida hasta que se encuentre la sentencia “break”, que permite salir del bucle. La “condición” es una expresión lógica que evalúa a verdadero o falso. Si la condición es verdadera, se ejecutará la sentencia “break” y se saldrá del bucle."
  },
  {
    "objectID": "control_r.html#estructuras-de-control-de-flujo",
    "href": "control_r.html#estructuras-de-control-de-flujo",
    "title": "Appendix C — Bucles en R",
    "section": "C.3 Estructuras de control de flujo",
    "text": "C.3 Estructuras de control de flujo\n“next” y “break” son palabras clave importantes en R que se utilizan en las estructuras de control de flujo, específicamente en las estructuras de bucle. “next” se utiliza para saltar a la siguiente iteración del bucle sin ejecutar el resto del código dentro del bucle, mientras que “break” se utiliza para detener el bucle de forma abrupta, incluso si la condición del bucle todavía se cumple.\n\nC.3.1 Estructuras de control “next”:\n“next” se utiliza en una estructura de bucle para saltar a la siguiente iteración del bucle sin ejecutar el resto del código dentro del bucle. Es decir, si se encuentra la palabra clave “next” dentro de un bucle, se omitirá el código que viene después y el bucle pasará inmediatamente a la siguiente iteración. La palabra clave “next” es útil cuando se desea saltar una iteración específica del bucle, sin afectar el resto del código.\nPor ejemplo, en el siguiente código se utiliza la palabra clave “next” para omitir la impresión del número 3 dentro del bucle “for”:\n\nfor (i in 1:5) {\n  if (i == 3) {\n    next\n  }\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 4\n[1] 5\n\n\n\n\nC.3.2 Estructuras de control “break”:\n“break”, por otro lado, se utiliza en una estructura de bucle para detener el bucle de forma abrupta, incluso si la condición del bucle todavía se cumple. Es decir, si se encuentra la palabra clave “break” dentro de un bucle, se detendrá el bucle de inmediato y se continuará con la ejecución del código que viene después del bucle. La palabra clave “break” es útil cuando se desea detener el bucle en un punto específico sin tener que esperar a que la condición del bucle se deje de cumplir.\nPor ejemplo, en el siguiente código se utiliza la palabra clave “break” para detener el bucle “while” cuando el valor de “i” es mayor que 5:\n\ni &lt;- 1\nwhile (i &lt; 10) {\n  if (i &gt; 5) {\n    break\n  }\n  print(i)\n  i &lt;- i + 1\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5"
  },
  {
    "objectID": "tidyverse.html#introducción-a-tidyverse",
    "href": "tidyverse.html#introducción-a-tidyverse",
    "title": "Appendix E — Tidyverse en R",
    "section": "E.1 Introducción a Tidyverse",
    "text": "E.1 Introducción a Tidyverse\nTidyverse es una colección de paquetes diseñados para Ciencia de Datos.\n\n\n\n\n\n\n# instalación\ninstall.packages(\"tidyverse\")\n\nTodos los paquetes comparten una filosofía de diseño, una gramática y estructuras de datos.\nEsta filosofía promueve\n\nEn Pipes, navegarás dentro del pipe, %&gt;%, para anidar instrucciones\nSi bien copiar-y-pegar (copy-and-paste) es una herramienta poderosa, deberías evitar utilizarla más de dos veces. Repetir el código es peligroso porque puede llevar a errores e inconsistencias.\nA medida que comiences a escribir funciones más potentes, necesitarás una base sólida acerca de las estructuras de datos.\nLas funciones nos permiten evitar la repetición de código; sin embargo, muchas veces necesitas repertir las mismas acciones con diferentes inputs. Puedes hacer esto con herramientas de iteración."
  },
  {
    "objectID": "tidyverse.html#estructura-de-un-dataframe",
    "href": "tidyverse.html#estructura-de-un-dataframe",
    "title": "Appendix E — Tidyverse en R",
    "section": "E.2 Estructura de un dataframe",
    "text": "E.2 Estructura de un dataframe\n\n\n\nLectura de Base de SII\n\nsuppressPackageStartupMessages(library(dplyr))\nsuppressPackageStartupMessages(library(sf))\ntbl_sii  &lt;- readRDS(\"data/sii/mz_constru_SII.rds\") %&gt;% \n  st_drop_geometry() # descartar geometrias solo usar la tabla de datos\n\nhead(tbl_sii)\n\n# A tibble: 6 × 10\n  n_com   manzana   reg cod_com num_manz oficinas comercio vivienda total   AREA\n  &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 IQUIQUE 1201-0      1    1201        0        0        0        0     0   585.\n2 IQUIQUE 1201-0      1    1201        0        0        0        0     0 17291.\n3 ALTO H… 1211-0      1    1211        0        0        0        0     0  1859.\n4 ALTO H… 1211-0      1    1211        0        0        0        0     0   442.\n5 ALTO H… 1211-0      1    1211        0        0        0        0     0   205.\n6 ALTO H… 1211-0      1    1211        0        0        0        0     0  1200."
  },
  {
    "objectID": "tidyverse.html#funciones-básicas-dplyr",
    "href": "tidyverse.html#funciones-básicas-dplyr",
    "title": "Appendix E — Tidyverse en R",
    "section": "E.3 Funciones básicas dplyr",
    "text": "E.3 Funciones básicas dplyr\n\n\n\n\nE.3.1 Select\nselect Seleccionar variables relevantes\n\n# seleccionar nomnres de columnas que deseo conservar\ntbl_sii %&gt;%\n  select(n_com, oficinas, comercio, vivienda)\n\n# A tibble: 210,662 × 4\n   n_com         oficinas comercio vivienda\n   &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 IQUIQUE              0        0        0\n 2 IQUIQUE              0        0        0\n 3 ALTO HOSPICIO        0        0        0\n 4 ALTO HOSPICIO        0        0        0\n 5 ALTO HOSPICIO        0        0        0\n 6 ALTO HOSPICIO        0        0        0\n 7 ALTO HOSPICIO        0        0        0\n 8 ALTO HOSPICIO        0        0        0\n 9 ALTO HOSPICIO        0        0        0\n10 ALTO HOSPICIO        0        0        0\n# ℹ 210,652 more rows\n\n# seleccionar nomnres de columnas que deseo eliminar anteponiendo un \"-\"\ntbl_sii %&gt;%\n  select(-cod_com)\n\n# A tibble: 210,662 × 9\n   n_com         manzana   reg num_manz oficinas comercio vivienda total   AREA\n   &lt;chr&gt;         &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 IQUIQUE       1201-0      1        0        0        0        0     0   585.\n 2 IQUIQUE       1201-0      1        0        0        0        0     0 17291.\n 3 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  1859.\n 4 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   442.\n 5 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   205.\n 6 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  1200.\n 7 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  4548.\n 8 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   130.\n 9 ALTO HOSPICIO 1211-0      1        0        0        0        0     0   300.\n10 ALTO HOSPICIO 1211-0      1        0        0        0        0     0  6488.\n# ℹ 210,652 more rows\n\n\n\n\nE.3.2 Filter\n\nmi_comuna &lt;- \"LAS CONDES\" \n\nsii_com &lt;- tbl_sii %&gt;%\n  filter(n_com == mi_comuna) \n \nhead(sii_com, 5)\n\n# A tibble: 5 × 10\n  n_com    manzana   reg cod_com num_manz oficinas comercio vivienda total  AREA\n  &lt;chr&gt;    &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 LAS CON… 15108-…    13   15108     2358        0        0     1316  1390 2358.\n2 LAS CON… 15108-…    13   15108     2360        0        0     1590  1622 2280.\n3 LAS CON… 15108-…    13   15108     2362        0        0     1436  1502 2659.\n4 LAS CON… 15108-…    13   15108     2364        0        0     1926  1926 3348.\n5 LAS CON… 15108-…    13   15108     2366        0        0     2584  2656 4390.\n\n\nfilter: Operadores Lógicos\n\n\n\n\n\n\n\n\n\n\n\nOperador\nComparación\nEjemplo\nResultado\n\n\n\n\nx | y\nx Ó y es verdadero\nTRUE | FALSE\nTRUE\n\n\nx & y\nx Y y son verdaderos\nTRUE & FALSE\nFALSE\n\n\n!x\nx no es verdadero (negación)\n!TRUE\nFALSE\n\n\nisTRUE(x)\nx es verdadero (afirmación)\nisTRUE(TRUE)\nTRUE\n\n\n\n\n\nFiltrar las manzanas que tengan valores de oficina y comercio mayores a 0\n\nsii_com %&gt;%\n  filter(oficinas &gt; 0 & comercio &gt; 0) \n\n# A tibble: 493 × 10\n   n_com manzana   reg cod_com num_manz oficinas comercio vivienda  total   AREA\n   &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 LAS … 15108-…    13   15108     2400     322     3388    65422  1.22e5 1.06e5\n 2 LAS … 15108-…    13   15108     2407   30864     2518        0  7.50e4 4.04e3\n 3 LAS … 15108-…    13   15108     1392     424     9902        0  1.58e4 1.27e4\n 4 LAS … 15108-…    13   15108      336   45190     1432        0  8.28e4 3.24e3\n 5 LAS … 15108-…    13   15108      338     424.     244.    9993. 1.17e4 1.11e4\n 6 LAS … 15108-…    13   15108      338     414.     238.    9765. 1.14e4 1.06e4\n 7 LAS … 15108-…    13   15108      339    1120     5274     7748  1.49e4 9.38e3\n 8 LAS … 15108-…    13   15108      340     250       72    55206  7.23e4 1.22e4\n 9 LAS … 15108-…    13   15108      342     494     1914    47690  6.97e4 1.62e4\n10 LAS … 15108-…    13   15108      349   17826     1568        0  3.38e4 1.84e3\n# ℹ 483 more rows"
  },
  {
    "objectID": "tidyverse.html#resúmenes-estadísticos-con-dplyr",
    "href": "tidyverse.html#resúmenes-estadísticos-con-dplyr",
    "title": "Appendix E — Tidyverse en R",
    "section": "E.4 Resúmenes Estadísticos con dplyr",
    "text": "E.4 Resúmenes Estadísticos con dplyr\n\n\n\nContabilizar cuantos metros cuadrados de oficina por cada comuna.\n\ntbl_resumen &lt;-  tbl_sii %&gt;%\n  group_by(n_com) %&gt;%\n  summarise(Cantidad_mz = n(),\n            Total_of = sum(oficinas)) %&gt;%\n  arrange(desc(Total_of)) # Ordenar\n\ntbl_resumen\n\n# A tibble: 170 × 3\n   n_com           Cantidad_mz Total_of\n   &lt;chr&gt;                 &lt;int&gt;    &lt;dbl&gt;\n 1 SANTIAGO CENTRO         686  6105996\n 2 LAS CONDES             2310  4248336\n 3 PROVIDENCIA             885  3495426\n 4 HUECHURABA             1160  1006138\n 5 QUILICURA              2592   751874\n 6 VITACURA                950   743734\n 7 SANTIAGO SUR            623   669270\n 8 Ã‘UÃ‘OA                1337   637982\n 9 SANTIAGO OESTE          586   586724\n10 PUDAHUEL               2775   561868\n# ℹ 160 more rows\n\n\nActividad\n\nContabilizar cuantos metros cuadrados de Comercio hay por cada comuna rdenar de mayor a menor.\nCrear tabla con las 10 comunas que tienen mayor densisdad de Comercio\n\n\n\n\n\n\n\nDensidad de comercio\n\n\n\nSe puede entender como la división de la cantidad de metros cuadrados de comercio dividio por el total de metros cuadrados."
  },
  {
    "objectID": "tidyverse.html#visualización-de-variables",
    "href": "tidyverse.html#visualización-de-variables",
    "title": "Appendix E — Tidyverse en R",
    "section": "E.5 Visualización de Variables",
    "text": "E.5 Visualización de Variables\n\nE.5.1 Función Plot\n\noptions(scipen = 999) # evitas notación cientiífica\nhist(sii_com$vivienda, breaks = 50,\n     main = \"Histograma mt2 de Viviendas\", col = \"#225ea8\")\n\n\n\n# colores:https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3\n\n\n\nE.5.2 Package ggplot2\n\nlibrary(ggplot2)\nggplot(sii_com, aes(x = vivienda)) + \n  geom_histogram(bins = 50, fill = \"#225ea8\", color =\"black\")\n\n\n\n\n\n\n\n\nggplot2 con estilos y características\n\nggplot(sii_com, aes(x = vivienda)) +\n  geom_histogram(bins = 50, color = \"#c7e9b4\", fill = \"#1d91c0\")+\n  theme_bw()+\n  labs(title=\"Histograma mt2 de Viviendas\", x =\"Mt2. Viviendas\", y = \"Frecuencias\")+\n  theme(plot.title = element_text(face = \"bold\",colour= \"gray60\", size=10))"
  },
  {
    "objectID": "control_r.html#referencias",
    "href": "control_r.html#referencias",
    "title": "Appendix C — Bucles en R",
    "section": "C.4 Referencias:",
    "text": "C.4 Referencias:\n\nLoops y funciones en R"
  },
  {
    "objectID": "funciones.html#referencias",
    "href": "funciones.html#referencias",
    "title": "Appendix D — Funciones en R",
    "section": "D.4 Referencias:",
    "text": "D.4 Referencias:\n\nhttps://bookdown.org/jboscomendoza/r-principiantes4/estructuras-de-control.html\nLoops y funciones en R"
  },
  {
    "objectID": "tidyverse.html#referencias",
    "href": "tidyverse.html#referencias",
    "title": "Appendix E — Tidyverse en R",
    "section": "E.6 Referencias:",
    "text": "E.6 Referencias:\n\nTidyverse\nPaletas de colores"
  },
  {
    "objectID": "espacial_r.html",
    "href": "espacial_r.html",
    "title": "Appendix F — Análisis espacial en R",
    "section": "",
    "text": "G A. Espacial en R"
  },
  {
    "objectID": "espacial_r.html#introducción",
    "href": "espacial_r.html#introducción",
    "title": "Appendix F — Objetos Espaciales en R",
    "section": "F.1 Introducción",
    "text": "F.1 Introducción\nLos objetos espaciales en R representan datos georreferenciados, lo que significa que están vinculados a una ubicación en el mundo real. Los objetos espaciales se pueden representar en mapas y gráficos, y se pueden analizar para identificar patrones y tendencias en los datos.\nEl análisis espacial se utiliza en diversas áreas, como la geografía, la ecología, la planificación urbana y el análisis de datos de negocios, entre otros. La visualización y análisis de objetos espaciales puede proporcionar información valiosa para la toma de decisiones basada en datos."
  },
  {
    "objectID": "espacial_r.html#lectura-de-insumos-espaciales",
    "href": "espacial_r.html#lectura-de-insumos-espaciales",
    "title": "Appendix F — Objetos Espaciales en R",
    "section": "F.2 Lectura de Insumos Espaciales",
    "text": "F.2 Lectura de Insumos Espaciales\n\n# install.packages(\"sf\")\nlibrary(sf)\ncrs_ll &lt;- \"+proj=longlat +datum=WGS84 +no_defs\"\ncrs_utm &lt;- \"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0\"\ncenso &lt;-  readRDS(\"data/ine/Zonas_Censales_2017_Nacional.rds\")"
  },
  {
    "objectID": "espacial_r.html#transformar-a-objeto-sf-simple-features",
    "href": "espacial_r.html#transformar-a-objeto-sf-simple-features",
    "title": "Appendix F — Objetos Espaciales en R",
    "section": "F.3 Transformar a objeto sf (simple features)",
    "text": "F.3 Transformar a objeto sf (simple features)\n\n# transformar a objeto sf (simple features)\ncenso_sf &lt;- st_as_sf(censo)\n# head(censo_sf)\nnames(censo_sf)\n\n [1] \"REGION\"     \"NOM_REGION\" \"PROVINCIA\"  \"NOM_PROVIN\" \"COMUNA\"    \n [6] \"NOM_COMUNA\" \"URBANO\"     \"DISTRITO\"   \"LOC_ZON\"    \"GEOCODIGO\" \n[11] \"SHAPE_Leng\" \"SHAPE_Area\" \"geometry\""
  },
  {
    "objectID": "espacial_r.html#filtros-espaciales-por-data",
    "href": "espacial_r.html#filtros-espaciales-por-data",
    "title": "Appendix F — Objetos Espaciales en R",
    "section": "F.4 Filtros espaciales por data",
    "text": "F.4 Filtros espaciales por data\n\nlibrary(dplyr)\nmi_communa &lt;-  \"LAS CONDES\"\n\nzonas_com &lt;-  censo_sf %&gt;% \n  filter(NOM_COMUNA == mi_communa)\n\nzonas_com %&gt;% head()\n\nSimple feature collection with 6 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -70.56629 ymin: -33.41713 xmax: -70.47884 ymax: -33.36421\nGeodetic CRS:  +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0\n            REGION                       NOM_REGION PROVINCIA NOM_PROVIN COMUNA\n13114051001     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114041001     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114041003     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114161002     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114151003     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n13114021002     13 REGIÓN METROPOLITANA DE SANTIAGO       131   SANTIAGO  13114\n            NOM_COMUNA     URBANO DISTRITO LOC_ZON   GEOCODIGO SHAPE_Leng\n13114051001 LAS CONDES LAS CONDES        5       1 13114051001 0.02302722\n13114041001 LAS CONDES LAS CONDES        4       1 13114041001 0.09575698\n13114041003 LAS CONDES LAS CONDES        4       3 13114041003 0.06782420\n13114161002 LAS CONDES LAS CONDES       16       2 13114161002 0.06482893\n13114151003 LAS CONDES LAS CONDES       15       3 13114151003 0.04135677\n13114021002 LAS CONDES LAS CONDES        2       2 13114021002 0.04687558\n              SHAPE_Area                       geometry\n13114051001 3.357387e-05 MULTIPOLYGON (((-70.56008 -...\n13114041001 2.708800e-04 MULTIPOLYGON (((-70.47951 -...\n13114041003 2.451087e-04 MULTIPOLYGON (((-70.5267 -3...\n13114161002 1.450608e-04 MULTIPOLYGON (((-70.50789 -...\n13114151003 8.288767e-05 MULTIPOLYGON (((-70.51477 -...\n13114021002 5.754391e-05 MULTIPOLYGON (((-70.53606 -..."
  },
  {
    "objectID": "espacial_r.html#visualización-cartográficas",
    "href": "espacial_r.html#visualización-cartográficas",
    "title": "Appendix F — Objetos Espaciales en R",
    "section": "F.5 Visualización Cartográficas",
    "text": "F.5 Visualización Cartográficas\n\nF.5.1 Visualización estática Simple\n\n## Visualizar\n# Consideración el plot se realiza sobre la columna geometry\n\nnombre_plot &lt;-  paste0(\"COMUNA DE \", mi_communa)\nplot(zonas_com$geometry, main = nombre_plot,col =\"orange\")\n\n\n\n\n\n\n\n\n\n\nF.5.2 Visualización estática con ggplot2\n\nlibrary(ggplot2)\n\n# Visualización ggplot y sf\nggplot() +\n  geom_sf(data = zonas_com, fill = \"orange\", alpha=0.5)+\n  ggtitle(nombre_plot) +\n  theme_bw() +\n  theme(legend.position=\"none\")+\n  theme(panel.grid.major = element_line(colour = \"gray80\"),\n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n\n\n\nF.5.3 Visualización Dinámica con mapview\n\n# install.packages(\"mapview\")\nlibrary(mapview)\nm &lt;- mapview(zonas_com, alpha = 0.5,\n        col.regions = \"orange\", color=\"gray80\",\n        legend =FALSE, cex = 3)\nm"
  },
  {
    "objectID": "espacial_r.html#referencias",
    "href": "espacial_r.html#referencias",
    "title": "Appendix F — Objetos Espaciales en R",
    "section": "F.6 Referencias:",
    "text": "F.6 Referencias:\n\nSimple Features for R"
  },
  {
    "objectID": "r_project.html#sec-wd",
    "href": "r_project.html#sec-wd",
    "title": "Appendix A — R Project",
    "section": "A.5 Definición de Directorios de Trabajos",
    "text": "A.5 Definición de Directorios de Trabajos\nDefinir directorio de Trabajo con RStudio\n\n\n\n\n\n\nDefinir Directorio de Trabajo con una función\n\nsetwd(\"~/OneDrive - Universidad Adolfo Ibanez/FONDECYT/capacitacion_SPD\")\n\nConsultar Directorio de Trabajo\n\ngetwd()\n\n[1] \"/Users/denisberroeta/Library/CloudStorage/OneDrive-UniversidadAdolfoIbanez/FONDECYT/CURSO_SPD/book_SPD\""
  },
  {
    "objectID": "datos.html#conclusión",
    "href": "datos.html#conclusión",
    "title": "1  Datos",
    "section": "1.3 Conclusión",
    "text": "1.3 Conclusión\nEn este capítulo se presentaron conocimientos esenciales para la lectura de datos tal como son adquiridos, con el objetivo de representar de manera fidedigna la etapa de pretratamiento que realizan los analistas. Además, se combinaron los diferentes periodos de cada tipo de datos y se guardaron de forma segura. En los siguientes capítulos se presentarán flujos de trabajo más eficientes y automatizados, pero por ahora es importante tener claridad sobre los pasos básicos."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "R para Ciencia de Datos\nRStudio para Estadística Descriptiva en Ciencias Sociales\nhttps://bookdown.org/jboscomendoza/r-principiantes4/estructuras-de-control.html"
  },
  {
    "objectID": "references.html#bibliográficas",
    "href": "references.html#bibliográficas",
    "title": "References",
    "section": "Bibliográficas",
    "text": "Bibliográficas\nEn proceso."
  },
  {
    "objectID": "references.html#enlaces-de-apoyo",
    "href": "references.html#enlaces-de-apoyo",
    "title": "References",
    "section": "Enlaces de Apoyo",
    "text": "Enlaces de Apoyo\n\nR para Ciencia de Datos\nRStudio para Estadística Descriptiva en Ciencias Sociales\nhttps://bookdown.org/jboscomendoza/r-principiantes4/estructuras-de-control.html"
  }
]