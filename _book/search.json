[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Análisis Criminológico de Datos",
    "section": "",
    "text": "Introducción\nEste libro tiene como objetivo apoyar la capacitación a los integrantes de la Subsecretaría de Prevención del Delito en el curso de Análisis criminológico de datos. A través de una guía práctica, se proporcionará a los lectores las habilidades necesarias para limpiar, estructurar y analizar datos de una manera rigurosa y efectiva. El libro está diseñado para proporcionar una comprensión sólida de las técnicas de análisis exploratorio y descriptivo de datos, así como de las técnicas de limpieza y transformación de datos."
  },
  {
    "objectID": "index.html#objetivos-del-curso",
    "href": "index.html#objetivos-del-curso",
    "title": "Análisis Criminológico de Datos",
    "section": "Objetivos del curso",
    "text": "Objetivos del curso\nEl Objetivo General de aprendizaje este curso es aplicar herramientas eficientes para el trabajo con grandes volúmenes de datos, aplicándolos al análisis de patrones territoriales y tendencias delictuales.\nObjetivos específicos: \n\nAbrir datos de formato diverso, limpiarlos, estructurarlos y concatenarlos, en R.\nGenerar indicadores y series longitudinales con datos de panel, en R.\nExportar datos agregados a .csv y .shp, para analizar casos territoriales en otros programas.\n\nSe evaluará la aplicación de estas herramientas al análisis personal de casos territoriales."
  },
  {
    "objectID": "syllabus.html#objetivos-del-curso",
    "href": "syllabus.html#objetivos-del-curso",
    "title": "Syllabus",
    "section": "Objetivos del curso",
    "text": "Objetivos del curso\nEl Objetivo General de aprendizaje este curso es aplicar herramientas eficientes para el trabajo con grandes volúmenes de datos, aplicándolos al análisis de patrones territoriales y tendencias delictuales.\nObjetivos específicos: \n\nAbrir datos de formato diverso, limpiarlos, estructurarlos y concatenarlos, en R.\nGenerar indicadores y series longitudinales con datos de panel, en R.\nExportar datos agregados a .csv y .shp, para analizar casos territoriales en otros programas.\n\nSe evaluará la aplicación de estas herramientas al análisis personal de casos territoriales."
  },
  {
    "objectID": "syllabus.html#metodología",
    "href": "syllabus.html#metodología",
    "title": "Syllabus",
    "section": "Metodología",
    "text": "Metodología\n\nEl curso considera sesiones de 1- hora 20, las que se desarrollarán en modalidad presencial teórica de 9:00 a 10:20 y en online en vivo práctica de 11:30 a 12:50 respectivamente. Los días martes se considera una sesión de 1 hora y 20 minutos de trabajo asistido online.\nDe esta manera cada semana tendrá tres partes: una teórica, en la que se explicarán los conceptos fundamentales de la criminología espacial, y otra práctica, en la que los alumnos podrán aplicar las metodologías de análisis espacial estudiadas mediante herramientas de programación con la orientación del profesor y finalmente desarrollar trabajo autónomo asistido por un docente."
  },
  {
    "objectID": "syllabus.html#evaluaciones",
    "href": "syllabus.html#evaluaciones",
    "title": "Syllabus",
    "section": "Evaluaciones",
    "text": "Evaluaciones\nEl proceso evaluativo de este curso se basa en la comprensión de que este debe ser continuo y estar ligado al desarrollo de los aprendizajes y no unilateralmente a la calificación. Cada actividad evaluativa tendrá etapas de profundización progresiva y acompañamiento al estudiante para la mejora.\n\nSe realizarán dos tareas que contarán con una ponderación del 30% cada una. Estas tareas estarán diseñadas para evaluar la comprensión de los conceptos clave y la aplicación de los mismos a situaciones prácticas.\nSe llevará a cabo un trabajo final que tendrá un peso del 40% en la nota final. Este trabajo final será una oportunidad para profundizar en una zona urbana de interés y demostrar la capacidad de análisis y síntesis de los contenidos del curso."
  },
  {
    "objectID": "syllabus.html#sesiones",
    "href": "syllabus.html#sesiones",
    "title": "Syllabus",
    "section": "Sesiones",
    "text": "Sesiones\n\n\n\n\n\n\n\n\nFecha\nHorario\nModalidad\nTema\n\n\n\n\n01-09-23\n9h00 - 10h20\nPresencial teórica\nBienvenida. Introducción a la Criminología desde la economía política, la sociología y la geografía.\n\n\n05-09-23\n11h00 - 12h20\nSincrónica Online práctica\nLectura de datos en formato entregado por Carabineros, limpieza, transformación y estructuración de datos en R.\n\n\n05-09-23\n15h00 - 16h20\nSincrónica Online asistida\nTarea 1: estructurar datos de casos policiales por zona censal y de denuncia seguro por comunas en el año 2022\n\n\n08-09-23\n9h00 - 10h20\nPresencial teórica\nCrimen organizado, evolución global y en teórica América Latina\n\n\n08-09-23\n11h30 - 12h50\nSincrónica Online práctica\nEstructuración y análisis de paneles de datos 1, en R.\n\n\n12-09-23\n15h00 - 16h20\nSincrónica Online asistida\nTarea 2: analizar tendencias de casos policiales y de denuncia seguro, por regiones, en el período 2017-2022\n\n\n15-09-23\n9h00 - 10h20\nPresencial teórica\nEvolución de tendencias criminales en Chile 2017-2022\n\n\n15-09-23\n11h30 - 12h50\nSincrónica Online práctica\nEstructuración y análisis de paneles de datos 2, R y exportación a Excel.\n\n\n26-09-23\n15h00 - 16h20\nSincrónica Online asistida\nProfundización de tarea 2.\n\n\n29-09-23\n9h00 - 10h20\nPresencial teórica\nEconomía política y sociología del poder en las organizaciones criminales\n\n\n29-09-23\n11h30 - 12h50\nSincrónica Online práctica\nCálculo de indicadores territoriales de evolución criminal y exportación a Shapefile.\n\n\n03-10-23\n15h00 - 16h20\nSincrónica Online asistida\nSincrónica Online asistida\n\n\n06-10-23\n9h00 - 10h20\nPresencial teórica\nSíntesis y discusión del curso\n\n\n06-10-23\n11h30 - 12h50\nSincrónica Online práctica\nRepresentación estadística y cartográfica de evolución criminal.\n\n\n10-10-23\n15h00 - 16h20\nSincrónica Online asistida\nProfundización de trabajo final.\n\n\n13-10-23\n9h00 - 11h30\nPresencial integradora\nSeminario abierto con autoridades y colegas. Presentación de trabajos."
  },
  {
    "objectID": "syllabus.html#horarios",
    "href": "syllabus.html#horarios",
    "title": "Syllabus",
    "section": "Horarios",
    "text": "Horarios\nSeptiembre:\n\n\n\nOctubre:"
  },
  {
    "objectID": "syllabus.html#reglamento",
    "href": "syllabus.html#reglamento",
    "title": "Syllabus",
    "section": "Reglamento",
    "text": "Reglamento\nAdministrativamente el Curso se guía por el Reglamento Académico y el código de Honor de la UAI. Los requisitos de aprobación son los siguientes:\n\n75% de Asistencia (el éxito del curso requiere de la asistencia y participación de los alumnos en las discusiones).\nPromedio final mínimo de 4,0."
  },
  {
    "objectID": "datos.html#introducción",
    "href": "datos.html#introducción",
    "title": "1  Datos",
    "section": "1.1 Introducción",
    "text": "1.1 Introducción\nLa lectura y limpieza de datos es una tarea fundamental en el análisis de datos, ya que los datos pueden contener errores, valores faltantes, duplicados o información inconsistente. Estos problemas pueden afectar la calidad de los resultados obtenidos a partir del análisis y, en algunos casos, incluso invalidar las conclusiones. Por lo tanto, es importante que los datos se sometan a procesos de limpieza y transformación antes de ser utilizados en el análisis."
  },
  {
    "objectID": "datos.html#lectura-de-datos",
    "href": "datos.html#lectura-de-datos",
    "title": "1  Datos",
    "section": "1.2 Lectura de Datos",
    "text": "1.2 Lectura de Datos\nUno de los objetivos principales de este capítulo es replicar fielmente los procesos de lectura, limpieza y estructura que realizan normalmente los analistas. Por lo tanto, se requiere tener bases de datos con la misma forma y estructura que las originales. Para este fin, se utilizará una base de datos llamada samples, que es una copia de la original, pero anonimizada aleatoriamente.Los datos originales fueron anomimizados mediante distribución aleatoria por columna, lo que impostibilita reconstruir la base original y a su vez los datos mantienen su estructura y tipología tal como se distribuyen los datos originales.\n\n\n\n\n\n\nDirectorio de Trabajo\n\n\n\nDefinir correctamente el directorio de trabajo en R, que corresponde al lugar o carpeta de origen de donde R va acceder a los diferentes archivos. (Ver Section A.5)\n\n\n\n1.2.1 Datos CSV\nUna forma común de almacenar tablas es mediante archivos de valores separados por comas (CSV). Estos archivos tienen una extensión .csv y se utilizan ampliamente para compartir datos porque son compatibles con muchos sistemas diferentes y ocupan relativamente poco espacio de almacenamiento. Una ventaja de usar archivos .csv es la disponibilidad de la función read.csv(), que está optimizada para importar archivos CSV y esta disponible por defeto en R base.\nLectura de Unitaria: A continuación procedermos a la lectura de uno de los archivos CSV. Recordar definir un directorio de trabajo que será el punto de partida donde se accederá a los diferentes archivos del proyecto. (Ver Section A.5)\n\n# 1. Definir Diferectorio de trabajo con setwd(\"\") o con Rstudio\n# 2. Lectura y asignar nombre de variables\n\npartes_1T_2015 &lt;- read.csv(\n  file = \"data/samples/Base Estadistica/CSV/partes_1er_trim_2015.csv\") \n\n# dim(partes_1T_2015)\n# str(partes_1T_2015)\n# head(partes_1T_2015)\n\nLectura de Secuencial: En este caso si todos los archivos que se van a leer se encuentran en la misma carpeta o directorio se recomienda que declare esa ruta en una variable en R y posteriormente genere la ruta completa adicionando solamente el nombre del archivo para esto usaremos la función paste0() para concatener cadenas de texto. (Ver Section B.1.2)\n\n# Declarar la ruta en una variable (considerar que finaliza con slash \"/\")\npath_csv &lt;-  \"data/samples/Base Estadistica/CSV/\"\n\n# Partes\n# Declarar la ruta del archivo + nombre\npartes_1T_2015 &lt;- read.csv(file =  paste0(path_csv, \"partes_1er_trim_2015.csv\"))\npartes_2T_2015 &lt;- read.csv(file =  paste0(path_csv, \"partes_2do_trim_2015.csv\"))\n\n\n# Participaciones\nparticp_1T_2015 &lt;- read.csv(\n  file =  paste0(path_csv, \"participantes_1er_trim_2015.csv\"))\nparticp_2T_2015 &lt;- read.csv(\n  file =  paste0(path_csv, \"participantes_2do_trim_2015.csv\"))\n\nUnir Bases: Uno de los objetivos puede ser unificar o consolidar bases del mismo tipo pero de diferentes periodos, se procede a su unidicación utilizando una de las formas más simples que es mediante la función rbind() que unir por filas (rows).\n\n\n\n\n\n\nCantidad de Columnnas\n\n\n\nPara que funione correctamente debemos estar seguros que las candidad de columnas de todos los dataframes que se van a unir deben ser idénticos.\n\n\n\n# Verificar si la cantidad de columnas son identicas\nncol(partes_1T_2015)\nncol(partes_2T_2015)\n\n\n# Unir Partes\npartes_2015 &lt;-  rbind(partes_1T_2015, partes_2T_2015)\ndim(partes_2015)\n\n\n# Unir Participaciones\nparticipaciones_2015 &lt;-  rbind(particp_1T_2015, particp_2T_2015)\ndim(participaciones_2015)\n\nGuardar Bases Conbinadas: Aquí hau que tener claro cual será carpeta de destino para nuestro caso en data/resultados/combinadas esta carpeta debe existir en el directorio. La función que se usará para guardar es write.csv().\n\npath_out = \"data/resultados/combinadas/\"\n\nfile_name_partes &lt;- \"partes_2015.csv\"\nwrite.csv(x = partes_2015, file = paste0(path_out, file_name_partes))\n\n\nfile_name_particp &lt;- \"participaciones_2015.csv\"\nwrite.csv(x = participaciones_2015, file = paste0(path_out, file_name_particp))\n\n\n\n1.2.2 Datos TXT\nOtra forma de almacenar tablas de datos es mediante archivos de texto plano con extensión .txt y que tambien se utilizan ampliamente para compartir datos porque son compatibles con muchos sistemas diferentes y ocupan relativamente poco espacio de almacenamiento. Utilizaremos la función read.delim() que también es de R base.\n\n\n\n\n\n\nDefinir el elemento separador\n\n\n\nUna consideración importante, para que R entienda que los datos que lee desde un archivo TXT corresponden a tablas de datos, hay que declarar que caracter es separador, en lcaso de los archivos de samples es \"\\t\" que representa tab. Puede variar de cada tipo de archivo.\n\n\nLectura de Unitaria: A continuación procedermos a la lectura de uno de los archivos CSV. Recordar definir un directorio de trabajo que será el punto de partida donde se accederá a los diferentes archivos del proyecto. (Ver Section A.5)\n\n# 1. Definir Diferectorio de trabajo con setwd(\"\") o con Rstudio\n# 2. Lectura y asignar nombre de variables\n\npartes_1T_2015_txt &lt;- read.delim(\n  file = \"data/samples/Base Estadistica/TXT/partes_1er_trim_2015.txt\",\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE) \n\ndim(partes_1T_2015_txt)\nstr(partes_1T_2015_txt)\nhead(partes_1T_2015_txt)\n\nLectura de Secuencial: En este caso si todos los archivos que se van a leer se encuentran en la misma carpeta o directorio se recomienda que declare esa ruta en una variable en R y posteriormente genere la ruta completa adicionando solamente el nombre del archivo para esto usaremos la función paste0() para concatener cadenas de texto.\n\n# Declarar la ruta en una variable (considerar que finaliza con slash \"/\")\npath_txt &lt;-  \"data/samples/Base Estadistica/TXT/\"\n\n# Partes\n# Declarar la ruta del archivo + nombre\npartes_1T_2015_txt &lt;- read.delim(\n  file =  paste0(path_txt, \"partes_1er_trim_2015.txt\"),\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE)\n\npartes_2T_2015_txt &lt;- read.delim(\n  file =  paste0(path_txt, \"partes_2do_trim_2015.txt\"),\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE)\n\n\n# Participaciones\nparticp_1T_2015_txt &lt;- read.delim(\n  file =  paste0(path_txt, \"participantes_1er_trim_2015.txt\"),\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE)\n\nparticp_2T_2015_txt &lt;- read.delim(\n  file =  paste0(path_txt, \"participantes_2do_trim_2015.txt\"),\n  header = TRUE, sep = \"\\t\", quote = \"\",  stringsAsFactors = FALSE)\n\nUnir Bases:\n\n# Verificar si la cantidad de columnas son identicas\ndim(partes_1T_2015_txt)\ndim(partes_2T_2015_txt)\n\n\n# Unir Partes\npartes_2015_txt &lt;-  rbind(partes_1T_2015_txt, partes_2T_2015_txt)\ndim(partes_2015_txt)\n\n\n# Unir Participaciones\nparticipaciones_2015_txt &lt;-  rbind(particp_1T_2015_txt, particp_2T_2015_txt)\ndim(participaciones_2015_txt)\n\nGuardar Bases Conbinadas: La función que se usará para guardar es write.table().\n\npath_out = \"data/resultados/combinadas/\"\n\nfile_name_partes &lt;- \"partes_2015.txt\"\nwrite.table(x = partes_2015_txt, file = paste0(path_out, file_name_partes),\n            sep = \"\\t\", na = \"\", quote = FALSE, eol = \"\\n\")\n\n\nfile_name_particp &lt;- \"participaciones_2015.txt\"\nwrite.table(x = participaciones_2015_txt, file = paste0(path_out, file_name_particp),\n            sep = \"\\t\", na = \"\", quote = FALSE, eol = \"\\n\")\n\n\n\n1.2.3 Datos Espaciales SHP\nLos objetos espaciales en R representan datos georreferenciados, lo que significa que están vinculados a una ubicación en el mundo real. Los objetos espaciales se pueden representar en mapas y gráficos, y se pueden analizar para identificar patrones y tendencias en los datos. Para nuestro casos, los objetos espaciales son tipo puntos que representan casos policiales en formato shapefile.Para su lectura y manipulación utilizaremos la librería sf (Simple Features for R).\n\n\n\n\n\n\nLibrería sf\n\n\n\nEl uso de sf nos facilitará la manipulación de datos espaciales tipo vectorial como puntos, polígonos o líneas, su característica principal es que se trabaja como si fuese una tabla y en una sola columna almacena las información espacial (geometry)\n\n\nLectura de Unitaria: A continuación procedermos a la lectura de uno de los archivos Shapefiles con su estensión .shp. Para la lectura utilizaremos la función st_read()\n\n# 1. Cargar Librería\nlibrary(sf)\n# 2. Lectura y asignar nombre de variables\n\ncasos_T1_2015 &lt;- st_read(dsn = \"data/samples/Base Geo/casos_2015_t1.shp\") \n\ndim(partes_1T_2015_txt)\nstr(partes_1T_2015_txt)\npartes_1T_2015_txt\n\nLectura de Secuencial: En este caso si todos los archivos que se van a leer se encuentran en la misma carpeta o directorio se recomienda que declare esa ruta en una variable en R y posteriormente genere la ruta completa adicionando solamente el nombre del archivo para esto usaremos la función paste0() para concatener cadenas de texto.\n\n# Declarar la ruta en una variable (considerar que finaliza con slash \"/\")\npath_txt &lt;-  \"data/samples/Base Geo/\"\n\n# Casps\n# unir la ruta del archivo + nombre\ncasos_T1_2015 &lt;- st_read(paste0(path_txt, \"casos_2015_t1.shp\"))\ncasos_T2_2015 &lt;- st_read(paste0(path_txt, \"casos_2015_t2.shp\"))\n\nUnir Bases:\nNo se pueden unir ya que no tienen las misma columnas\n\n# Verificar si la cantidad de columnas son identicas\ndim(casos_T1_2015)\ndim(casos_T2_2015)\n\n\n# Unir Partes\ncasos_2015 &lt;-  rbind(casos_T1_2015, casos_T2_2015)\n# Error in rbind.data.frame(...) : \n  # numbers of columns of arguments do not match\n\nSolución 1: Unir solo las colunas en común\n\n# encontrar la columnas en común\ncommon &lt;- intersect(colnames(casos_T1_2015), colnames(casos_T2_2015))\n\n# unir bases seleccionando solo als columnas en común\ncasos_2015_s1 &lt;- rbind(casos_T1_2015[common], casos_T2_2015[common])\ncasos_2015_s1\n\nSolución 2: Unir y en la base faltante rellena con NA usando dplyr::bind_rows()\n\nlibrary(dplyr)\n\ncasos_2015_s2 &lt;- bind_rows(casos_T1_2015, casos_T2_2015)\ncasos_2015_s2 \n\nGuardar Bases Conbinadas: La función que se usará para guardar es write.table().\n\npath_out = \"data/resultados/combinadas/\"\n\nfile_name_comun &lt;- \"casos_2015_comun.shp\"\nst_write(casos_2015_s1, paste0(path_out, file_name_comun), delete_dsn = T)\n\n\n\nfile_name_all &lt;- \"casos_2015_all.shp\"\nst_write(casos_2015_s2, paste0(path_out, file_name_all), delete_dsn = T)"
  },
  {
    "objectID": "datos.html#conclusión",
    "href": "datos.html#conclusión",
    "title": "1  Datos",
    "section": "1.3 Conclusión",
    "text": "1.3 Conclusión\nEn este capítulo se presentaron conocimientos esenciales para la lectura de datos tal como son adquiridos, con el objetivo de representar de manera fidedigna la etapa de pretratamiento que realizan los analistas. Además, se combinaron los diferentes periodos de cada tipo de datos y se guardaron de forma segura. En los siguientes capítulos se presentarán flujos de trabajo más eficientes y automatizados, pero por ahora es importante tener claridad sobre los pasos básicos."
  },
  {
    "objectID": "references.html#bibliográficas",
    "href": "references.html#bibliográficas",
    "title": "References",
    "section": "Bibliográficas",
    "text": "Bibliográficas\nEn proceso."
  },
  {
    "objectID": "references.html#enlaces-de-apoyo",
    "href": "references.html#enlaces-de-apoyo",
    "title": "References",
    "section": "Enlaces de Apoyo",
    "text": "Enlaces de Apoyo\n\nR para Ciencia de Datos\nRStudio para Estadística Descriptiva en Ciencias Sociales\nhttps://bookdown.org/jboscomendoza/r-principiantes4/estructuras-de-control.html"
  },
  {
    "objectID": "r_project.html#qué-es-r-project",
    "href": "r_project.html#qué-es-r-project",
    "title": "Appendix A — R Project",
    "section": "A.1 ¿Qué es R Project?",
    "text": "A.1 ¿Qué es R Project?\nR es un lenguaje programación multiparadigma (procedural, imperativo, orientado a objetos y funcional) enfocado a aplicaciones estadísticas. Por estadísticas se debe entender también los campos de estudio que se basan o las utilizan como económía, finanzas, ciencia de datos, machine learning, etc.\n\nA.1.1 Ventajas de Utilizar R Project\n1. R es un software libre\n\nLa libertad de ejecutar el programa como desee y con cualquier propósito\nEstudiar el funcionamiento del programa y adaptarlo a sus necesidades.\nRescribir copias para ayudar a los demás.\nManejar el programa y publicar las mejorar, de manera que toda comunidad se beneficie.\n\n2. R es multiplataforma\n\nR funciona en Mac, Windows y en numerosos sistemas UNIX. Esto significa que cualquier persona puede trabajar con tus datos, figuras, análisis y más importante aún usar tus instrucciones (también conocido como scripts o código) para generar las figuras y el análisis. Así que cualquier persona, y en cualquier lugar del mundo, con acceso a cualquier SO puede usar R sin ninguna licencia.\n\n3. R es de código abierto\n\nExiste una gran comunidad de voluntarios trabajando para mejorarlo, lo cual permite ser moldeado y dirigido a cuestiones específicas. Creando así programas y paquetes que funcionen en el entorno R. Programas tales como R-studio, Java GUI for R, R- commander, RKWard, entre otros, y con más de 18000 paquetes indexado en CRAN, Biocoductor, GitHub y R-Forge.\n\n4. Todo dentro de un mismo entorno\n\nR remplaza la combinación de varios programas para el proceso de análisis de datos, por ejemplo Excel, ArcGis, QGis, SigmaPlot, entre otros. Esto no solo resulta en el alto costo de las licencias de múltiples programas, si no también, en la gran cantidad de archivos con diferentes formatos que no podrían leer otros programas. En cambio con solo utilizar R, puedes realizar todo el análisis de datos e inclusive leer archivos de diferentes formatos.\n\n\n\nA.1.2 Desventajas de utilizar R\n\nR tiene una vasta documentación de ayuda, descripción de paquetes y de funciones, que es difícil encontrar información específica en un momento dado.\nLos mensajes de error que R nos muestra, no es específica sobre los fallos que estamos realizando y solo un usuario con cierta experiencia en el uso de R puede saberlo."
  },
  {
    "objectID": "r_project.html#instalación-de-r-project",
    "href": "r_project.html#instalación-de-r-project",
    "title": "Appendix A — R Project",
    "section": "A.2 Instalación de R Project",
    "text": "A.2 Instalación de R Project\n\nA.2.1 Instalación de R Project\nPrimero se debe instalar R Project desde su sitio oficial (https://cran.r-project.org/bin/windows/base/), se ejecuta el instalador que se descargó depende del sistema operativo del PC, como se muestra en las siguientes figuras:\n\n\n\nA.2.2 Instalación de R para Windows\n\n\n\n\n\nA.2.3 Instalar Rtools (solo Sistema Operativo Windows)\n\n\n\n\n\n\n\n\nA.2.4 Instalación de R para Mac\n\n\n\nR Project Ejecutándose"
  },
  {
    "objectID": "r_project.html#instalación-de-rstudio",
    "href": "r_project.html#instalación-de-rstudio",
    "title": "Appendix A — R Project",
    "section": "A.3 Instalación de RStudio",
    "text": "A.3 Instalación de RStudio\nSe recomienta instalar Rstudio, que es Interfaz de Usuario de R Project, desde su sitio web oficial, el cual permite acceder con mayor facilidad a sus funciones y potencialidades de R.\n\n\n\n\n\n\n\n\n\nA.3.1 RStudio Cloud\nRStudio Cloud es una versión ligera del IDE RStudio alojada en la la nube que permite a cualquiera hacer, compartir, enseñar y aprender Ciencias de Datos Online. Tiene una versión gratuita limitada.\n\nA.3.1.1 Características:\n\nAnalyze your data using the RStudio IDE, directly from your browser.\nShare projects with your team, class, workshop or the world.\nTeach data science with R to your students or colleagues.\nLearn data science in an instructor-led environment or with interactive tutorials."
  },
  {
    "objectID": "r_project.html#instalar-librerías",
    "href": "r_project.html#instalar-librerías",
    "title": "Appendix A — R Project",
    "section": "A.4 Instalar Librerías",
    "text": "A.4 Instalar Librerías\n\nA.4.1 Librerías en R\nLas librerías o paquetes en R corresponden a una colección de funciones encapsuladas y diseñadas para atender una tarea específica. Por ejemplo, hay paquetes para trabajo visualización geoespacial, análisis psicométricos, mineria de datos, interacción con servicios de internet y muchas otras cosas más.\nEstos paquetes se encuentran alojados principalmente en CRAN (Comprehensive R Archive Network), así que pasan por un control riguroso antes de estar disponibles para su uso generalizado, al día de hoy (29.11.2021) existen 18498 paquetes disponibles. En el siguiente enlace se deja una lista de temas y sus librerías asociadas disponibles, con una breve descripción (enlace)\nAunque las versiones de prueba de una librería pueden estar disponible en Github (Respositorio de Control de Versiones) de cada autor.\n\n\nA.4.2 Ejemplo de Instalación de Librerías desde R\nPodemos instalar paquetes usando la función install.packages(), dando como argumento el nombre del paquete que deseamos instalar, entre comillas.\nPara instalar librerías se puede hacer directamente desde la consola de RStudio, por ejemplo:\n\ninstall.packages(\"dplyr\") # Se puede instalar más de una librería a la vez\n\n\n\nA.4.3 Ejemplo de Instalación de Librerías desde Rstudio\nTambién se pude instalar librerías del Panel “Packages”\n\n\n\nY por último se puede instalar desde Pestaña “Tools” -&gt; “Install Packages”:"
  },
  {
    "objectID": "r_project.html#sec-wd",
    "href": "r_project.html#sec-wd",
    "title": "Appendix A — R Project",
    "section": "A.5 Definición de Directorios de Trabajos",
    "text": "A.5 Definición de Directorios de Trabajos\nDefinir directorio de Trabajo con RStudio\n\n\n\n\n\n\nDefinir Directorio de Trabajo con una función\n\nsetwd(\"~/OneDrive - Universidad Adolfo Ibanez/FONDECYT/capacitacion_SPD\")\n\nConsultar Directorio de Trabajo\n\ngetwd()\n\n[1] \"/Users/denisberroeta/Library/CloudStorage/OneDrive-UniversidadAdolfoIbanez/FONDECYT/CURSO_SPD/book_SPD\""
  },
  {
    "objectID": "r_project.html#referencias",
    "href": "r_project.html#referencias",
    "title": "Appendix A — R Project",
    "section": "A.6 Referencias:",
    "text": "A.6 Referencias:\n\nR para Ciencia de Datos\nRStudio para Estadística Descriptiva en Ciencias Sociales\nhttps://bookdown.org/jboscomendoza/r-principiantes4/estructuras-de-control.html"
  },
  {
    "objectID": "variables.html#tipos-de-objetos-en-r",
    "href": "variables.html#tipos-de-objetos-en-r",
    "title": "Appendix B — Variables en R",
    "section": "B.1 Tipos de Objetos en R",
    "text": "B.1 Tipos de Objetos en R\nLos Datos en R se pueden clasificar por su dimensiones y los tipos de Datos que permiten almacenar, como se muestra en la siguiente tabla:\n\n\n\nDimensiones\nHomogéneos\nHeterogéneos\n\n\n\n\n1d\nAtomic vector\nList\n\n\n2d\nMatrix\nData frame\n\n\nnd\nArray\n\n\n\n\nFuente: http://adv-r.had.co.nz/Data-structures.html\nR nos permite definir variables que pueden ser luego usadas en las distintas operaciones. El lenguaje no solo permite definir escalares (variable de un numero), si no también variables que sean un conjunto de numero o caracteres ordenados.\n\nB.1.1 Variables Numéricas\n\n# La asignación en R son válidos 2 métodos '&lt;-' o '='\nx &lt;- 7 # Definir variable (escalar) x que sea igual a 7\nx # Mostrar que es x\n\n[1] 7\n\ny &lt;- 3 + 2 * x # Crear y como funcion de x \ny\n\n[1] 17\n\nclass(y)\n\n[1] \"numeric\"\n\n\nNúmeros Random con decimales\n\nru &lt;- runif(n = 100, min = 1, max = 10)\nru\n\n  [1] 9.819373 3.162652 1.791301 8.207440 9.745610 9.709064 6.014936 9.248421\n  [9] 3.595919 9.755106 3.288245 1.188955 3.159780 4.600412 1.211738 4.514676\n [17] 3.624898 1.493455 1.307009 3.190486 8.204793 8.847103 3.605932 9.814299\n [25] 4.016378 3.701112 2.689440 6.916065 2.366390 5.342954 5.550205 9.185820\n [33] 4.673657 7.550026 3.755472 3.501223 4.170493 8.155967 5.099805 1.283847\n [41] 2.236970 7.276799 5.822264 4.740180 3.910217 9.750434 7.164179 8.860296\n [49] 4.978060 4.174352 2.114733 3.729049 9.910654 2.664017 4.597844 6.095139\n [57] 3.342195 9.143249 5.274444 6.040196 5.129439 1.214089 4.165977 4.103493\n [65] 7.505768 9.223327 9.443297 6.440614 4.061961 9.120099 1.854217 8.416436\n [73] 4.926488 2.733530 2.242417 1.777845 7.898571 5.137785 9.466125 3.439630\n [81] 8.520574 1.039834 6.656517 6.387003 6.643564 8.989205 7.083023 6.267348\n [89] 8.511942 6.360875 1.736470 6.330071 8.225648 8.697978 3.422563 7.594528\n [97] 3.537443 4.123691 7.132728 5.825531\n\n\n\nhist(ru, breaks = 20, col = \"orange\", border = \"gray60\", \n     main = \"Histograma de valores Random\")\n\n\n\n\n\n\n\n\nNúmeros Random Enteros\nSimular los lanzamientos de un dado\n\nsample.int(n = 6, size = 10, replace = T)\n\n [1] 5 1 4 5 6 6 4 4 5 2\n\n\n\n\nB.1.2 Variables de Caracter\n\nch &lt;- \"Chile\" # Definir variable (objeto) ch que sea la palabra \"Chile\"\nsn &lt;- \"Santiago\"\nch # Mostrar ch\n\n[1] \"Chile\"\n\nsn\n\n[1] \"Santiago\"\n\n\nUnir variables de texto con paste()\n\nch &lt;- \"Chile\" # Definir variable (objeto) ch que sea la palabra \"Chile\"\nsn &lt;- \"Santiago\"\nunion &lt;- paste(sn,ch, sep = \", \")\nunion\n\n[1] \"Santiago, Chile\"\n\n\nUtilizar paste0()\n\nunion &lt;- paste(\"Provincia de \", sn,ch, sep = \", \")\nunion\n\n[1] \"Provincia de , Santiago, Chile\"\n\nunion0 &lt;- paste0(\"Provincia de \", sn, \", \", ch)\nunion0\n\n[1] \"Provincia de Santiago, Chile\"\n\n\nBuscar y reemplazar con gsub\n\nav &lt;- \"Av. Apoquindo\"\ncomuna &lt;- \"comuna de Las Condes\"\ncalle &lt;- paste(av, comuna, union0, sep = \", \")\ncalle\n\n[1] \"Av. Apoquindo, comuna de Las Condes, Provincia de Santiago, Chile\"\n\n# reemplazar Av. por Avenida\ncalle_new &lt;- gsub(pattern = \"Av.\", replacement = \"Avenida\", x = calle)\ncalle_new\n\n[1] \"Avenida Apoquindo, comuna de Las Condes, Provincia de Santiago, Chile\""
  },
  {
    "objectID": "variables.html#estructuras-de-datos",
    "href": "variables.html#estructuras-de-datos",
    "title": "Appendix B — Variables en R",
    "section": "B.2 Estructuras de Datos",
    "text": "B.2 Estructuras de Datos\nLas variables pueden ser un conjunto de números y caracteres ordenados de varias maneras. El orden que se les da depende de lo que queremos lograr con estos.\n\nVector\nMatrices\nDataframes\nFactores\nListas\n\n\nB.2.1 Vectores\nVector Cadenas unidimensionales (es decir una sola columna o fila) de un tipo único de valores (numéricos, caracteres, etc.)\n\nvec &lt;-  c(4, 3, 1, 5, 8, 16)\nvec\n\n[1]  4  3  1  5  8 16\n\nclass(vec)\n\n[1] \"numeric\"\n\nstr(vec)\n\n num [1:6] 4 3 1 5 8 16\n\n\nPodemos seleccionar parte del vector:\n\n# EL primer índice en R es 1 (en otros lenguajes de programación es 0)\nvec[3]\n\n[1] 1\n\n\nLa selección también puede ser hecha con una condición, de tal manera que solo seleccione aquella parte del vector que cumple con la condición.\nMayor a:\n\nvec[vec &gt;= 4]\n\n[1]  4  5  8 16\n\n\nContenido en:\n\nvec[vec %in% c(3, 8, 7, 29)]\n\n[1] 3 8\n\n\nNegación de la condición:\n\nvec[!vec &lt;= 3]\n\n[1]  4  5  8 16\n\n\nTambién podemos realizar operaciones matemáticas simples aplicadas al vector, por ejemplo una suma:\n\nvec2  &lt;-  c(7, 10, 1)\nvec + vec2\n\n[1] 11 13  2 12 18 17\n\n\n\n\nB.2.2 Listas\nSon estructuras eficientes y flexibles, que permiten combinar distintas clases de elementos :\n\nlista &lt;-  list(1, 2, 3, \"cosa\", x, y)\nlista\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3\n\n[[4]]\n[1] \"cosa\"\n\n[[5]]\n[1] 7\n\n[[6]]\n[1] 17\n\nstr(lista)\n\nList of 6\n $ : num 1\n $ : num 2\n $ : num 3\n $ : chr \"cosa\"\n $ : num 7\n $ : num 17\n\n\n\n#Tambien se puede seleccionar parte de una lista, usando el doble corchete:\nlista[[3]]\n\n[1] 3\n\n\nComo inspeccionar una lista con Rstudio\n\n\n\n\n\nB.2.3 Matrices\nSon estructuras de datos con 2 dimensiones, horizontal y la vertical (filas y columnas). Podemos construirlas usando la función “matrix”, con un vector inicial y sus dimensiones:\n\nn &lt;- matrix(c(1.3, 2.8, 3.5, 6.4, 5.3, 6.2, 7, 4.5, 2.4, 6.3, 5.6, 5.3, 6.6, 7, 4.3),\n  nrow = 5, ncol = 3, byrow = TRUE)\nn\n\n     [,1] [,2] [,3]\n[1,]  1.3  2.8  3.5\n[2,]  6.4  5.3  6.2\n[3,]  7.0  4.5  2.4\n[4,]  6.3  5.6  5.3\n[5,]  6.6  7.0  4.3\n\n\nLa matriz tiene 2 dimensiones, por lo que para seleccionar partes de ella es necesario declarar dos dimensiones separadas por una coma. A la izquierda van las filas y a la derecha las columnas. Un valor vacío indica que se seleccionan todos los valores posibles.\n\nn[1,2]\n\n[1] 2.8\n\n\n\nn[,3]\n\n[1] 3.5 6.2 2.4 5.3 4.3\n\n\n\n\nB.2.4 Dataframes\nEstructura mas clásica de datos, es una matriz pero con mas atributos como nombres de columna y/o fila. Es lo mas similar en R a una tabla excel o la tabla de atributos. La manera mas simple de crear un dataframe es a partir de una matriz usando la función as.data.frame() :\n\ndf&lt;- as.data.frame(n)\ndf\n\n   V1  V2  V3\n1 1.3 2.8 3.5\n2 6.4 5.3 6.2\n3 7.0 4.5 2.4\n4 6.3 5.6 5.3\n5 6.6 7.0 4.3\n\n\nPodemos asignar nombres a las columnas del dataframe\n\nnames(df)&lt;- c(\"control_1\",\"control_2\",\"examen\")\ndf\n\n  control_1 control_2 examen\n1       1.3       2.8    3.5\n2       6.4       5.3    6.2\n3       7.0       4.5    2.4\n4       6.3       5.6    5.3\n5       6.6       7.0    4.3\n\n\nY a las filas del dataframe\n\ndf$alumno &lt;- c(\"Sofia\",\"Tomas\",\"Luciano\",\"Julian\",\"Gabriela\")\ndf\n\n  control_1 control_2 examen   alumno\n1       1.3       2.8    3.5    Sofia\n2       6.4       5.3    6.2    Tomas\n3       7.0       4.5    2.4  Luciano\n4       6.3       5.6    5.3   Julian\n5       6.6       7.0    4.3 Gabriela\n\n\nTambién podemos realizar operaciones entre vectores del dataframe:\n\ndf$promedio_final &lt;-  0.3*df$control_1 + 0.3*df$control_2 + 0.4*df$examen\ndf\n\n  control_1 control_2 examen   alumno promedio_final\n1       1.3       2.8    3.5    Sofia           2.63\n2       6.4       5.3    6.2    Tomas           5.99\n3       7.0       4.5    2.4  Luciano           4.41\n4       6.3       5.6    5.3   Julian           5.69\n5       6.6       7.0    4.3 Gabriela           5.80"
  },
  {
    "objectID": "tarea_1.html#antecedentes",
    "href": "tarea_1.html#antecedentes",
    "title": "Tarea 1",
    "section": "Antecedentes",
    "text": "Antecedentes\n\nFecha de entrega: 12 de Septiembre 2023\nFormato: Informe (docx, pdf) + Código (.R)\nIntegrantes: 3"
  },
  {
    "objectID": "tarea_1.html#instrucciones",
    "href": "tarea_1.html#instrucciones",
    "title": "Tarea 1",
    "section": "Instrucciones",
    "text": "Instrucciones\n\nParte 1: CSV\n\nLectura secuencial de archivos reales (no samples)\nUnir y Guardar\nVisualización de resultados (head, dim)\n\n\n\nParte 2: TXT\n\nLectura secuencial de archivos reales (no samples)\nUnir y Guardar\nVisualización de resultados (head, dim)\n\n\n\nParte 3: SHP\n\nLectura secuencial de archivos reales (no samples)\nUnir (dos soluciones y justificar la mejor opción) y Guardarlos\nVisualización de resultados (head, dim)"
  }
]